<?php
/**
 * Generated by Haxe 4.1.3
 */

namespace psgg2mermaid;

use \lib\util\BranchUtil;
use \system\text\Encoding;
use \php\Boot;
use \system\Cs2Hx;
use \system\collections\generic\Dictionary;
use \psgg\HxFile;
use \php\_Boot\HxString;
use \lib\util\PsggDataFileUtil;
use \system\Console;

class Program {
	/**
	 * @param string $psggdata
	 * @param bool $bDidpContents
	 * 
	 * @return string
	 */
	public static function Convert ($psggdata, $bDidpContents) {
		#src/psgg2mermaid/Program.hx:26: lines 26-30
		$valid = function ($v) {
			#src/psgg2mermaid/Program.hx:28: characters 13-50
			return !(($v === null) || (mb_strlen($v) === 0));
		};
		#src/psgg2mermaid/Program.hx:31: characters 9-100
		$item = PsggDataFileUtil::ReadPsggData($psggdata);
		#src/psgg2mermaid/Program.hx:32: characters 9-56
		$states = $item->GetAllStates();
		#src/psgg2mermaid/Program.hx:33: characters 9-52
		$NL = "\x0A";
		#src/psgg2mermaid/Program.hx:34: characters 9-30
		$DQ = "\"";
		#src/psgg2mermaid/Program.hx:35: characters 9-33
		$BR = "<br/>";
		#src/psgg2mermaid/Program.hx:36: characters 9-64
		$s = "graph LR" . ((($NL === null ? "" : $NL))??'null');
		#src/psgg2mermaid/Program.hx:37: characters 9-33
		$tab = "    ";
		#src/psgg2mermaid/Program.hx:38: characters 9-152
		$styledic = new Dictionary();
		#src/psgg2mermaid/Program.hx:39: lines 39-52
		$addstyle = function ($stylename, $state) use (&$styledic) {
			#src/psgg2mermaid/Program.hx:41: lines 41-44
			if (!$styledic->ContainsKey($stylename)) {
				#src/psgg2mermaid/Program.hx:43: characters 17-61
				$styledic->Add($stylename, new \Array_hx());
			}
			#src/psgg2mermaid/Program.hx:45: characters 13-72
			$list = $styledic->GetValue_TKey($stylename);
			#src/psgg2mermaid/Program.hx:46: lines 46-49
			if (Cs2Hx::IndexOf($list, $state) === -1) {
				#src/psgg2mermaid/Program.hx:48: characters 17-33
				$list->arr[$list->length++] = $state;
			}
			#src/psgg2mermaid/Program.hx:50: characters 13-52
			$styledic->SetValue_TKey($stylename, $list);
		};
		#src/psgg2mermaid/Program.hx:53: lines 53-61
		$MKBR = function ($ss) use (&$BR) {
			#src/psgg2mermaid/Program.hx:55: lines 55-58
			if (($ss === null) || (mb_strlen($ss) === 0)) {
				#src/psgg2mermaid/Program.hx:57: characters 17-26
				return "";
			}
			#src/psgg2mermaid/Program.hx:59: characters 13-98
			return \StringTools::replace(\StringTools::replace($ss, "\x0D\x0A", $BR), "\x0A", $BR);
		};
		#src/psgg2mermaid/Program.hx:62: lines 62-70
		$modEnd = function ($ss) use (&$valid) {
			#src/psgg2mermaid/Program.hx:64: lines 64-67
			if ($valid($ss)) {
				#src/psgg2mermaid/Program.hx:66: characters 17-48
				return \StringTools::replace($ss, "end", "END");
			}
			#src/psgg2mermaid/Program.hx:68: characters 13-22
			return $ss;
		};
		#src/psgg2mermaid/Program.hx:71: lines 71-270
		$_g = 0;
		while ($_g < $states->length) {
			#src/psgg2mermaid/Program.hx:71: characters 14-16
			$st = ($states->arr[$_g] ?? null);
			#src/psgg2mermaid/Program.hx:71: lines 71-270
			++$_g;
			#src/psgg2mermaid/Program.hx:73: lines 73-76
			if (\mb_substr($st, 0, mb_strlen("S_")) !== "S_") {
				#src/psgg2mermaid/Program.hx:75: characters 17-25
				continue;
			}
			#src/psgg2mermaid/Program.hx:77: characters 13-59
			$cmt = $item->GetVal($st, "state-cmt");
			#src/psgg2mermaid/Program.hx:78: characters 13-65
			$nextstate = $item->GetVal($st, "nextstate");
			#src/psgg2mermaid/Program.hx:79: characters 13-59
			$typ = $item->GetVal($st, "state-typ");
			#src/psgg2mermaid/Program.hx:80: characters 13-62
			$gosub = $item->GetVal($st, "gosubstate");
			#src/psgg2mermaid/Program.hx:81: characters 13-64
			$loopinit = $item->GetVal($st, "loop_init");
			#src/psgg2mermaid/Program.hx:82: characters 13-64
			$loopcond = $item->GetVal($st, "loop_cond");
			#src/psgg2mermaid/Program.hx:83: characters 13-64
			$loopnext = $item->GetVal($st, "loop_next");
			#src/psgg2mermaid/Program.hx:84: characters 13-38
			$contents = "";
			#src/psgg2mermaid/Program.hx:85: lines 85-145
			if ($bDidpContents) {
				#src/psgg2mermaid/Program.hx:87: characters 17-62
				$names = $item->GetAllNames();
				#src/psgg2mermaid/Program.hx:88: lines 88-144
				$_g1 = 0;
				while ($_g1 < $names->length) {
					#src/psgg2mermaid/Program.hx:88: characters 22-23
					$n = ($names->arr[$_g1] ?? null);
					#src/psgg2mermaid/Program.hx:88: lines 88-144
					++$_g1;
					#src/psgg2mermaid/Program.hx:90: lines 90-93
					if (\mb_substr($n, 0, mb_strlen("!")) === "!") {
						#src/psgg2mermaid/Program.hx:92: characters 25-33
						continue;
					}
					#src/psgg2mermaid/Program.hx:94: lines 94-97
					if (\mb_substr($n, 0, mb_strlen("state")) === "state") {
						#src/psgg2mermaid/Program.hx:96: characters 25-33
						continue;
					}
					#src/psgg2mermaid/Program.hx:98: lines 98-101
					if (\mb_substr($n, 0, mb_strlen("branch")) === "branch") {
						#src/psgg2mermaid/Program.hx:100: characters 25-33
						continue;
					}
					#src/psgg2mermaid/Program.hx:102: lines 102-105
					if (\mb_substr($n, 0, mb_strlen("brcond")) === "brcond") {
						#src/psgg2mermaid/Program.hx:104: characters 25-33
						continue;
					}
					#src/psgg2mermaid/Program.hx:106: lines 106-109
					if ($n === "basestate") {
						#src/psgg2mermaid/Program.hx:108: characters 25-33
						continue;
					}
					#src/psgg2mermaid/Program.hx:110: lines 110-113
					if ($n === "nextstate") {
						#src/psgg2mermaid/Program.hx:112: characters 25-33
						continue;
					}
					#src/psgg2mermaid/Program.hx:114: lines 114-117
					if (HxString::indexOf($n, "-cmt") >= 0) {
						#src/psgg2mermaid/Program.hx:116: characters 25-33
						continue;
					}
					#src/psgg2mermaid/Program.hx:118: lines 118-121
					if ($n === "gosubstate") {
						#src/psgg2mermaid/Program.hx:120: characters 25-33
						continue;
					}
					#src/psgg2mermaid/Program.hx:122: lines 122-125
					if ($n === "return") {
						#src/psgg2mermaid/Program.hx:124: characters 25-33
						continue;
					}
					#src/psgg2mermaid/Program.hx:126: lines 126-129
					if (\mb_substr($n, 0, mb_strlen("loop_")) === "loop_") {
						#src/psgg2mermaid/Program.hx:128: characters 25-33
						continue;
					}
					#src/psgg2mermaid/Program.hx:130: characters 21-55
					$t = $item->GetVal($st, $n);
					#src/psgg2mermaid/Program.hx:131: lines 131-143
					if ($valid($t)) {
						#src/psgg2mermaid/Program.hx:133: lines 133-136
						if ($valid($contents)) {
							#src/psgg2mermaid/Program.hx:135: characters 29-43
							$contents = ($contents??'null') . ($BR??'null');
						}
						#src/psgg2mermaid/Program.hx:137: lines 137-141
						if ($n === "nowait") {
							#src/psgg2mermaid/Program.hx:139: characters 29-50
							$contents = ($contents??'null') . "nowait;";
							#src/psgg2mermaid/Program.hx:140: characters 29-37
							continue;
						}
						#src/psgg2mermaid/Program.hx:142: characters 25-44
						$contents = ($contents??'null') . ($MKBR($t)??'null');
					}
				}
			}
			#src/psgg2mermaid/Program.hx:146: characters 13-59
			$branch = $item->GetVal($st, "branch");
			#src/psgg2mermaid/Program.hx:147: characters 13-59
			$brcond = $item->GetVal($st, "brcond");
			#src/psgg2mermaid/Program.hx:148: characters 13-62
			$brcmt = $item->GetVal($st, "branch-cmt");
			#src/psgg2mermaid/Program.hx:149: characters 13-99
			$britem = BranchUtil::Read($branch, $brcond, $brcmt);
			#src/psgg2mermaid/Program.hx:150: lines 150-153
			if ($valid($cmt)) {
				#src/psgg2mermaid/Program.hx:152: characters 17-32
				$cmt = $MKBR($cmt);
			}
			#src/psgg2mermaid/Program.hx:154: lines 154-161
			if (($typ === "gosub") && $valid($gosub)) {
				#src/psgg2mermaid/Program.hx:156: lines 156-159
				if ($valid($cmt)) {
					#src/psgg2mermaid/Program.hx:158: characters 21-30
					$cmt = ($cmt??'null') . ($BR??'null');
				}
				#src/psgg2mermaid/Program.hx:160: characters 34-73
				$str = \mb_substr($gosub, 2, null);
				#src/psgg2mermaid/Program.hx:160: characters 17-73
				$cmt = ($cmt??'null') . "CALL " . ((($str === null ? "" : $str))??'null');
			}
			#src/psgg2mermaid/Program.hx:162: lines 162-166
			if ($typ === "loop") {
				#src/psgg2mermaid/Program.hx:164: characters 17-339
				$t1 = "LOOP (" . ((($BR === null ? "" : $BR))??'null') . ((($loopinit === null ? "" : $loopinit))??'null') . ((($BR === null ? "" : $BR))??'null') . ((($loopcond === null ? "" : $loopcond))??'null') . ((($BR === null ? "" : $BR))??'null') . ((($loopnext === null ? "" : $loopnext))??'null') . ((($BR === null ? "" : $BR))??'null') . ")" . ((($BR === null ? "" : $BR))??'null') . "CALL " . ((($gosub === null ? "" : $gosub))??'null');
				#src/psgg2mermaid/Program.hx:165: characters 17-25
				$cmt = ($cmt??'null') . ($t1??'null');
			}
			#src/psgg2mermaid/Program.hx:167: lines 167-174
			if ($valid($contents)) {
				#src/psgg2mermaid/Program.hx:169: lines 169-172
				if ($valid($cmt)) {
					#src/psgg2mermaid/Program.hx:171: characters 21-30
					$cmt = ($cmt??'null') . ($BR??'null');
				}
				#src/psgg2mermaid/Program.hx:173: characters 17-32
				$cmt = ($cmt??'null') . ($contents??'null');
			}
			#src/psgg2mermaid/Program.hx:175: lines 175-178
			if ($valid($cmt)) {
				#src/psgg2mermaid/Program.hx:177: characters 17-45
				$cmt = \StringTools::replace($cmt, "\"", "`");
			}
			#src/psgg2mermaid/Program.hx:179: characters 28-54
			$v = ($DQ === null ? "" : $DQ);
			#src/psgg2mermaid/Program.hx:179: characters 57-136
			$str1 = (\mb_substr($st, 0, mb_strlen("S_")) === "S_" ? \mb_substr($st, 2, null) : $st);
			#src/psgg2mermaid/Program.hx:179: characters 139-239
			$str2 = ($valid($cmt) ? ((($BR === null ? "" : $BR))??'null') . ((($cmt === null ? "" : $cmt))??'null') : "");
			#src/psgg2mermaid/Program.hx:179: characters 13-269
			$v1 = ($v??'null') . ((($str1 === null ? "" : $str1))??'null') . ((($str2 === null ? "" : $str2))??'null') . ((($DQ === null ? "" : $DQ))??'null');
			#src/psgg2mermaid/Program.hx:180: lines 180-265
			if ($britem === null) {
				#src/psgg2mermaid/Program.hx:182: lines 182-211
				if (($typ === "gosub") || ($typ === "loop")) {
					#src/psgg2mermaid/Program.hx:184: lines 184-187
					if ($valid($nextstate)) {
						#src/psgg2mermaid/Program.hx:186: characters 60-165
						$str3 = Program::string_Format_String_String_String_String("{0}[[{1}]] --> {2}", $st, $v1, $nextstate);
						#src/psgg2mermaid/Program.hx:186: characters 25-194
						$s = ($s??'null') . ((($tab === null ? "" : $tab))??'null') . ((($str3 === null ? "" : $str3))??'null') . ((($NL === null ? "" : $NL))??'null');
					}
				} else {
					#src/psgg2mermaid/Program.hx:191: characters 21-44
					$op_br = "[";
					#src/psgg2mermaid/Program.hx:192: characters 21-44
					$cl_br = "]";
					#src/psgg2mermaid/Program.hx:193: lines 193-197
					if (($typ === "start") || ($typ === "end")) {
						#src/psgg2mermaid/Program.hx:195: characters 25-37
						$op_br = "((";
						#src/psgg2mermaid/Program.hx:196: characters 25-37
						$cl_br = "))";
					}
					#src/psgg2mermaid/Program.hx:198: lines 198-202
					if (($typ === "substart") || ($typ === "subreturn")) {
						#src/psgg2mermaid/Program.hx:200: characters 25-36
						$op_br = "(";
						#src/psgg2mermaid/Program.hx:201: characters 25-36
						$cl_br = ")";
					}
					#src/psgg2mermaid/Program.hx:203: lines 203-210
					if ($valid($nextstate)) {
						#src/psgg2mermaid/Program.hx:205: characters 60-235
						$str4 = Program::string_Format_String_String_String_String("{0}" . ((($op_br === null ? "" : $op_br))??'null') . "{1}" . ((($cl_br === null ? "" : $cl_br))??'null') . " --> {2}", $st, $v1, $nextstate);
						#src/psgg2mermaid/Program.hx:205: characters 25-264
						$s = ($s??'null') . ((($tab === null ? "" : $tab))??'null') . ((($str4 === null ? "" : $str4))??'null') . ((($NL === null ? "" : $NL))??'null');
					} else {
						#src/psgg2mermaid/Program.hx:209: characters 60-204
						$str5 = Program::string_Format_String_String_String("{0}" . ((($op_br === null ? "" : $op_br))??'null') . "{1}" . ((($cl_br === null ? "" : $cl_br))??'null'), $st, $v1);
						#src/psgg2mermaid/Program.hx:209: characters 25-233
						$s = ($s??'null') . ((($tab === null ? "" : $tab))??'null') . ((($str5 === null ? "" : $str5))??'null') . ((($NL === null ? "" : $NL))??'null');
					}
				}
			} else {
				#src/psgg2mermaid/Program.hx:215: characters 17-80
				$branch_node = ((($st === null ? "" : $st))??'null') . "____br";
				#src/psgg2mermaid/Program.hx:216: characters 52-157
				$str6 = Program::string_Format_String_String_String_String("{0}[{1}] ==> {2}", $st, $v1, $branch_node);
				#src/psgg2mermaid/Program.hx:216: characters 17-186
				$s = ($s??'null') . ((($tab === null ? "" : $tab))??'null') . ((($str6 === null ? "" : $str6))??'null') . ((($NL === null ? "" : $NL))??'null');
				#src/psgg2mermaid/Program.hx:218: characters 21-35
				$n1 = 0;
				#src/psgg2mermaid/Program.hx:219: lines 219-263
				while ($n1 < $britem->count()) {
					unset($bcmt);
					#src/psgg2mermaid/Program.hx:221: characters 25-60
					$api = $britem->get_api($n1);
					#src/psgg2mermaid/Program.hx:222: characters 25-61
					$cod = $britem->get_cond($n1);
					#src/psgg2mermaid/Program.hx:223: characters 25-62
					$nst = $britem->get_state($n1);
					#src/psgg2mermaid/Program.hx:224: characters 25-58
					$c = $britem->get_cmt($n1);
					#src/psgg2mermaid/Program.hx:225: characters 25-46
					$bcmt = $DQ;
					#src/psgg2mermaid/Program.hx:226: lines 226-237
					$addif = function ($vv) use (&$valid, &$bcmt, &$DQ) {
						#src/psgg2mermaid/Program.hx:228: lines 228-235
						if ($valid($vv)) {
							#src/psgg2mermaid/Program.hx:230: lines 230-233
							if ($bcmt !== $DQ) {
								#src/psgg2mermaid/Program.hx:232: characters 37-48
								$bcmt = ($bcmt??'null') . " ";
							}
							#src/psgg2mermaid/Program.hx:234: characters 33-43
							$bcmt = ($bcmt??'null') . ($vv??'null');
						}
					};
					#src/psgg2mermaid/Program.hx:238: lines 238-252
					if ($valid($c)) {
						#src/psgg2mermaid/Program.hx:240: characters 29-38
						$bcmt = ($bcmt??'null') . ($c??'null');
					} else if ($valid($cod)) {
						#src/psgg2mermaid/Program.hx:246: characters 33-43
						$addif($cod);
					} else {
						#src/psgg2mermaid/Program.hx:250: characters 33-43
						$addif($api);
					}
					#src/psgg2mermaid/Program.hx:253: characters 25-35
					$bcmt = ($bcmt??'null') . ($DQ??'null');
					#src/psgg2mermaid/Program.hx:254: lines 254-261
					if ($n1 === 0) {
						#src/psgg2mermaid/Program.hx:256: characters 64-250
						$str7 = Program::string_Format_String_String_String_String_String("{0}{{{1}}} -->|{2}| {3}", $branch_node, ((($DQ === null ? "" : $DQ))??'null') . "?" . ((($DQ === null ? "" : $DQ))??'null'), $bcmt, $nst);
						#src/psgg2mermaid/Program.hx:256: characters 29-279
						$s = ($s??'null') . ((($tab === null ? "" : $tab))??'null') . ((($str7 === null ? "" : $str7))??'null') . ((($NL === null ? "" : $NL))??'null');
					} else {
						#src/psgg2mermaid/Program.hx:260: characters 64-173
						$str8 = Program::string_Format_String_String_String_String("{0} -->|{1}| {2}", $branch_node, $bcmt, $nst);
						#src/psgg2mermaid/Program.hx:260: characters 29-202
						$s = ($s??'null') . ((($tab === null ? "" : $tab))??'null') . ((($str8 === null ? "" : $str8))??'null') . ((($NL === null ? "" : $NL))??'null');
					}
					#src/psgg2mermaid/Program.hx:262: characters 25-28
					++$n1;
				}
			}
			#src/psgg2mermaid/Program.hx:266: lines 266-269
			if ($valid($typ)) {
				#src/psgg2mermaid/Program.hx:268: characters 35-76
				$str9 = \mb_strtoupper($typ);
				#src/psgg2mermaid/Program.hx:268: characters 17-81
				$addstyle("typ_" . ((($str9 === null ? "" : $str9))??'null'), $st);
			}
		}
		#src/psgg2mermaid/Program.hx:271: lines 271-285
		$_g = 0;
		while ($_g < $states->length) {
			#src/psgg2mermaid/Program.hx:271: characters 14-16
			$st = ($states->arr[$_g] ?? null);
			#src/psgg2mermaid/Program.hx:271: lines 271-285
			++$_g;
			#src/psgg2mermaid/Program.hx:273: lines 273-276
			if (\mb_substr($st, 0, mb_strlen("C_")) !== "C_") {
				#src/psgg2mermaid/Program.hx:275: characters 17-25
				continue;
			}
			#src/psgg2mermaid/Program.hx:277: characters 13-59
			$cmt = $item->GetVal($st, "state-cmt");
			#src/psgg2mermaid/Program.hx:278: lines 278-281
			if ($cmt !== null) {
				#src/psgg2mermaid/Program.hx:280: characters 17-32
				$cmt = $MKBR($cmt);
			}
			#src/psgg2mermaid/Program.hx:282: characters 28-54
			$v = ($DQ === null ? "" : $DQ);
			#src/psgg2mermaid/Program.hx:282: characters 86-186
			$str = ($valid($cmt) ? ((($BR === null ? "" : $BR))??'null') . ((($cmt === null ? "" : $cmt))??'null') : "");
			#src/psgg2mermaid/Program.hx:282: characters 13-216
			$v1 = ($v??'null') . ((($st === null ? "" : $st))??'null') . ((($str === null ? "" : $str))??'null') . ((($DQ === null ? "" : $DQ))??'null');
			#src/psgg2mermaid/Program.hx:283: characters 48-125
			$str1 = Program::string_Format_String_String_String("{0}[{1}]", $st, $v1);
			#src/psgg2mermaid/Program.hx:283: characters 13-154
			$s = ($s??'null') . ((($tab === null ? "" : $tab))??'null') . ((($str1 === null ? "" : $str1))??'null') . ((($NL === null ? "" : $NL))??'null');
			#src/psgg2mermaid/Program.hx:284: characters 13-36
			$addstyle("comment", $st);
		}
		#src/psgg2mermaid/Program.hx:286: lines 286-306
		$_g = 0;
		while ($_g < $states->length) {
			#src/psgg2mermaid/Program.hx:286: characters 14-16
			$st = ($states->arr[$_g] ?? null);
			#src/psgg2mermaid/Program.hx:286: lines 286-306
			++$_g;
			#src/psgg2mermaid/Program.hx:288: lines 288-291
			if (\mb_substr($st, 0, mb_strlen("E_")) !== "E_") {
				#src/psgg2mermaid/Program.hx:290: characters 17-25
				continue;
			}
			#src/psgg2mermaid/Program.hx:292: characters 13-59
			$cmt = $item->GetVal($st, "state-cmt");
			#src/psgg2mermaid/Program.hx:293: lines 293-296
			if ($cmt !== null) {
				#src/psgg2mermaid/Program.hx:295: characters 17-32
				$cmt = $MKBR($cmt);
			}
			#src/psgg2mermaid/Program.hx:297: characters 13-57
			$embed = $item->GetVal($st, "embed");
			#src/psgg2mermaid/Program.hx:298: lines 298-302
			if ($bDidpContents && $valid($embed)) {
				#src/psgg2mermaid/Program.hx:300: characters 17-36
				$embed = $MKBR($embed);
				#src/psgg2mermaid/Program.hx:301: characters 17-82
				$cmt = ($cmt??'null') . ((($BR === null ? "" : $BR))??'null') . ((($embed === null ? "" : $embed))??'null');
			}
			#src/psgg2mermaid/Program.hx:303: characters 28-54
			$v = ($DQ === null ? "" : $DQ);
			#src/psgg2mermaid/Program.hx:303: characters 86-186
			$str = ($valid($cmt) ? ((($BR === null ? "" : $BR))??'null') . ((($cmt === null ? "" : $cmt))??'null') : "");
			#src/psgg2mermaid/Program.hx:303: characters 13-216
			$v1 = ($v??'null') . ((($st === null ? "" : $st))??'null') . ((($str === null ? "" : $str))??'null') . ((($DQ === null ? "" : $DQ))??'null');
			#src/psgg2mermaid/Program.hx:304: characters 48-125
			$str1 = Program::string_Format_String_String_String("{0}[{1}]", $st, $v1);
			#src/psgg2mermaid/Program.hx:304: characters 13-154
			$s = ($s??'null') . ((($tab === null ? "" : $tab))??'null') . ((($str1 === null ? "" : $str1))??'null') . ((($NL === null ? "" : $NL))??'null');
			#src/psgg2mermaid/Program.hx:305: characters 13-34
			$addstyle("embed", $st);
		}
		#src/psgg2mermaid/Program.hx:307: characters 9-137
		$s = ($s??'null') . ((($tab === null ? "" : $tab))??'null') . "classDef typ_START     fill:#9cf,stroke:#000,stroke-width:1px;" . ((($NL === null ? "" : $NL))??'null');
		#src/psgg2mermaid/Program.hx:308: characters 9-137
		$s = ($s??'null') . ((($tab === null ? "" : $tab))??'null') . "classDef typ_END       fill:#9cf,stroke:#000,stroke-width:1px;" . ((($NL === null ? "" : $NL))??'null');
		#src/psgg2mermaid/Program.hx:309: characters 9-137
		$s = ($s??'null') . ((($tab === null ? "" : $tab))??'null') . "classDef typ_SUBSTART  fill:#9cf,stroke:#000,stroke-width:1px;" . ((($NL === null ? "" : $NL))??'null');
		#src/psgg2mermaid/Program.hx:310: characters 9-137
		$s = ($s??'null') . ((($tab === null ? "" : $tab))??'null') . "classDef typ_SUBRETURN fill:#9cf,stroke:#000,stroke-width:1px;" . ((($NL === null ? "" : $NL))??'null');
		#src/psgg2mermaid/Program.hx:311: characters 9-137
		$s = ($s??'null') . ((($tab === null ? "" : $tab))??'null') . "classDef comment       fill:#ff9,stroke:#000,stroke-width:4px;" . ((($NL === null ? "" : $NL))??'null');
		#src/psgg2mermaid/Program.hx:312: characters 9-137
		$s = ($s??'null') . ((($tab === null ? "" : $tab))??'null') . "classDef embed         fill:#fff,stroke:#000,stroke-width:4px;" . ((($NL === null ? "" : $NL))??'null');
		#src/psgg2mermaid/Program.hx:313: lines 313-325
		$_g = 0;
		$_g1 = $styledic->GetEnumerator();
		while ($_g < $_g1->length) {
			#src/psgg2mermaid/Program.hx:313: characters 14-15
			$p = ($_g1->arr[$_g] ?? null);
			#src/psgg2mermaid/Program.hx:313: lines 313-325
			++$_g;
			#src/psgg2mermaid/Program.hx:315: characters 13-36
			$idlist = "";
			#src/psgg2mermaid/Program.hx:316: lines 316-323
			$_g2 = 0;
			$_g3 = $p->Value;
			while ($_g2 < $_g3->length) {
				#src/psgg2mermaid/Program.hx:316: characters 18-19
				$i = ($_g3->arr[$_g2] ?? null);
				#src/psgg2mermaid/Program.hx:316: lines 316-323
				++$_g2;
				#src/psgg2mermaid/Program.hx:318: lines 318-321
				if ($valid($idlist)) {
					#src/psgg2mermaid/Program.hx:320: characters 21-34
					$idlist = ($idlist??'null') . ",";
				}
				#src/psgg2mermaid/Program.hx:322: characters 17-28
				$idlist = ($idlist??'null') . ($i??'null');
			}
			#src/psgg2mermaid/Program.hx:324: characters 98-127
			$str = $p->Key;
			#src/psgg2mermaid/Program.hx:324: characters 13-156
			$s = ($s??'null') . ((($tab === null ? "" : $tab))??'null') . "class " . ((($idlist === null ? "" : $idlist))??'null') . " " . ((($str === null ? "" : $str))??'null') . ((($NL === null ? "" : $NL))??'null');
		}
		#src/psgg2mermaid/Program.hx:326: characters 9-22
		$s = $modEnd($s);
		#src/psgg2mermaid/Program.hx:327: characters 9-17
		return $s;
	}

	/**
	 * @param \Array_hx $args
	 * 
	 * @return void
	 */
	public static function Main ($args) {
		#src/psgg2mermaid/Program.hx:10: characters 9-40
		$bDidpContents = false;
		#src/psgg2mermaid/Program.hx:11: lines 11-18
		$_g = 0;
		while ($_g < $args->length) {
			#src/psgg2mermaid/Program.hx:11: characters 14-15
			$a = ($args->arr[$_g] ?? null);
			#src/psgg2mermaid/Program.hx:11: lines 11-18
			++$_g;
			#src/psgg2mermaid/Program.hx:13: lines 13-17
			if ($a === "-c") {
				#src/psgg2mermaid/Program.hx:15: characters 17-37
				$bDidpContents = true;
				#src/psgg2mermaid/Program.hx:16: characters 17-22
				break;
			}
		}
		#src/psgg2mermaid/Program.hx:19: characters 9-108
		$psgg_data = HxFile::ReadAllText_String_Encoding(($args->arr[0] ?? null), Encoding::get_UTF8());
		#src/psgg2mermaid/Program.hx:20: characters 9-58
		$s = Program::Convert($psgg_data, $bDidpContents);
		#src/psgg2mermaid/Program.hx:21: characters 9-95
		HxFile::WriteAllText_String_String_Encoding(($args->arr[1] ?? null), $s, Encoding::get_UTF8());
		#src/psgg2mermaid/Program.hx:22: characters 9-44
		Console::WriteLine("..done!");
	}

	/**
	 * @param string $fmt
	 * @param string $p0
	 * 
	 * @return string
	 */
	public static function string_Format ($fmt, $p0) {
		#src/psgg2mermaid/Program.hx:331: characters 9-38
		return \StringTools::replace($fmt, "{0}", $p0);
	}

	/**
	 * @param string $fmt
	 * @param string $p0
	 * @param string $p1
	 * 
	 * @return string
	 */
	public static function string_Format_String_String_String ($fmt, $p0, $p1) {
		#src/psgg2mermaid/Program.hx:335: characters 9-57
		return \StringTools::replace(\StringTools::replace($fmt, "{0}", $p0), "{1}", $p1);
	}

	/**
	 * @param string $fmt
	 * @param string $p0
	 * @param string $p1
	 * @param string $p2
	 * 
	 * @return string
	 */
	public static function string_Format_String_String_String_String ($fmt, $p0, $p1, $p2) {
		#src/psgg2mermaid/Program.hx:339: characters 9-76
		return \StringTools::replace(\StringTools::replace(\StringTools::replace($fmt, "{0}", $p0), "{1}", $p1), "{2}", $p2);
	}

	/**
	 * @param string $fmt
	 * @param string $p0
	 * @param string $p1
	 * @param string $p2
	 * @param string $p3
	 * 
	 * @return string
	 */
	public static function string_Format_String_String_String_String_String ($fmt, $p0, $p1, $p2, $p3) {
		#src/psgg2mermaid/Program.hx:343: characters 9-95
		return \StringTools::replace(\StringTools::replace(\StringTools::replace(\StringTools::replace($fmt, "{0}", $p0), "{1}", $p1), "{2}", $p2), "{3}", $p3);
	}

	/**
	 * @return void
	 */
	public function __construct () {
	}
}

Boot::registerClass(Program::class, 'psgg2mermaid.Program');
