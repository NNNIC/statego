<?php
/**
 * Generated by Haxe 4.1.3
 */

namespace system\text;

use \php\Boot;
use \haxe\Exception;
use \system\NotImplementedException;
use \haxe\io\Bytes;

class UTF8Encoding extends Encoding {

	/**
	 * @return UTF8Encoding
	 */
	public static function get_UTF8 () {
		#src/system/text/UTF8Encoding.hx:35: characters 3-28
		return new UTF8Encoding();
	}

	/**
	 * @return void
	 */
	public function __construct () {
		#src/system/text/UTF8Encoding.hx:27: characters 3-10
		parent::__construct();
	}

	/**
	 * @param string $str
	 * 
	 * @return Bytes
	 */
	public function GetBytes_String ($str) {
		#src/system/text/UTF8Encoding.hx:22: characters 10-15
		throw Exception::thrown(new NotImplementedException());
	}

	/**
	 * @param Bytes $b
	 * 
	 * @return string
	 */
	public function GetString ($b) {
		#src/system/text/UTF8Encoding.hx:11: characters 10-15
		throw Exception::thrown(new NotImplementedException());
	}
}

Boot::registerClass(UTF8Encoding::class, 'system.text.UTF8Encoding');
Boot::registerGetters('system\\text\\UTF8Encoding', [
	'UTF8' => true
]);
