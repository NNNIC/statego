<?php
/**
 * Generated by Haxe 4.1.3
 */

namespace system;

use \php\_Boot\HxAnon;
use \php\Boot;
use \haxe\Log;
use \haxe\Exception as HaxeException;

class Console {
	/**
	 * @return string
	 */
	public static function ReadLine () {
		#src/system/Console.hx:27: characters 10-15
		throw HaxeException::thrown(new InvalidOperationException());
	}

	/**
	 * @param string $s
	 * 
	 * @return void
	 */
	public static function WriteLine ($s) {
		#src/system/Console.hx:13: characters 3-8
		(Log::$trace)($s, new HxAnon([
			"fileName" => "src/system/Console.hx",
			"lineNumber" => 13,
			"className" => "system.Console",
			"methodName" => "WriteLine",
		]));
	}

	/**
	 * @param mixed $obj
	 * 
	 * @return void
	 */
	public static function WriteLine_Object ($obj) {
		#src/system/Console.hx:22: characters 3-8
		(Log::$trace)($obj, new HxAnon([
			"fileName" => "src/system/Console.hx",
			"lineNumber" => 22,
			"className" => "system.Console",
			"methodName" => "WriteLine_Object",
		]));
	}

	/**
	 * @param string $s
	 * 
	 * @return void
	 */
	public static function Write_String ($s) {
		#src/system/Console.hx:18: characters 3-8
		(Log::$trace)($s, new HxAnon([
			"fileName" => "src/system/Console.hx",
			"lineNumber" => 18,
			"className" => "system.Console",
			"methodName" => "Write_String",
		]));
	}

	/**
	 * @return void
	 */
	public function __construct () {
	}
}

Boot::registerClass(Console::class, 'system.Console');
