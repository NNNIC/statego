<?php
/**
 * Generated by Haxe 4.1.3
 */

namespace haxe;

use \php\Boot;

class MainEvent {
	/**
	 * @var \Closure
	 */
	public $f;
	/**
	 * @var bool
	 * Tells if the event can lock the process from exiting (default:true)
	 */
	public $isBlocking;
	/**
	 * @var MainEvent
	 */
	public $next;
	/**
	 * @var float
	 */
	public $nextRun;
	/**
	 * @var MainEvent
	 */
	public $prev;
	/**
	 * @var int
	 */
	public $priority;

	/**
	 * @param \Closure $f
	 * @param int $p
	 * 
	 * @return void
	 */
	public function __construct ($f, $p) {
		#G:\HaxeToolkit\haxe\std/haxe/MainLoop.hx:13: characters 31-35
		$this->isBlocking = true;
		#G:\HaxeToolkit\haxe\std/haxe/MainLoop.hx:19: characters 3-13
		$this->f = $f;
		#G:\HaxeToolkit\haxe\std/haxe/MainLoop.hx:20: characters 3-20
		$this->priority = $p;
		#G:\HaxeToolkit\haxe\std/haxe/MainLoop.hx:21: characters 3-35
		$this->nextRun = \Math::$NEGATIVE_INFINITY;
	}
}

Boot::registerClass(MainEvent::class, 'haxe.MainEvent');
