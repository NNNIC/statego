<?php
/**
 * Generated by Haxe 4.1.3
 */

namespace psgg;

use \php\Boot;

class HxString {
	/**
	 * @param string $fmt
	 * @param \Array_hx $plist
	 * 
	 * @return string
	 */
	public static function Format ($fmt, $plist) {
		#src/psgg/HxString.hx:9: characters 9-21
		$s = $fmt;
		#src/psgg/HxString.hx:10: characters 18-22
		$_g = 0;
		#src/psgg/HxString.hx:10: characters 22-34
		$_g1 = $plist->length;
		#src/psgg/HxString.hx:10: lines 10-13
		while ($_g < $_g1) {
			#src/psgg/HxString.hx:10: characters 18-34
			$i = $_g++;
			#src/psgg/HxString.hx:11: characters 13-37
			$sub = "{" . ($i??'null') . "}";
			#src/psgg/HxString.hx:12: characters 13-52
			$s = \StringTools::replace($s, $sub, ($plist->arr[$i] ?? null));
		}
		#src/psgg/HxString.hx:14: characters 9-17
		return $s;
	}

	/**
	 * @return void
	 */
	public function __construct () {
	}
}

Boot::registerClass(HxString::class, 'psgg.HxString');
