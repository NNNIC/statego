<?php
/**
 * Generated by Haxe 4.1.3
 */

namespace psgg;

use \php\Boot;

class HxRegexUtil {
	/**
	 * @var string
	 */
	const VARNAME_PATTERN = "[_a-zA-Z][_a-zA-Z0-9]+";

	/**
	 * @param string $regexstr
	 * @param string $s
	 * 
	 * @return string
	 */
	public static function Get1stMatch ($regexstr, $s) {
		#src/psgg/HxRegexUtil.hx:17: characters 9-40
		$r = new \EReg($regexstr, "m");
		#src/psgg/HxRegexUtil.hx:18: lines 18-20
		if ($r->match($s)) {
			#src/psgg/HxRegexUtil.hx:19: characters 13-32
			return $r->matched(0);
		}
		#src/psgg/HxRegexUtil.hx:21: characters 9-20
		return null;
	}

	/**
	 * @param string $regexstr
	 * @param string $s
	 * @param int $n
	 * 
	 * @return string
	 */
	public static function GetNthMatch ($regexstr, $s, $n) {
		#src/psgg/HxRegexUtil.hx:24: characters 9-23
		$input = $s;
		#src/psgg/HxRegexUtil.hx:25: characters 9-21
		$cnt = 0;
		#src/psgg/HxRegexUtil.hx:26: characters 9-40
		$r = new \EReg($regexstr, "m");
		#src/psgg/HxRegexUtil.hx:27: lines 27-33
		while ($r->match($input)) {
			#src/psgg/HxRegexUtil.hx:28: characters 13-18
			++$cnt;
			#src/psgg/HxRegexUtil.hx:29: lines 29-31
			if ($n === $cnt) {
				#src/psgg/HxRegexUtil.hx:30: characters 17-36
				return $r->matched(0);
			}
			#src/psgg/HxRegexUtil.hx:32: characters 13-37
			$input = $r->matchedRight();
		}
		#src/psgg/HxRegexUtil.hx:34: characters 9-20
		return null;
	}

	/**
	 * @return string
	 */
	public static function GetVerNamePattern () {
		#src/psgg/HxRegexUtil.hx:10: characters 9-31
		return "[_a-zA-Z][_a-zA-Z0-9]+";
	}

	/**
	 * @param string $regexstr
	 * @param string $s
	 * 
	 * @return bool
	 */
	public static function IsMatch ($regexstr, $s) {
		#src/psgg/HxRegexUtil.hx:13: characters 9-40
		$r = new \EReg($regexstr, "m");
		#src/psgg/HxRegexUtil.hx:14: characters 9-26
		return $r->match($s);
	}

	/**
	 * @return void
	 */
	public function __construct () {
	}
}

Boot::registerClass(HxRegexUtil::class, 'psgg.HxRegexUtil');
