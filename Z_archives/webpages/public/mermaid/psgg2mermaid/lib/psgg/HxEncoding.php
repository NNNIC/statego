<?php
/**
 * Generated by Haxe 4.1.3
 */

namespace psgg;

use \system\text\Encoding;
use \system\text\UTF8Encoding;
use \system\text\ASCIIEncoding;
use \php\Boot;

class HxEncoding extends Encoding {
	/**
	 * @var bool
	 */
	public $bom;
	/**
	 * @var string
	 */
	public $enc;

	/**
	 * @param string $enc
	 * 
	 * @return HxEncoding
	 */
	public static function GetEncoding_String ($enc) {
		#src/psgg/HxEncoding.hx:13: characters 9-34
		$p = new HxEncoding();
		#src/psgg/HxEncoding.hx:14: characters 9-20
		$p->enc = $enc;
		#src/psgg/HxEncoding.hx:15: characters 9-22
		$p->bom = false;
		#src/psgg/HxEncoding.hx:16: characters 9-17
		return $p;
	}

	/**
	 * @param Encoding $enc
	 * 
	 * @return bool
	 */
	public static function ISUTF8Encoding_with_bom ($enc) {
		#src/psgg/HxEncoding.hx:44: lines 44-49
		if (HxEncoding::IsUTF8Encoding($enc)) {
			#src/psgg/HxEncoding.hx:45: lines 45-48
			if (($enc instanceof HxEncoding)) {
				#src/psgg/HxEncoding.hx:46: characters 17-53
				$c2 = Boot::typedCast(Boot::getClass(HxEncoding::class), $enc);
				#src/psgg/HxEncoding.hx:47: characters 24-45
				if ($c2 !== null) {
					#src/psgg/HxEncoding.hx:47: characters 37-43
					return $c2->bom;
				} else {
					#src/psgg/HxEncoding.hx:47: characters 24-45
					return false;
				}
			}
		}
		#src/psgg/HxEncoding.hx:50: characters 9-21
		return false;
	}

	/**
	 * @param Encoding $enc
	 * 
	 * @return bool
	 */
	public static function IsASCIIEncoding ($enc) {
		#src/psgg/HxEncoding.hx:20: characters 9-24
		$error = "";
		#src/psgg/HxEncoding.hx:21: lines 21-24
		if (($enc instanceof ASCIIEncoding)) {
			#src/psgg/HxEncoding.hx:22: characters 13-59
			$c1 = Boot::typedCast(Boot::getClass(ASCIIEncoding::class), $enc);
			#src/psgg/HxEncoding.hx:23: characters 13-30
			return $c1 !== null;
		}
		#src/psgg/HxEncoding.hx:25: lines 25-28
		if (($enc instanceof HxEncoding)) {
			#src/psgg/HxEncoding.hx:26: characters 13-49
			$c2 = Boot::typedCast(Boot::getClass(HxEncoding::class), $enc);
			#src/psgg/HxEncoding.hx:27: characters 20-65
			if ($c2 !== null) {
				#src/psgg/HxEncoding.hx:27: characters 33-64
				return \mb_strtolower($c2->enc) === "ascii";
			} else {
				#src/psgg/HxEncoding.hx:27: characters 20-65
				return false;
			}
		}
		#src/psgg/HxEncoding.hx:29: characters 9-21
		return false;
	}

	/**
	 * @param Encoding $enc
	 * 
	 * @return bool
	 */
	public static function IsUTF8Encoding ($enc) {
		#src/psgg/HxEncoding.hx:32: characters 9-24
		$error = "";
		#src/psgg/HxEncoding.hx:33: lines 33-36
		if (($enc instanceof UTF8Encoding)) {
			#src/psgg/HxEncoding.hx:34: characters 13-58
			$c1 = Boot::typedCast(Boot::getClass(UTF8Encoding::class), $enc);
			#src/psgg/HxEncoding.hx:35: characters 13-30
			return $c1 !== null;
		}
		#src/psgg/HxEncoding.hx:37: lines 37-40
		if (($enc instanceof HxEncoding)) {
			#src/psgg/HxEncoding.hx:38: characters 13-49
			$c2 = Boot::typedCast(Boot::getClass(HxEncoding::class), $enc);
			#src/psgg/HxEncoding.hx:39: characters 20-64
			if ($c2 !== null) {
				#src/psgg/HxEncoding.hx:39: characters 33-63
				return \mb_strtolower($c2->enc) === "utf8";
			} else {
				#src/psgg/HxEncoding.hx:39: characters 20-64
				return false;
			}
		}
		#src/psgg/HxEncoding.hx:41: characters 9-21
		return false;
	}

	/**
	 * @return void
	 */
	public function __construct () {
		#src/psgg/HxEncoding.hx:6: characters 9-16
		parent::__construct();
	}
}

Boot::registerClass(HxEncoding::class, 'psgg.HxEncoding');
