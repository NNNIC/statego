<?php
/**
 * Generated by Haxe 4.1.3
 */

use \php\Boot;

/**
 * This class provides access to various base functions of system platforms.
 * Look in the `sys` package for more system APIs.
 */
class Sys {
	/**
	 * Returns all the arguments that were passed in the command line.
	 * This does not include the interpreter or the name of the program file.
	 * (java)(eval) On Windows, non-ASCII Unicode arguments will not work correctly.
	 * (cs) Non-ASCII Unicode arguments will not work correctly.
	 * 
	 * @return \Array_hx
	 */
	public static function args () {
		#G:\HaxeToolkit\haxe\std/php/_std/Sys.hx:41: lines 41-45
		if (array_key_exists("argv", $_SERVER)) {
			#G:\HaxeToolkit\haxe\std/php/_std/Sys.hx:42: characters 4-89
			return \Array_hx::wrap(array_slice($_SERVER["argv"], 1));
		} else {
			#G:\HaxeToolkit\haxe\std/php/_std/Sys.hx:44: characters 4-13
			return new \Array_hx();
		}
	}

	/**
	 * Gets the current working directory (usually the one in which the program was started).
	 * 
	 * @return string
	 */
	public static function getCwd () {
		#G:\HaxeToolkit\haxe\std/php/_std/Sys.hx:67: characters 3-29
		$cwd = getcwd();
		#G:\HaxeToolkit\haxe\std/php/_std/Sys.hx:68: lines 68-69
		if ($cwd === false) {
			#G:\HaxeToolkit\haxe\std/php/_std/Sys.hx:69: characters 4-15
			return null;
		}
		#G:\HaxeToolkit\haxe\std/php/_std/Sys.hx:70: characters 3-37
		$l = mb_substr($cwd, -1, null);
		#G:\HaxeToolkit\haxe\std/php/_std/Sys.hx:71: characters 3-61
		return ($cwd??'null') . (((($l === "/") || ($l === "\\") ? "" : "/"))??'null');
	}
}

Boot::registerClass(Sys::class, 'Sys');
