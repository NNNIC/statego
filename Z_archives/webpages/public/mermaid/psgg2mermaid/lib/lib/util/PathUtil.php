<?php
/**
 * Generated by Haxe 4.1.3
 */

namespace lib\util;

use \php\Boot;
use \system\Cs2Hx;
use \psgg\HxFile;
use \php\_Boot\HxString;

class PathUtil {
	/**
	 * @var string
	 */
	const TRV_EXCEPTION = "::exception!!";
	/**
	 * @var string
	 */
	const TRV_TIMEOUTERROR = "::timeout!!";
	/**
	 * @var string
	 */
	const TRV_UNKNOWN = "::unknown!!";

	/**
	 * @param string $baseUri
	 * @param string $targetUri
	 * 
	 * @return string
	 */
	public static function GetRelativePath ($baseUri, $targetUri) {
		#src/lib/util/PathUtil.hx:10: lines 10-13
		if (($baseUri === null) || (mb_strlen($baseUri) === 0) || (($targetUri === null) || (mb_strlen($targetUri) === 0))) {
			#src/lib/util/PathUtil.hx:12: characters 13-24
			return null;
		}
		#src/lib/util/PathUtil.hx:14: lines 14-24
		$_abs = function ($s) {
			#src/lib/util/PathUtil.hx:16: characters 13-56
			$s2 = HxFile::GetFullPath($s);
			#src/lib/util/PathUtil.hx:17: characters 13-32
			$s3 = $s2;
			#src/lib/util/PathUtil.hx:18: lines 18-21
			if ((mb_strlen($s3) > 3) && (HxString::charCodeAt($s3, mb_strlen($s3) - 1) === 92)) {
				#src/lib/util/PathUtil.hx:20: characters 22-49
				$s3 = \mb_substr($s3, 0, mb_strlen($s3) - 1);
			}
			#src/lib/util/PathUtil.hx:22: characters 13-22
			return $s3;
		};
		#src/lib/util/PathUtil.hx:25: characters 9-49
		$abs_base_uri = $_abs($baseUri);
		#src/lib/util/PathUtil.hx:26: characters 9-53
		$abs_target_uri = $_abs($targetUri);
		#src/lib/util/PathUtil.hx:27: lines 27-30
		if (HxString::charCodeAt(\mb_strtolower($abs_base_uri), 0) !== HxString::charCodeAt(\mb_strtolower($abs_target_uri), 0)) {
			#src/lib/util/PathUtil.hx:29: characters 13-29
			return $targetUri;
		}
		#src/lib/util/PathUtil.hx:31: lines 31-42
		if (\mb_substr($abs_target_uri, 0, mb_strlen($abs_base_uri)) === $abs_base_uri) {
			#src/lib/util/PathUtil.hx:33: characters 13-71
			$v = \mb_substr($abs_target_uri, mb_strlen($abs_base_uri), null);
			#src/lib/util/PathUtil.hx:34: lines 34-40
			if (!(($v === null) || (mb_strlen($v) === 0))) {
				#src/lib/util/PathUtil.hx:36: lines 36-39
				if ((HxString::charCodeAt($v, 0) === 92) || (HxString::charCodeAt($v, 0) === 47)) {
					#src/lib/util/PathUtil.hx:38: characters 25-36
					$v = \mb_substr($v, 1, null);
				}
			}
			#src/lib/util/PathUtil.hx:41: characters 13-21
			return $v;
		}
		#src/lib/util/PathUtil.hx:43: characters 9-64
		$list_base = PathUtil::PathToList($abs_base_uri);
		#src/lib/util/PathUtil.hx:44: characters 9-68
		$list_target = PathUtil::PathToList($abs_target_uri);
		#src/lib/util/PathUtil.hx:45: characters 9-33
		$latestIndex = 0;
		#src/lib/util/PathUtil.hx:47: characters 13-27
		$i = 0;
		#src/lib/util/PathUtil.hx:48: lines 48-61
		while ($i < $list_target->length) {
			#src/lib/util/PathUtil.hx:50: characters 17-77
			$base_v = ArrayUtil::GetVal($list_base, $i);
			#src/lib/util/PathUtil.hx:51: characters 17-78
			$tgt_v = ArrayUtil::GetVal($list_target, $i);
			#src/lib/util/PathUtil.hx:52: lines 52-59
			if (($base_v !== null) && ($tgt_v !== null) && ($base_v === $tgt_v)) {
				#src/lib/util/PathUtil.hx:54: characters 21-36
				$latestIndex = $i;
			} else {
				#src/lib/util/PathUtil.hx:58: characters 21-26
				break;
			}
			#src/lib/util/PathUtil.hx:60: characters 17-20
			++$i;
		}
		#src/lib/util/PathUtil.hx:63: characters 9-57
		$diff = $list_target->length - $latestIndex;
		#src/lib/util/PathUtil.hx:64: characters 9-33
		$newpath = "";
		#src/lib/util/PathUtil.hx:66: characters 13-41
		$i = $latestIndex + 1;
		#src/lib/util/PathUtil.hx:67: lines 67-75
		while ($i < $list_base->length) {
			#src/lib/util/PathUtil.hx:69: lines 69-72
			if (!(($newpath === null) || (mb_strlen($newpath) === 0))) {
				#src/lib/util/PathUtil.hx:71: characters 21-36
				$newpath = ($newpath??'null') . "\\";
			}
			#src/lib/util/PathUtil.hx:73: characters 17-32
			$newpath = ($newpath??'null') . "..";
			#src/lib/util/PathUtil.hx:74: characters 17-20
			++$i;
		}
		#src/lib/util/PathUtil.hx:78: characters 13-41
		$i = $latestIndex + 1;
		#src/lib/util/PathUtil.hx:79: lines 79-87
		while ($i < $list_target->length) {
			#src/lib/util/PathUtil.hx:81: lines 81-84
			if (!(($newpath === null) || (mb_strlen($newpath) === 0))) {
				#src/lib/util/PathUtil.hx:83: characters 21-36
				$newpath = ($newpath??'null') . "\\";
			}
			#src/lib/util/PathUtil.hx:85: characters 17-42
			$newpath = ($newpath??'null') . (($list_target->arr[$i] ?? null)??'null');
			#src/lib/util/PathUtil.hx:86: characters 17-20
			++$i;
		}
		#src/lib/util/PathUtil.hx:89: characters 9-23
		return $newpath;
	}

	/**
	 * @param \Array_hx $list
	 * 
	 * @return string
	 */
	public static function ListToPath ($list) {
		#src/lib/util/PathUtil.hx:104: lines 104-107
		if ($list === null) {
			#src/lib/util/PathUtil.hx:106: characters 13-24
			return null;
		}
		#src/lib/util/PathUtil.hx:108: characters 9-27
		$s = "";
		#src/lib/util/PathUtil.hx:109: lines 109-116
		$_g = 0;
		while ($_g < $list->length) {
			#src/lib/util/PathUtil.hx:109: characters 14-15
			$i = ($list->arr[$_g] ?? null);
			#src/lib/util/PathUtil.hx:109: lines 109-116
			++$_g;
			#src/lib/util/PathUtil.hx:111: lines 111-114
			if (!(($s === null) || (mb_strlen($s) === 0))) {
				#src/lib/util/PathUtil.hx:113: characters 17-26
				$s = ($s??'null') . "\\";
			}
			#src/lib/util/PathUtil.hx:115: characters 13-19
			$s = ($s??'null') . ($i??'null');
		}
		#src/lib/util/PathUtil.hx:117: characters 9-17
		return $s;
	}

	/**
	 * @param string $path
	 * 
	 * @return \Array_hx
	 */
	public static function PathToList ($path) {
		#src/lib/util/PathUtil.hx:96: lines 96-99
		if (($path === null) || (mb_strlen($path) === 0)) {
			#src/lib/util/PathUtil.hx:98: characters 13-24
			return null;
		}
		#src/lib/util/PathUtil.hx:100: characters 9-48
		return Cs2Hx::Split($path, \Array_hx::wrap([92]));
	}

	/**
	 * @return void
	 */
	public function __construct () {
	}
}

Boot::registerClass(PathUtil::class, 'lib.util.PathUtil');
