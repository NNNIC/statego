<?php
/**
 * Generated by Haxe 4.1.3
 */

namespace lib\util;

use \php\_Boot\HxDynamicStr;
use \php\Boot;
use \system\Cs2Hx;
use \system\collections\generic\Dictionary;
use \php\_Boot\HxString;
use \system\CsRef;

class IniUtil {
	/**
	 * @param string $initext
	 * 
	 * @return Dictionary
	 */
	public static function CreateHashtable ($initext) {
		#src/lib/util/IniUtil.hx:58: lines 58-61
		if (($initext === null) || (mb_strlen($initext) === 0)) {
			#src/lib/util/IniUtil.hx:60: characters 13-24
			return null;
		}
		#src/lib/util/IniUtil.hx:62: characters 9-140
		$mainhash = new Dictionary();
		#src/lib/util/IniUtil.hx:63: characters 9-83
		$cathash = null;
		#src/lib/util/IniUtil.hx:64: characters 9-71
		$lines = Cs2Hx::Split($initext, \Array_hx::wrap([10]));
		#src/lib/util/IniUtil.hx:65: characters 9-24
		$n = -1;
		#src/lib/util/IniUtil.hx:66: lines 66-148
		while (true) {
			#src/lib/util/IniUtil.hx:68: characters 13-16
			++$n;
			#src/lib/util/IniUtil.hx:69: lines 69-72
			if ($n >= $lines->length) {
				#src/lib/util/IniUtil.hx:71: characters 17-22
				break;
			}
			#src/lib/util/IniUtil.hx:73: characters 13-37
			$l = ($lines->arr[$n] ?? null);
			#src/lib/util/IniUtil.hx:74: characters 17-98
			$tmp = null;
			if (!(($l === null) || (mb_strlen($l) === 0))) {
				#src/lib/util/IniUtil.hx:74: characters 50-98
				$str = Cs2Hx::Trim($l);
				#src/lib/util/IniUtil.hx:74: characters 17-98
				$tmp = ($str === null) || (mb_strlen($str) === 0);
			} else {
				$tmp = true;
			}
			#src/lib/util/IniUtil.hx:74: lines 74-77
			if ($tmp) {
				#src/lib/util/IniUtil.hx:76: characters 17-25
				continue;
			}
			#src/lib/util/IniUtil.hx:78: lines 78-81
			if (HxString::charCodeAt($l, 0) === 59) {
				#src/lib/util/IniUtil.hx:80: characters 17-25
				continue;
			}
			#src/lib/util/IniUtil.hx:82: lines 82-96
			if (HxString::charCodeAt($l, 0) === 91) {
				#src/lib/util/IniUtil.hx:84: lines 84-87
				if (mb_strlen($l) <= 2) {
					#src/lib/util/IniUtil.hx:86: characters 21-29
					continue;
				}
				#src/lib/util/IniUtil.hx:88: characters 34-68
				$startAt = 1;
				#src/lib/util/IniUtil.hx:88: characters 66-67
				if ($startAt === null) {
					$startAt = 0;
				}
				#src/lib/util/IniUtil.hx:88: characters 17-69
				$cindex = HxString::indexOf($l, \mb_chr(93), $startAt);
				#src/lib/util/IniUtil.hx:89: lines 89-92
				if ($cindex < 0) {
					#src/lib/util/IniUtil.hx:91: characters 21-29
					continue;
				}
				#src/lib/util/IniUtil.hx:93: characters 17-63
				$category = \mb_substr($l, 1, $cindex - 1);
				#src/lib/util/IniUtil.hx:94: characters 17-87
				$cathash = new Dictionary();
				#src/lib/util/IniUtil.hx:95: characters 17-48
				$mainhash->Add($category, $cathash);
			}
			#src/lib/util/IniUtil.hx:97: characters 13-63
			$eqindex = HxString::indexOf($l, \mb_chr(61), 0);
			#src/lib/util/IniUtil.hx:98: lines 98-101
			if ($eqindex < 0) {
				#src/lib/util/IniUtil.hx:100: characters 17-25
				continue;
			}
			#src/lib/util/IniUtil.hx:102: characters 13-70
			$key = Cs2Hx::Trim(\mb_substr($l, 0, $eqindex));
			#src/lib/util/IniUtil.hx:103: lines 103-106
			if (($key === null) || (mb_strlen($key) === 0)) {
				#src/lib/util/IniUtil.hx:105: characters 17-25
				continue;
			}
			#src/lib/util/IniUtil.hx:107: lines 107-110
			if (($eqindex + 2) > mb_strlen($l)) {
				#src/lib/util/IniUtil.hx:109: characters 17-25
				continue;
			}
			#src/lib/util/IniUtil.hx:111: characters 13-73
			$value = Cs2Hx::Trim(\mb_substr($l, $eqindex + 1, null));
			#src/lib/util/IniUtil.hx:112: lines 112-115
			if (($value === null) || (mb_strlen($value) === 0)) {
				#src/lib/util/IniUtil.hx:114: characters 17-25
				continue;
			}
			#src/lib/util/IniUtil.hx:116: lines 116-139
			if ($value === "@@@") {
				#src/lib/util/IniUtil.hx:118: characters 17-40
				$value2 = "";
				#src/lib/util/IniUtil.hx:120: characters 21-40
				$n2 = $n + 1;
				#src/lib/util/IniUtil.hx:121: lines 121-137
				while ($n2 < $lines->length) {
					#src/lib/util/IniUtil.hx:123: characters 25-51
					$l2 = ($lines->arr[$n2] ?? null);
					#src/lib/util/IniUtil.hx:124: characters 25-54
					$l2 = Cs2Hx::TrimEnd($l2);
					#src/lib/util/IniUtil.hx:125: lines 125-130
					if ($l2 === "@@@") {
						#src/lib/util/IniUtil.hx:127: characters 29-35
						$n = $n2;
						#src/lib/util/IniUtil.hx:128: characters 29-43
						$value = $value2;
						#src/lib/util/IniUtil.hx:129: characters 29-34
						break;
					}
					#src/lib/util/IniUtil.hx:131: lines 131-134
					if (!(($value2 === null) || (mb_strlen($value2) === 0))) {
						#src/lib/util/IniUtil.hx:133: characters 29-65
						$value2 = ($value2??'null') . "\x0A";
					}
					#src/lib/util/IniUtil.hx:135: characters 25-59
					$value2 = ($value2??'null') . (Cs2Hx::TrimEnd($l2)??'null');
					#src/lib/util/IniUtil.hx:136: characters 25-29
					++$n2;
				}
			}
			#src/lib/util/IniUtil.hx:140: lines 140-147
			if ($cathash !== null) {
				#src/lib/util/IniUtil.hx:142: characters 17-40
				$cathash->Add($key, $value);
			} else {
				#src/lib/util/IniUtil.hx:146: characters 17-41
				$mainhash->Add($key, $value);
			}
		}
		#src/lib/util/IniUtil.hx:149: characters 9-24
		return $mainhash;
	}

	/**
	 * @param string $initext
	 * @param string $category
	 * 
	 * @return Dictionary
	 */
	public static function CreateHashtable_String_String ($initext, $category) {
		#src/lib/util/IniUtil.hx:153: lines 153-156
		if (($initext === null) || (mb_strlen($initext) === 0)) {
			#src/lib/util/IniUtil.hx:155: characters 13-24
			return null;
		}
		#src/lib/util/IniUtil.hx:157: characters 9-98
		$ht = IniUtil::CreateHashtable($initext);
		#src/lib/util/IniUtil.hx:158: lines 158-166
		if (($ht !== null) && $ht->ContainsKey($category)) {
			#src/lib/util/IniUtil.hx:160: characters 13-62
			$cateval = $ht->GetValue_TKey($category);
			#src/lib/util/IniUtil.hx:161: lines 161-165
			if (($cateval !== null) && ($cateval instanceof Dictionary)) {
				#src/lib/util/IniUtil.hx:163: characters 17-171
				$cathash = $cateval;
				#src/lib/util/IniUtil.hx:164: characters 17-31
				return $cathash;
			}
		}
		#src/lib/util/IniUtil.hx:167: characters 9-20
		return null;
	}

	/**
	 * @param string $key
	 * @param Dictionary $ht
	 * @param float $error
	 * 
	 * @return float
	 */
	public static function GetDoubleFromHashtable ($key, $ht, $error = -1) {
		#src/lib/util/IniUtil.hx:27: lines 27-39
		if ($error === null) {
			$error = -1;
		}
		#src/lib/util/IniUtil.hx:28: characters 9-58
		$val = IniUtil::GetValueFromHashtable($key, $ht);
		#src/lib/util/IniUtil.hx:29: lines 29-32
		if ($val === null) {
			#src/lib/util/IniUtil.hx:31: characters 13-25
			return $error;
		}
		#src/lib/util/IniUtil.hx:33: characters 9-50
		$o = new CsRef(0);
		#src/lib/util/IniUtil.hx:34: lines 34-37
		if (Cs2Hx::TryParseFloat(HxDynamicStr::wrap($val)->toString(), $o)) {
			#src/lib/util/IniUtil.hx:36: characters 13-27
			return $o->Value;
		}
		#src/lib/util/IniUtil.hx:38: characters 9-21
		return $error;
	}

	/**
	 * @param string $key
	 * @param string $initext
	 * 
	 * @return mixed
	 */
	public static function GetValue ($key, $initext) {
		#src/lib/util/IniUtil.hx:10: characters 9-98
		$ht = IniUtil::CreateHashtable($initext);
		#src/lib/util/IniUtil.hx:11: characters 9-46
		return IniUtil::GetValueFromHashtable($key, $ht);
	}

	/**
	 * @param string $key
	 * @param Dictionary $ht
	 * 
	 * @return mixed
	 */
	public static function GetValueFromHashtable ($key, $ht) {
		#src/lib/util/IniUtil.hx:20: lines 20-23
		if ($ht->ContainsKey($key)) {
			#src/lib/util/IniUtil.hx:22: characters 13-41
			return $ht->GetValue_TKey($key);
		}
		#src/lib/util/IniUtil.hx:24: characters 9-20
		return null;
	}

	/**
	 * @param string $category
	 * @param string $key
	 * @param Dictionary $ht
	 * 
	 * @return string
	 */
	public static function GetValueFromHashtable_String_String_DictionaryStringObject ($category, $key, $ht) {
		#src/lib/util/IniUtil.hx:42: lines 42-53
		if (($ht !== null) && $ht->ContainsKey($category)) {
			#src/lib/util/IniUtil.hx:44: characters 13-62
			$cateval = $ht->GetValue_TKey($category);
			#src/lib/util/IniUtil.hx:45: lines 45-52
			if (($cateval !== null) && ($cateval instanceof Dictionary)) {
				#src/lib/util/IniUtil.hx:47: characters 17-171
				$cathash = $cateval;
				#src/lib/util/IniUtil.hx:48: lines 48-51
				if ($cathash->ContainsKey($key)) {
					#src/lib/util/IniUtil.hx:50: characters 21-65
					return HxDynamicStr::wrap($cathash->GetValue_TKey($key))->toString();
				}
			}
		}
		#src/lib/util/IniUtil.hx:54: characters 9-20
		return null;
	}

	/**
	 * @param string $category
	 * @param string $key
	 * @param string $initext
	 * 
	 * @return string
	 */
	public static function GetValue_String_String_String ($category, $key, $initext) {
		#src/lib/util/IniUtil.hx:15: characters 9-98
		$ht = IniUtil::CreateHashtable($initext);
		#src/lib/util/IniUtil.hx:16: characters 9-93
		return IniUtil::GetValueFromHashtable_String_String_DictionaryStringObject($category, $key, $ht);
	}

	/**
	 * @return void
	 */
	public function __construct () {
	}
}

Boot::registerClass(IniUtil::class, 'lib.util.IniUtil');
