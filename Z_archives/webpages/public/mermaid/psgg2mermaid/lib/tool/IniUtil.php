<?php
/**
 * Generated by Haxe 4.1.3
 */

namespace tool;

use \php\Boot;
use \haxe\ds\StringMap;

class IniUtil {
	/**
	 * @param string $ini
	 * @param string $key
	 * 
	 * @return string
	 */
	public static function Get ($ini, $key) {
		#src/tool/IniUtil.hx:28: characters 9-32
		$map = IniUtil::ReadIni($ini);
		#src/tool/IniUtil.hx:29: characters 9-35
		return IniUtil::GetFromMap($map, $key);
	}

	/**
	 * @param StringMap $map
	 * @param string $group
	 * @param string $key
	 * 
	 * @return string
	 */
	public static function GetFromGroupMap ($map, $group, $key) {
		#src/tool/IniUtil.hx:18: lines 18-24
		if ($map !== null) {
			#src/tool/IniUtil.hx:19: lines 19-23
			if (\array_key_exists($group, $map->data)) {
				#src/tool/IniUtil.hx:20: characters 17-66
				$mapg = ($map->data[$group] ?? null);
				#src/tool/IniUtil.hx:21: characters 17-39
				$v = ($mapg->data[$key] ?? null);
				#src/tool/IniUtil.hx:22: characters 17-39
				return Boot::typedCast(Boot::getClass('String'), $v);
			}
		}
		#src/tool/IniUtil.hx:25: characters 9-20
		return null;
	}

	/**
	 * @param StringMap $map
	 * @param string $key
	 * 
	 * @return string
	 */
	public static function GetFromMap ($map, $key) {
		#src/tool/IniUtil.hx:11: lines 11-14
		if ($map !== null) {
			#src/tool/IniUtil.hx:12: characters 13-34
			$v = ($map->data[$key] ?? null);
			#src/tool/IniUtil.hx:13: characters 13-35
			return Boot::typedCast(Boot::getClass('String'), $v);
		}
		#src/tool/IniUtil.hx:15: characters 9-20
		return null;
	}

	/**
	 * @param string $ini
	 * @param string $group
	 * @param string $key
	 * 
	 * @return string
	 */
	public static function GetGroup ($ini, $group, $key) {
		#src/tool/IniUtil.hx:32: characters 9-32
		$map = IniUtil::ReadIni($ini);
		#src/tool/IniUtil.hx:33: characters 9-46
		return IniUtil::GetFromGroupMap($map, $group, $key);
	}

	/**
	 * @param string $initxt
	 * 
	 * @return StringMap
	 */
	public static function ReadIni ($initxt) {
		#src/tool/IniUtil.hx:5: characters 9-42
		$p = new IniUtilReadControl();
		#src/tool/IniUtil.hx:6: characters 9-25
		$p->m_buf = $initxt;
		#src/tool/IniUtil.hx:7: characters 9-16
		$p->Run();
		#src/tool/IniUtil.hx:8: characters 9-23
		return $p->m_map;
	}
}

Boot::registerClass(IniUtil::class, 'tool.IniUtil');
