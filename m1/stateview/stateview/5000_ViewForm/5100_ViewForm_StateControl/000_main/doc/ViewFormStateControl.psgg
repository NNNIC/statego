;PSGG Editor Backup File
version=1.1
file=ViewFormStateControl.xlsx
guid=c61d4c20-be19-44b3-abc7-16fdc984dbf3
;set read_from  excel or psgg
read_from=psgg
;set savemode with_excel or psgg_only
save_mode=psgg_only
;set check_excel_writable yes or no
check_excel_writable=yes

------#======*<Guid(D13821FE-FA27-4B04-834C-CEC1E5670F48)>*======#------

sheet=state-chart
nameid_list=,n001,n002,n003,n004,n005,n006,n007,n008,n009,n00a,n00b,n00c,n00d,n00e,n00f,n010,n011,,n012,n013,,n014,n015,,n016,n017,n018,n019,,n01a,n01b,,n01c,,,,n01d,n01e,,n01f,n020,n021,,n022,n023,n
stateid_list=,,,,s0001,s0002,s0003,s0004,s0005,s0006,s0007,s0008,s0009,s000a,s000b,s000c,s000d,s000e,s000f,s0010,s0011,s0012,s0013,s0014,s0015,s0016,s0017,s0018,s0019,s001a,,s001c,s001d,s001e,s001f,s0020,s0021,s0022,s0023,s0024,s0025,s0026,s0027,s0028,s0029,s002a,s002b,s002c,s002d,s002e,s002f,s0030,s0031,s0032,s0033,s0034,s0035,s0036,s0037,s0038,s0039,s003a,s003b,s003c,s003d,s003e,s003f,s0040,s0041,s0042,s0043,s0044,s0045,s0046,s0047,s0048,s0049,s004a,s004b,s004c,s004d,s004e,s004f,s0050,s0051,s0052,s0053,s0054,s0055,s0056,s0057,s0058,s0059,s005a,s005b,s005c,s005d,s005e,s005f,s0060,s0061,s0062,s0063,s0064,s0065,s0066,s0067,s0068,s0069,s006a,s006b,s006c,s006d,s006e,s006f,s0070,s0071,s0072,s0073,s0074,s0075,s0076,s0077,s0078,s0079,s007a,s007b,s007c,s007d,s007e,s007f,s0080,s0081,s0082,s0083,s0084,s0085,s0086,s0087,s0088,s0089,s008a,s008b,s008c,s008d,s008e,s008f,s0090,,,,,,,,,s0091,s0092,s0093,s0094,s0095,s0096
max_name_id=36
max_state_id=150
[id_name_dic]
n001=thumbnail
n002=state
n003=state-cmt
n004=state-ref
n005=nextstate
n006=embed
n007=members
n008=vars
n009=init
n00a=timelen
n00b=tab
n00c=subsc_init
n00d=update
n00e=subsc_update
n00f=move
n010=statemenu
n011=wait
n012=postwait
n013=pointer
n014=focus
n015=focus-cmt
n016=ovlbmp
n017=ovldraw
n018=ovlpb
n019=ovl-cmt
n01a=statebox
n01b=statebox-cmt
n01c=freearrow
n01d=editbox
n01e=branchdlg
n01f=branch
n020=branch-cmt
n021=nowaitbranch
n022=!dir
n023=!pos
n024=!uuid


[id_state_dic]
s0001=S_Init
s0002=S_HistoryBack
s0003=S_FocusState
s0004=S_IsMouseDown
s0005=S_FocusCancel
s0006=S_CheckMouse
s0007=S_Drag
s0008=S_DragMove
s0009=S_DragCancel
s000a=S_Drop
s000b=S_Edit
s000c=S_EditWait
s000d=S_HistoryForward
s000e=S_EditBranch
s000f=S_EditBranchWait
s0010=S_BranchEditOpen
s0011=S_BranchEditClose
s0012=S_FreeArrow
s0013=S_AddBranch
s0014=S_OpenLink
s0015=S_ExportClipboard
s0016=S_Idle2
s0017=S_FocusState2
s0018=S_ShowStateMenu
s0019=S_Copy
s001a=S_Delete
s001c=S_Refactor
s001d=S_FocusCancelWithTick
s001e=S_GroupFocus
s001f=S_CheckMouseGF
s0020=S_FocusOneState
s0021=S_DragAndDropGF
s0022=S_ShowStateMenuGF
s0023=S_Grouping
s0024=S_MoveTo
s0025=S_ImportClipboard
s0026=S_Ungrouping
s0027=S_RedrawOpt
s0028=S_FocusGroupNode
s0029=S_CheckMouseGN
s002a=S_DragAndDropGN
s002b=S_ShowGroupNodeMenu
s002c=S_EnterGN
s002d=S_UngroupingGN
s002e=S_ShowBlankMenu
s002f=S_Leave
s0030=S_EditGN
s0031=S_Sliding
s0032=S_Moveto
s0033=S_MovetoGN
s0034=S_NewState
s0035=S_CopyGN
s0036=S_DeleteGN
s0037=S_DeleteGF
s0038=S_ExportClipboardSM
s0039=S_CheckCtrKey
s003a=S_GroupFocus_2States
s003b=S_AddStateInGF
s003c=S_RemoveStateInGF
s003d=S_CheckCtrKey1
s003e=S_ExportClipboardGN
s003f=S_RedrawOpt1
s0040=S_DrawFocuses
s0041=S_CheckKeyExec1
s0042=S_ReFocus1
s0043=S_OPEN_SRC
s0044=S_GroupFocus1
s0045=S_VIEW_EXSTATE
s0046=S_FocusOneGroup
s0047=S_FocusCancel1
s0048=S_Open_upgrade_dlg
s0049=S_CenterFocusState
s004a=S_CENTER_STATE
s004b=S_DONE_CENTER_FOCUS_STATE
s004c=S_Restart_MSG
s004d=S_Restart
s004e=S_Change
s004f=S_BranchEditOpen1
s0050=S_CenterFocusGroup
s0051=S_CENTER_GROUP
s0052=S_DONE_CENTER_FOCUS_STATE1
s0053=S_BranchEditOpen2
s0054=S_ShowAskUpdate
s0055=S_OpenDataUpgrade_start
s0056=S_OpenDataUpgrade_end
s0057=S_Focus
s0058=S_SHOW_INOUTMENU
s0059=S_Focus1
s005a=S_TrackBack
s005b=S_TrackForward
s005c=S_OPEN_ALTDST_SELECT
s005d=S_OPEN_ALT_SRC_SELECT
s005e=S_CHECK_DST
s005f=S_TRANS_BRANCINFO
s0060=E_Idle3
s0061=S_SetNeedTrack
s0062=S_TrackResultBranch
s0063=S_Idle3
s0064=S_NEED_TRACK
s0065=S_PASS1
s0066=S_TICK
s0067=S_FocusTrackRecord
s0068=S_CheckCtrKey2
s0069=S_GroupFocus_2States1
s006a=S_CheckCtrKey3
s006b=S_GroupFocus_2States2
s006c=S_ImportClipboard1
s006d=S_ImportClipboard2
s006e=S_SaveHistory_ommit
s006f=S_CheckKeyExec
s0070=S_CheckKeyExec2
s0071=S_needtrack
s0072=S_NeedTrack
s0073=S_LOCALE_POINTER
s0074=S_LOCALE_POINTER1
s0075=S_FOCUSTRACK_IFNEED
s0076=S_FOCUSTRACK_IFNEED1
s0077=S_NEED_TRACK1
s0078=S_CHECK_MRB_OPTION
s0079=S_KeyExec
s007a=S_ClearKeyExec
s007b=S_OpenMenuByMbrOnlyIfOption1
s007c=S_OpenMenu_w_mbr
s007d=S_CopyStateName
s007e=S_CHECK_CTRL
s007f=S_FocusHead
s0080=S_FocusTail
s0081=S_HistoryShow
s0082=S_TrackShow
s0083=S_ImportClipboardAsBase
s0084=S_Delete1
s0085=S_Delete2
s0086=S_CLEAR_DST
s0087=S_CheckMbrOption
s0088=S_CheckMbrOption1
s0089=S_INSERT_NEW
s008a=S_RemoveComment
s008b=S_OpenMenuByMbrOnlyIfOption
s008c=S_CheckOuter
s008d=S_Draw_AllFoucs
s008e=S_AlignHorizontally
s008f=S_AlignVertically
s0090=S_CommentOut
s0091=S_ShowOuterMenu
s0092=S_CCDRAGENTER
s0093=S_DragMove1
s0094=S_COPY_CLIPBOARD
s0095=S_CCRESET
s0096=S_CCRESET1


[s0001]
n002=S_Init
n003=初期化する
n005=S_Idle2
n018=ovlpb_hide();
n022=@@@
/
(0,0)
The root
@@@

n023=212,108
n024=100001

[s0002]
n001=#KHjAZYwVw6uO1NAcbNZvHw==
n002=S_HistoryBack
n003=履歴を一つ遡る
n005=S_RedrawOpt
n010=statemenu_historyback();
n022=@@@
/BlankWork/
(1547,660)
ブランク空間作業
@@@

n023=1369,555
n024=200022

[s0003]
n002=S_FocusState
n003=ステートをフォーカス
n005=S_IsMouseDown
n007=bool m_ctrl_down_at_focus;
n00b=tab_contentwrite();
n014=@@@
focus_set();
focus_draw();
if (m_needtrack)
{
    m_needtrack = false;
    track_focus();
}
m_ctrl_down_at_focus=isCtrlKey();
@@@

n015=@@@
描画
PB表示
@@@

n021=NoWait();
n022=@@@
/SingleStateWork/
(1542,112)
ステート単体作業
@@@

n023=608,764
n024=100002

[s0004]
n001=#uD0k52raoqP6ySPR9O9xjA==
n002=S_IsMouseDown
n003=マウスダウンしたか
n011=@@@
(wait_mousedown() || m_center_focus_state!=null || m_center_focus_group!=null || hasKeyexec() || G.m_cc_dragdrop != G.CCDD.none  )
@@@

n013=pointer_check();
n01f=@@@
br_isCCDrop(S_FocusCancel);
br_hasKeyExec(S_CheckKeyExec);
br_isOnFcs(S_CheckMouse);
br_isFcsCnclNotOnSt(S_FocusCancelWithTick);
br_isFcsCnclOnSt(S_CheckCtrKey);
br_notAbove(S_FocusCancelWithTick);
@@@

n020=@@@
CCドロップ
キーボードコマンド
フォーカス上
外クリック、他ステート以外
外クリック、他ステート上
?
@@@

n021=NoWait();
n022=@@@
/SingleStateWork/
(1542,112)
ステート単体作業
@@@

n023=1040,117
n024=100003

[s0005]
n002=S_FocusCancel
n003=フォーカス取消
n005=S_Idle2
n00b=tab_contentclear();
n014=@@@
focus_reset();
focus_erase();
@@@

n01b=0
n01f=@@@
br_isCCDrop(S_Idle2);
br_hasKeyExec(S_Idle2);
br_isOnSt(S_FocusState);
@@@

n020=@@@
?
?
?
@@@

n021=NoWait();
n022=@@@
/
(0,0)
The root
@@@

n023=431,1283
n024=100004

[s0006]
n002=S_CheckMouse
n003=マウスのアクション確認
n004=CheckOnFocusStateControl.psgg
n00c=subsc_chkonfcs_init();
n00e=subsc_chkonfcs_update();
n011=subsc_chkonfcs_done()
n01f=@@@
br_isDrg(S_Drag);
br_isDClck(S_Edit);
br_isClick(S_CheckCtrKey1);
br_notAbove(S_IsMouseDown);
@@@

n020=@@@
ドラッグ時
ダブルクリック時
クリック時
フォーカス外時
@@@

n021=NoWait();
n022=@@@
/SingleStateWork/
(1542,112)
ステート単体作業
@@@

n023=1274,107
n024=100005

[s0007]
n002=S_Drag
n003=ステートボックスのドラッグ開始
n005=S_DragMove
n016=ovlbmp_create();
n017=ovldraw_do();
n018=@@@
ovlpb_setbmp();
ovlpb_show();
@@@

n019=@@@
bmp作成
描画
表示
@@@

n022=@@@
/SingleStateWork/
(1542,112)
ステート単体作業
@@@

n023=1843,117
n024=100006

[s0008]
n002=S_DragMove
n003=ドラッグ移動
n00f=move_update();
n011=wait_mouseany()
n01f=@@@
br_isDrp(S_Drop);
br_isDrgCncl(S_DragCancel);
@@@

n020=@@@
ドロップ時
キャンセル時
@@@

n022=@@@
/SingleStateWork/
(1542,112)
ステート単体作業
@@@

n023=2092,100
n024=100007

[s0009]
n002=S_DragCancel
n003=ドラッグ取消
n005=S_IsMouseDown
n018=ovlpb_hide();
n019=非表示
n022=@@@
/SingleStateWork/
(1542,112)
ステート単体作業
@@@

n023=454,190
n024=100008

[s000a]
n002=S_Drop
n003=ステートボックスのドロップ
n005=S_Idle2
n018=ovlpb_hide();
n01a=statebox_redraw();
n01b=全ステートボックス再描画
n022=@@@
/SingleStateWork/
(1542,112)
ステート単体作業
@@@

n023=2324,147
n024=100009

[s000b]
n001=#upZu9wHi7AOfKbXuY6ZU9w==
n002=S_Edit
n003=編集
n005=S_EditWait
n009=G.frontend_enable(false);
n01d=editbox_show();
n020=エディットキャンセル
n022=@@@
/SingleStateWork/
(1542,112)
ステート単体作業
@@@

n023=1842,421
n024=100010

[s000c]
n001=#qIqA2L+SLFJWx^9hrb9AKg==
n002=S_EditWait
n003=編集待ち
n005=S_Idle2
n011=wait_editdone()
n012=G.frontend_enable(true);
n01f=br_isEdCncl(S_IsMouseDown);
n020=エディットキャンセル
n022=@@@
/SingleStateWork/
(1542,112)
ステート単体作業
@@@

n023=2088,304
n024=100011

[s000d]
n001=#ITN7ppteayD^0p4sxQP51g==
n002=S_HistoryForward
n003=履歴を一つ先へ
n005=S_RedrawOpt
n010=statemenu_historyforward();
n022=@@@
/BlankWork/
(1547,660)
ブランク空間作業
@@@

n023=1369,623
n024=200023

[s000e]
n001=(bitmap)
n002=S_EditBranch
n003=ブランチ編集
n005=S_EditBranchWait
n009=G.frontend_enable(false);
n010=statemenu_editbranch_show();
n022=@@@
/SingleStateWork/
(1542,112)
ステート単体作業
@@@

n023=1845,586
n024=200024

[s000f]
n001=(bitmap)
n002=S_EditBranchWait
n003=ブランチ編集待ち
n005=S_RedrawOpt
n011=wait_editbranch_done()
n012=G.frontend_enable(true);
n01f=br_isEdBrCncl(S_IsMouseDown);
n022=@@@
/SingleStateWork/
(1542,112)
ステート単体作業
@@@

n023=2139,555
n024=200025

[s0010]
n001=(bitmap)
n002=S_BranchEditOpen
n003=ブランチエディタダイアログ表示
n005=S_BranchEditClose
n009=G.frontend_enable(false);
n01e=branchdlg_open();
n022=@@@
/BranchEditorProc/
(1538,446)
ブランチエディタ処理
@@@

n023=966,161
n024=100012

[s0011]
n001=(bitmap)
n002=S_BranchEditClose
n003=ブランチエディタダイアログ表示
n005=S_Idle2
n011=wait_branchdlg_close()
n012=G.frontend_enable(true);
n01e=branchdlg_clear();
n022=@@@
/BranchEditorProc/
(1538,446)
ブランチエディタ処理
@@@

n023=1178,158
n024=100013

[s0012]
n002=S_FreeArrow
n003=ドラッグ用矢印の作成
n004=FreeArrow.psgg
n00c=subsc_init_freearrow();
n00e=subsc_update_freearrow();
n011=wait_freearrow_done()
n01f=@@@
br_is_src_altstate(S_OPEN_ALT_SRC_SELECT);
br_is_dst_altstate(S_OPEN_ALTDST_SELECT);
br_notAbove(S_Idle2);
@@@

n020=@@@
?
?
?
@@@

n021=NoWait();
n022=@@@
/FreeArrowWork/
(1006,1432)
矢印と付随作業
@@@

n023=764,1296
n024=100014

[s0013]
n001=(bitmap)
n002=S_AddBranch
n003=一覧から追加
n005=S_RedrawOpt
n010=statemenu_add_branch();
n022=@@@
/SingleStateWork/
(1542,112)
ステート単体作業
@@@

n023=2139,656
n024=200026

[s0014]
n001=(bitmap)
n002=S_OpenLink
n003=リンクを開く
n005=S_IsMouseDown
n010=statemenu_link();
n022=@@@
/SingleStateWork/
(1542,112)
ステート単体作業
@@@

n023=2139,1672
n024=200027

[s0015]
n001=(bitmap)
n002=S_ExportClipboard
n003=クリップボードへエキスポート
n005=S_CheckMouseGF
n010=gfstatemenu_export_clipboard();
n022=@@@
/GroupFocus/
(1533,1397)
グループフォーカス作業
@@@

n023=1865,1084
n024=200028

[s0016]
n001=(bitmap)
n002=S_Idle2
n003=@@@
アイドル
マウスダウン待ち
@@@

n004=idle.psgg
n00b=tab_contentclear();
n00c=subsc_init_idle2();
n00e=subsc_update_idle2();
n011=@@@
(wait_subsc_idle2_done() || m_keyexec!=stateview.KEYEXEC.none )
@@@

n012=m_needtrack = false;
n01f=@@@
br_hasKeyExec(S_KeyExec);
br_isAskDataUpgrade(S_ShowAskUpdate);
br_isOpenDataUpgrade(S_OpenDataUpgrade_start);
br_isOnState(S_SetNeedTrack);
br_isDcOnState(S_FocusState2);
br_isReqRedraw(S_RedrawOpt);
br_isReqCenterFocusState(S_CenterFocusState);
br_isReqCenterFocusGroup(S_CenterFocusGroup);
br_isDcOnBranch(S_BranchEditOpen1);
br_isDragBranch(S_FreeArrow);
br_isDragInSpace(S_CheckMbrOption1);
br_isOnGroupNode(S_NeedTrack);
br_isClickOnBlank(S_OpenMenuByMbrOnlyIfOption1);
br_isHoldMBD(S_CheckMbrOption);
br_isClickBranch(S_SHOW_INOUTMENU);
br_isCCDragEnter(S_CCDRAGENTER);
br_notAbove(S_Idle3);
@@@

n020=@@@
?
?
?
ステート上時
?
?
?
?
?
?
?
?
?
?
?
?
?
@@@

n021=NoWait();
n022=@@@
/
(0,0)
The root
@@@

n023=428,115
n024=200015

[s0017]
n002=S_FocusState2
n003=ステートをフォーカス
n005=S_Edit
n00b=tab_contentwrite();
n014=@@@
focus_set();
focus_draw();
@@@

n015=@@@
描画
PB表示
@@@

n021=NoWait();
n022=@@@
/SingleStateWork/
(1542,112)
ステート単体作業
@@@

n023=461,34
n024=100016

[s0018]
n001=(bitmap)
n002=S_ShowStateMenu
n003=編集
n010=statemenu_init();
n011=wait_statemenu_done()
n01f=@@@
br_OpenEditFull(S_Edit);
br_EditBranch(S_EditBranch);
br_AddBranch(S_AddBranch);
br_RemoveComment(S_RemoveComment);
br_Copy(S_Copy);
br_Delete(S_Delete);
br_Refactor(S_Refactor);
br_Moveto(S_Moveto);
br_Change(S_Change);
br_Link(S_OpenLink);
br_ExportClipboard_SM(S_ExportClipboardSM);
br_CopyStateName(S_CopyStateName);
br_OpenSrc(S_OPEN_SRC);
br_ViewExState(S_VIEW_EXSTATE);
br_Focus(S_Focus);
br_notAbove(S_IsMouseDown);
@@@

n020=@@@
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
@@@

n021=NoWait();
n022=@@@
/SingleStateWork/
(1542,112)
ステート単体作業
@@@

n023=1271,931
n024=100017

[s0019]
n001=(bitmap)
n002=S_Copy
n003=コピー
n005=S_RedrawOpt
n010=statemenu_copy();
n020=エディットキャンセル
n022=@@@
/SingleStateWork/
(1542,112)
ステート単体作業
@@@

n023=2139,796
n024=100018

[s001a]
n001=(bitmap)
n002=S_Delete
n003=ベースステートがあるか？
n008=m_okCancel = check_hasbase();
n01f=@@@
br_Ok(S_Delete2);
br_Cancel(S_Delete1);
@@@

n020=@@@
OK
?
@@@

n022=@@@
/SingleStateWork/
(1542,112)
ステート単体作業
@@@

n023=2139,943
n024=100019

[s001c]
n002=S_Refactor
n003=リファクタリング
n005=S_RedrawOpt
n010=statemenu_refactor();
n011=wait_statemenu_refactor_done()
n01f=@@@
br_Ok(S_RedrawOpt);
br_Cancel(S_IsMouseDown);
@@@

n020=@@@
?
?
@@@

n022=@@@
/SingleStateWork/
(1542,112)
ステート単体作業
@@@

n023=2139,1404
n024=100021

[s001d]
n002=S_FocusCancelWithTick
n003=フォーカス取消
n005=S_Idle2
n00b=tab_contentclear();
n014=@@@
focus_reset();
focus_erase();
@@@

n01b=0
n01f=@@@
br_hasKeyExec(S_Idle2);
br_isOnSt(S_FocusState);
@@@

n020=@@@
Keyコマンドあり
?
@@@

n022=@@@
/
(0,0)
The root
@@@

n023=425,1660
n024=100022

[s001e]
n001=(bitmap)
n002=S_GroupFocus
n003=グループへのフォーカス処理
n005=S_GroupFocus1
n00c=subsc_groupfcs_init();
n00e=subsc_groupfcs_update();
n011=subsc_groupfcs_done()
n021=NoWait();
n022=@@@
/
(0,0)
The root
@@@

n023=678,2087
n024=100023

[s001f]
n001=(bitmap)
n002=S_CheckMouseGF
n003=マウス状態確認
n004=ChkOnFcsGFStateControl.psgg
n00c=subsc_chkonfcsGF_init();
n00e=subsc_chkonfcsGF_update();
n011=@@@
(subsc_chkonfcsGF_done() || hasKeyexec() || G.m_cc_dragdrop != G.CCDD.none )
@@@

n01f=@@@
br_hasKeyExec(S_CheckKeyExec2);
br_openContextMenu(S_OpenMenu_w_mbr);
br_isDrgDG(S_DragAndDropGF);
br_isCtrlClickDG(S_RemoveStateInGF);
br_isClickDG(S_OpenMenu_w_mbr);
br_isCtrlClickOnStateDG(S_AddStateInGF);
br_notAbove(S_FocusCancel);
@@@

n020=@@@
?
コンテキストメニュー表示
ドラッグ開始
グループをCtrクリック
グループをクリック
他ステートをCtrクリック
以外
@@@

n021=NoWait();
n022=@@@
/GroupFocus/
(1533,1397)
グループフォーカス作業
@@@

n023=433,129
n024=100024

[s0020]
n001=(bitmap)
n002=S_FocusOneState
n003=フォーカス１つのステート用に変数設定
n005=S_IsMouseDown
n014=focus_setoneGF_state();
n015=@@@
描画
PB表示
@@@

n021=NoWait();
n022=@@@
/
(0,0)
The root
@@@

n023=1215,1666
n024=100025

[s0021]
n002=S_DragAndDropGF
n003=ドラッグ＆ドロップ
n00c=subsc_dandGF_init();
n00e=subsc_dandGF_update();
n011=subsc_dandGF_done()
n01f=@@@
br_Ok(S_CheckMouseGF);
br_Cancel(S_CheckMouseGF);
@@@

n020=@@@
フォーカス上
以外
@@@

n021=NoWait();
n022=@@@
/GroupFocus/
(1533,1397)
グループフォーカス作業
@@@

n023=1567,90
n024=100026

[s0022]
n002=S_ShowStateMenuGF
n003=ＧＦ編集
n010=statemenuGF_init();
n011=statemenuGF_wait()
n01f=@@@
br_Grouping(S_Grouping);
br_DeleteGF(S_DeleteGF);
br_MovetoGF(S_MoveTo);
br_Ungrouping(S_Ungrouping);
br_ExportClipboard(S_ExportClipboard);
br_AlignHorizontal(S_AlignHorizontally);
br_AlignVertical(S_AlignVertically);
br_CommentOut(S_CommentOut);
br_notAbove(S_CheckMouseGF);
@@@

n020=@@@
?
?
?
?
?
?
?
?
?
@@@

n022=@@@
/GroupFocus/
(1533,1397)
グループフォーカス作業
@@@

n023=1567,533
n024=100027

[s0023]
n001=(bitmap)
n002=S_Grouping
n003=グループ化
n009=G.frontend_enable(false);
n010=gfstatemenu_grouping_init();
n011=gfstatemenu_grouping_wait()
n012=G.frontend_enable(true);
n01f=@@@
br_Ok(S_RedrawOpt);
br_Cancel(S_CheckMouseGF);
@@@

n020=エディットキャンセル
n022=@@@
/GroupFocus/
(1533,1397)
グループフォーカス作業
@@@

n023=1868,129
n024=100028

[s0024]
n001=(bitmap)
n002=S_MoveTo
n003=グループへ移動
n009=G.frontend_enable(false);
n010=gfstatemenu_moveto_init();
n011=gfstatemenu_moveto_wait()
n012=G.frontend_enable(true);
n01f=@@@
br_Ok(S_RedrawOpt);
br_Cancel(S_CheckMouseGF);
@@@

n020=エディットキャンセル
n022=@@@
/GroupFocus/
(1533,1397)
グループフォーカス作業
@@@

n023=1890,602
n024=100029

[s0025]
n001=(bitmap)
n002=S_ImportClipboard
n003=クリップボードよりインポート
n004=ImportControl.psgg
n010=@@@
m_okCancel = statemenu_importclipboard(false);
@@@

n01f=@@@
br_Ok(S_SaveHistory_ommit);
br_Cancel(S_RedrawOpt);
@@@

n020=@@@
?
?
@@@

n022=@@@
/BlankWork/
(1547,660)
ブランク空間作業
@@@

n023=1369,693
n024=200029

[s0026]
n001=(bitmap)
n002=S_Ungrouping
n003=グループ解除
n009=G.frontend_enable(false);
n010=gfstatemenu_ungrouping_init();
n011=gfstatemenu_ungrouping_wait()
n012=G.frontend_enable(true);
n01f=@@@
br_Ok(S_RedrawOpt);
br_Cancel(S_CheckMouseGF);
@@@

n020=エディットキャンセル
n022=@@@
/GroupFocus/
(1533,1397)
グループフォーカス作業
@@@

n023=1894,710
n024=100030

[s0027]
n002=S_RedrawOpt
n003=最適化再描画
n005=S_Idle2
n01a=statebox_optdraw();
n01b=最適化全再描画
n022=@@@
/
(0,0)
The root
@@@

n023=2018,841
n024=100031

[s0028]
n002=S_FocusGroupNode
n003=グループノードをフォーカス
n005=S_CheckMouseGN
n014=@@@
focus_erase();
focus_set_groupnode();
focus_draw_groupnode();
if (m_needtrack){
    m_needtrack = false;
    track_focus_groupnode();
}

@@@

n015=@@@
描画
PB表示
@@@

n021=NoWait();
n022=@@@
/GroupNodeWork/
(1545,528)
グループノード作業
@@@

n023=767,555
n024=100032

[s0029]
n001=(bitmap)
n002=S_CheckMouseGN
n003=マウス状態確認
n004=ChkOnFcsGNStateControl.psgg
n007=string m_save_groupnode_name;
n00c=@@@
m_save_groupnode_name = m_groupnode_name;
subsc_chkonfcsGN_init();
@@@

n00e=subsc_chkonfcsGN_update();
n011=@@@
(subsc_chkonfcsGN_done() || m_center_focus_state!=null || m_center_focus_group!=null || hasKeyexec() || G.m_cc_dragdrop != G.CCDD.none )
@@@

n013=Check_state_under_pointer();
n01f=@@@
br_hasKeyExec(S_CheckKeyExec1);
br_isDrgGN(S_DragAndDropGN);
br_isDrgOtherGN(S_TICK);
br_isClickStateGN(S_OpenMenuByMbrOnlyIfOption);
br_isDClickStateGN(S_EnterGN);
br_isClickOtherStateGN(S_CheckCtrKey2);
br_isClickOnStateGN(S_CheckCtrKey3);
br_isClickNotStateGN(S_FocusCancelWithTick);
br_notAbove(S_FocusCancel);
@@@

n020=@@@
キーコマンドあり
現グループノードをドラッグ
異なるグループノードをドラッグ
現グループノードをクリック
現グループノードをダブルクリック
異なるグループノードをクリック
単なるステートをクリック
?
以外
@@@

n021=NoWait();
n022=@@@
/GroupNodeWork/
(1545,528)
グループノード作業
@@@

n023=1004,544
n024=100033

[s002a]
n002=S_DragAndDropGN
n003=グループノードボックスのドラッグ開始
n004=DAnDGNStateControl.psgg
n00c=subsc_dandGN_init();
n00e=subsc_dandGN_update();
n011=subsc_dandGN_wait()
n01f=@@@
br_Ok(S_CheckMouseGN);
br_Cancel(S_CheckMouseGN);
@@@

n022=@@@
/GroupNodeWork/
(1545,528)
グループノード作業
@@@

n023=1349,403
n024=100034

[s002b]
n002=S_ShowGroupNodeMenu
n003=グループノードメニュー表示
n005=S_Idle2
n010=statemenuGN_init();
n011=statemenuGN_wait()
n01f=@@@
br_EnterGN(S_EnterGN);
br_UngroupGN(S_UngroupingGN);
br_EditGN(S_EditGN);
br_MovetoGN(S_MovetoGN);
br_CopyGN(S_CopyGN);
br_DeleteGN(S_DeleteGN);
br_ExportClipboardGN(S_ExportClipboardGN);
br_notAbove(S_CheckMouseGN);
@@@

n022=@@@
/GroupNodeWork/
(1545,528)
グループノード作業
@@@

n023=1869,603
n024=100035

[s002c]
n002=S_EnterGN
n003=GN中へ
n005=S_RedrawOpt
n010=statemenu_enterGN();
n020=エディットキャンセル
n022=@@@
/GroupNodeWork/
(1545,528)
グループノード作業
@@@

n023=2161,518
n024=100036

[s002d]
n001=(bitmap)
n002=S_UngroupingGN
n003=GN中へ
n005=S_RedrawOpt
n010=statemenu_ungroupingGN();
n020=エディットキャンセル
n022=@@@
/GroupNodeWork/
(1545,528)
グループノード作業
@@@

n023=2166,673
n024=100037

[s002e]
n002=S_ShowBlankMenu
n003=ブランクメニュー表示
n010=statemenuBlank_init();
n011=statemenuBlank_wait()
n01f=@@@
br_Leave(S_Leave);
br_NewState(S_NewState);
br_HistoryShow(S_HistoryShow);
br_HistoryBack(S_HistoryBack);
br_HistoryForward(S_HistoryForward);
br_ImportClipboard(S_ImportClipboard);
br_ImportClipboard_wo_outflow(S_ImportClipboard1);
br_ImportClipboard_as_base(S_ImportClipboardAsBase);
br_TrackShow(S_TrackShow);
br_TrackBack(S_TrackBack);
br_TrackForward(S_TrackForward);
br_FocusHead(S_FocusHead);
br_FocusTail(S_FocusTail);
br_notAbove(S_Idle2);
@@@

n020=@@@
?
?
?
?
?
?
?
?
?
?
?
?
?
?
@@@

n022=@@@
/BlankWork/
(1547,660)
ブランク空間作業
@@@

n023=918,537
n024=100038

[s002f]
n002=S_Leave
n003=@@@
離れる
上の階層へ

@@@

n005=S_RedrawOpt
n010=statemenu_leave();
n020=エディットキャンセル
n022=@@@
/BlankWork/
(1547,660)
ブランク空間作業
@@@

n023=1369,316
n024=100039

[s0030]
n001=(bitmap)
n002=S_EditGN
n003=@@@
GroupNode
編集
@@@

n009=G.frontend_enable(false);
n010=statemenu_editGN();
n011=statemenu_editGN_wait()
n012=G.frontend_enable(true);
n01f=@@@
br_Ok(S_RedrawOpt);
br_Cancel(S_CheckMouseGN);
@@@

n020=@@@
エディット
キャンセル
@@@

n022=@@@
/GroupNodeWork/
(1545,528)
グループノード作業
@@@

n023=2176,830
n024=100040

[s0031]
n002=S_Sliding
n003=スライディング
n004=SlidingStateControl.psgg
n005=S_Idle2
n00c=subsc_sliding_init();
n00e=subsc_sliding_update();
n011=subsc_sliding_wait()
n021=NoWait();
n022=@@@
/
(0,0)
The root
@@@

n023=1537,1252
n024=100041

[s0032]
n002=S_Moveto
n003=グループ移動
n010=statemenu_moveto_init();
n011=wait_statemenu_moveto_done()
n01f=@@@
br_Ok(S_RedrawOpt);
br_Cancel(S_IsMouseDown);
@@@

n020=@@@
?
?
@@@

n022=@@@
/SingleStateWork/
(1542,112)
ステート単体作業
@@@

n023=2139,1265
n024=200016

[s0033]
n001=(bitmap)
n002=S_MovetoGN
n003=グループへ移動
n005=S_RedrawOpt
n009=G.frontend_enable(false);
n010=statemenu_movetoGN();
n011=statemenu_movetoGN_done()
n012=G.frontend_enable(true);
n022=@@@
/GroupNodeWork/
(1545,528)
グループノード作業
@@@

n023=2183,1057
n024=200017

[s0034]
n001=(bitmap)
n002=S_NewState
n003=新規ステート作成
n005=S_RedrawOpt
n010=statemenu_newstate();
n020=エディットキャンセル
n022=@@@
/BlankWork/
(1547,660)
ブランク空間作業
@@@

n023=1369,407
n024=200018

[s0035]
n002=S_CopyGN
n003=ＧＮを丸ごとコピーする
n005=S_RedrawOpt
n010=statemenu_copyGN();
n022=@@@
/GroupNodeWork/
(1545,528)
グループノード作業
@@@

n023=2183,1441
n024=200019

[s0036]
n001=(bitmap)
n002=S_DeleteGN
n003=グループノード削除
n009=G.frontend_enable(false);
n010=statemenu_deleteGN_init();
n011=wait_statemenu_deleteGN_done()
n012=G.frontend_enable(true);
n01f=@@@
br_Ok(S_RedrawOpt);
br_Cancel(S_CheckMouseGN);
@@@

n022=@@@
/GroupNodeWork/
(1545,528)
グループノード作業
@@@

n023=2181,1237
n024=200020

[s0037]
n001=(bitmap)
n002=S_DeleteGF
n003=グループフォーカスされたステートを削除
n005=S_RedrawOpt
n009=G.frontend_enable(false);
n010=gfstatemenu_delete_init();
n011=gfstatemenu_delete_wait()
n012=G.frontend_enable(true);
n01f=@@@
br_Ok(S_RedrawOpt);
br_Cancel(S_CheckMouseGF);
@@@

n022=@@@
/GroupFocus/
(1533,1397)
グループフォーカス作業
@@@

n023=1893,439
n024=200021

[s0038]
n001=(bitmap)
n002=S_ExportClipboardSM
n003=エキスポート
n005=S_IsMouseDown
n010=statemenu_exportsm();
n022=@@@
/SingleStateWork/
(1542,112)
ステート単体作業
@@@

n023=2139,1790
n024=200030

[s0039]
n001=(bitmap)
n002=S_CheckCtrKey
n003=コントロールキーダウン中？
n01f=@@@
br_isCntrlKeyDown(S_GroupFocus_2States);
br_notAbove(S_FocusCancel);
@@@

n020=@@@
?
?
@@@

n021=NoWait();
n022=@@@
/SingleStateWork/
(1542,112)
ステート単体作業
@@@

n023=256,617
n024=200032

[s003a]
n001=(bitmap)
n002=S_GroupFocus_2States
n003=フォーカス対象を追加して、グループフォーカスへ
n005=S_CheckMouseGF
n011=(G.mouse_down_or_up==false)
n014=@@@
focus_set_2state();
//focus_draw();
draw_focuses();
@@@

n021=//NoWait();
n022=@@@
/SingleStateWork/
(1542,112)
ステート単体作業
@@@

n023=445,612
n024=200033

[s003b]
n001=(bitmap)
n002=S_AddStateInGF
n003=グループフォーカスにステート追加
n005=S_CheckMouseGF
n011=(G.mouse_down_or_up==false)
n014=@@@
focus_add_stateGF();
draw_focuses();//focus_draw();
@@@

n022=@@@
/GroupFocus/
(1533,1397)
グループフォーカス作業
@@@

n023=1569,771
n024=200034

[s003c]
n001=(bitmap)
n002=S_RemoveStateInGF
n003=グループフォーカスからステート削除
n011=(G.mouse_down_or_up==false)
n014=@@@
focus_remove_stateGF();
draw_focuses();

@@@

n01f=@@@
br_ExistOneGF_state(S_FocusOneState);
br_ExistOneGF_group(S_FocusOneGroup);
br_ExistMultiGF(S_CheckMouseGF);
br_NotExistGF(S_Idle2);
@@@

n020=@@@
?
?
?
?
@@@

n022=@@@
/GroupFocus/
(1533,1397)
グループフォーカス作業
@@@

n023=1556,255
n024=200035

[s003d]
n001=(bitmap)
n002=S_CheckCtrKey1
n003=コントロールキー？
n01f=@@@
br_isCntrlKeyDown(S_FocusCancel1);
br_notAbove(S_CHECK_MRB_OPTION);
@@@

n020=@@@
?
?
@@@

n021=NoWait();
n022=@@@
/SingleStateWork/
(1542,112)
ステート単体作業
@@@

n023=1514,306
n024=200036

[s003e]
n001=(bitmap)
n002=S_ExportClipboardGN
n003=エキスポート
n005=S_RedrawOpt
n010=statemenu_exportGN();
n022=@@@
/GroupNodeWork/
(1545,528)
グループノード作業
@@@

n023=2182,1552
n024=200031

[s003f]
n002=S_RedrawOpt1
n003=最適化再描画
n005=S_DrawFocuses
n01a=statebox_optdraw();
n01b=最適化全再描画
n022=@@@
/BlankWork/
(1547,660)
ブランク空間作業
@@@

n023=2291,773
n024=200038

[s0040]
n001=(bitmap)
n002=S_DrawFocuses
n003=フォーカス描画
n005=S_GroupFocus1
n014=draw_focuses();
n022=@@@
/BlankWork/
(1547,660)
ブランク空間作業
@@@

n023=2519,777
n024=200044

[s0041]
n001=(bitmap)
n002=S_CheckKeyExec1
n01f=@@@
br_openContextMenu(S_ShowGroupNodeMenu);
br_keyEnterGroup(S_EnterGN);
br_keyFocusAll(S_Draw_AllFoucs);
br_keyDelete(S_DeleteGN);
br_notAbove(S_FocusCancel);
@@@

n020=@@@
?
?
?
?
?
@@@

n022=@@@
/GroupNodeWork/
(1545,528)
グループノード作業
@@@

n023=1341,623
n024=200220

[s0042]
n001=(bitmap)
n002=S_ReFocus1
n003=異なるグループノードをフォーカス
n005=S_DragAndDropGN
n014=@@@
focus_erase();
//focus_set_groupnode();  使用しない！ 既にセット済み
focus_draw_groupnode();
@@@

n015=@@@
描画
PB表示
@@@

n021=NoWait();
n022=@@@
/GroupNodeWork/
(1545,528)
グループノード作業
@@@

n023=1163,393
n024=200051

[s0043]
n001=(bitmap)
n002=S_OPEN_SRC
n003=ソース開く
n005=S_IsMouseDown
n009=statemenu_opensrc();
n022=@@@
/SingleStateWork/
(1542,112)
ステート単体作業
@@@

n023=2139,2042
n024=200067

[s0044]
n001=(bitmap)
n002=S_GroupFocus1
n003=グループへのフォーカス処理
n01f=@@@
br_ExistOneGF_state(S_FocusOneState);
br_ExistOneGF_group(S_FocusOneGroup);
br_ExistMultiGF(S_FocusTrackRecord);
br_NotExistGF(S_Idle2);
@@@

n020=@@@
一つのステート時
一つのグループ時
複数ノード時
?
@@@

n021=NoWait();
n022=@@@
/
(0,0)
The root
@@@

n023=982,1686
n024=200043

[s0045]
n001=(bitmap)
n002=S_VIEW_EXSTATE
n003=外部ステートの対象グループへ移動
n005=S_Idle2
n009=statemenu_view_exstate();
n022=@@@
/SingleStateWork/
(1542,112)
ステート単体作業
@@@

n023=2139,2164
n024=200068

[s0046]
n001=(bitmap)
n002=S_FocusOneGroup
n003=フォーカス１つのグループ用に変数設定
n005=S_CheckMouseGN
n014=focus_setoneGF_group();
n015=@@@
描画
PB表示
@@@

n021=NoWait();
n022=@@@
/
(0,0)
The root
@@@

n023=1216,1773
n024=200049

[s0047]
n001=(bitmap)
n002=S_FocusCancel1
n003=フォーカス取消
n005=S_Idle2
n00b=tab_contentclear();
n011=G.mouse_down_or_up==false
n014=@@@
focus_reset();
focus_erase();
@@@

n01b=0
n022=@@@
/SingleStateWork/
(1542,112)
ステート単体作業
@@@

n023=1734,323
n024=200037

[s0048]
n002=S_Open_upgrade_dlg
n003=アップグレードダイアログ表示
n009=upgrade_dlg_start();
n011=upgrade_dlg_done()
n01f=@@@
br_Ok(S_Restart_MSG);
br_notAbove(S_OpenDataUpgrade_end);
@@@

n020=@@@
?
?
@@@

n022=@@@
/UpgradeDialog/
(734,117)
アップグレードダイアログと処理
@@@

n023=559,372
n024=200102

[s0049]
n001=(bitmap)
n002=S_CenterFocusState
n003=@@@
特定ステートをセンター表示かつフォーカス
作業中
@@@

n005=S_CENTER_STATE
n009=@@@
if (!m_center_focus_same_dirpath)
{
    var dirpath = stateview.DirPathExcelUtil.get_dirpath(m_center_focus_state);
    G.node_set_curdir(dirpath);
    DrawBenri.draw_opt();
}
else
{
    m_center_focus_same_dirpath = false;
}
@@@

n021=NoWait();
n022=@@@
/CenterAndFocusState/
(1550,192)
指定ステートをセンタリング＆フォーカス
@@@

n023=693,347
n024=200056

[s004a]
n001=(bitmap)
n002=S_CENTER_STATE
n003=指定ステートを中央に
n005=S_LOCALE_POINTER
n009=center_state(m_center_focus_state);
n021=NoWait();
n022=@@@
/CenterAndFocusState/
(1550,192)
指定ステートをセンタリング＆フォーカス
@@@

n023=868,348
n024=200061

[s004b]
n001=(bitmap)
n002=S_DONE_CENTER_FOCUS_STATE
n003=センタリング＆フォーカス終了処理
n005=S_FOCUSTRACK_IFNEED
n009=m_center_focus_state = null;
n021=NoWait();
n022=@@@
/CenterAndFocusState/
(1550,192)
指定ステートをセンタリング＆フォーカス
@@@

n023=1248,349
n024=200066

[s004c]
n002=S_Restart_MSG
n003=リスタートメッセージ
n005=S_Restart
n009=restart_msg_start();
n011=restart_msg_done()
n022=@@@
/UpgradeDialog/
(734,117)
アップグレードダイアログと処理
@@@

n023=802,253
n024=200103

[s004d]
n002=S_Restart
n005=S_OpenDataUpgrade_end
n009=restart();
n022=@@@
/UpgradeDialog/
(734,117)
アップグレードダイアログと処理
@@@

n023=997,268
n024=200104

[s004e]
n002=S_Change
n003=種別変更
n010=statemenu_change();
n01f=@@@
br_Ok(S_RedrawOpt);
br_Cancel(S_IsMouseDown);
@@@

n020=@@@
?
?
@@@

n022=@@@
/SingleStateWork/
(1542,112)
ステート単体作業
@@@

n023=2139,1539
n024=200105

[s004f]
n002=S_BranchEditOpen1
n003=対象はステート？
n01f=@@@
br_checkStateForBranchEdit(S_BranchEditOpen);
br_notAbove(S_BranchEditOpen2);
@@@

n020=@@@
?
?
@@@

n022=@@@
/BranchEditorProc/
(1538,446)
ブランチエディタ処理
@@@

n023=660,258
n024=200142

[s0050]
n001=(bitmap)
n002=S_CenterFocusGroup
n003=@@@
特定グループをセンター表示かつフォーカス
作業中
@@@

n005=S_CENTER_GROUP
n009=@@@
if (!m_center_focus_same_dirpath)
{
    var dirpath = stateview.GroupNodeUtil.get_parent_path(m_center_focus_group);
    G.node_set_curdir(dirpath);
    DrawBenri.draw_opt();
}
else
{
    m_center_focus_same_dirpath=false;
}
@@@

n021=NoWait();
n022=@@@
/CenterAndFocusGroup/
(1556,318)
指定グループをセンタリング＆フォーカス
@@@

n023=651,465
n024=200075

[s0051]
n001=(bitmap)
n002=S_CENTER_GROUP
n003=指定グループを中央に
n005=S_LOCALE_POINTER1
n009=center_group(m_center_focus_group);
n021=NoWait();
n022=@@@
/CenterAndFocusGroup/
(1556,318)
指定グループをセンタリング＆フォーカス
@@@

n023=854,472
n024=200076

[s0052]
n001=(bitmap)
n002=S_DONE_CENTER_FOCUS_STATE1
n003=センタリング＆フォーカス終了処理
n005=S_FOCUSTRACK_IFNEED1
n009=m_center_focus_group = null;
n021=NoWait();
n022=@@@
/CenterAndFocusGroup/
(1556,318)
指定グループをセンタリング＆フォーカス
@@@

n023=1260,477
n024=200077

[s0053]
n002=S_BranchEditOpen2
n003=WARNING
n005=S_Idle2
n009=@@@
 G.NoticeToUser_warning("Because a group, cannot open dialog.");
@@@

n022=@@@
/BranchEditorProc/
(1538,446)
ブランチエディタ処理
@@@

n023=1452,352
n024=200143

[s0054]
n002=S_ShowAskUpdate
n003=データアップデート確認表示
n005=S_Idle2
n009=ask_update_dlg_start();
n011=ask_update_dlg_done()
n022=@@@
/UpgradeDialog/
(734,117)
アップグレードダイアログと処理
@@@

n023=473,36
n024=200085

[s0055]
n002=S_OpenDataUpgrade_start
n005=S_Open_upgrade_dlg
n022=@@@
/UpgradeDialog/
(734,117)
アップグレードダイアログと処理
@@@

n023=356,393
n024=200093

[s0056]
n002=S_OpenDataUpgrade_end
n005=S_Idle2
n009=G.psgg_open_upgrade = false;
n022=@@@
/UpgradeDialog/
(734,117)
アップグレードダイアログと処理
@@@

n023=1193,394
n024=200101

[s0057]
n002=S_Focus
n003=指定ステートをフォーカス
n009=statemenu_focus_state();
n01f=@@@
br_Ok(S_Idle2);
br_Cancel(S_IsMouseDown);
@@@

n020=@@@
?
?
@@@

n022=@@@
/SingleStateWork/
(1542,112)
ステート単体作業
@@@

n023=2139,2350
n024=200144

[s0058]
n002=S_SHOW_INOUTMENU
n009=inoutmenu_init();
n011=inoutmenu_done()
n01f=@@@
br_goInOutDialog(S_BranchEditOpen1);
br_clearDst(S_CLEAR_DST);
br_insertNew(S_INSERT_NEW);
br_hasInOutState(S_CHECK_CTRL);
br_notAbove(S_PASS1);
@@@

n020=@@@
ダイアログへ
流出先クリア
新規ステート挿入
ステート指定
指定せず
@@@

n021=NoWait();
n022=@@@
/InOutMenu/
(1550,790)
In Out メニュー作業
@@@

n023=463,756
n024=200172

[s0059]
n002=S_Focus1
n005=S_PASS1
n009=inoutmenu_focus_state();
n021=NoWait();
n022=@@@
/InOutMenu/
(1550,790)
In Out メニュー作業
@@@

n023=1012,933
n024=200173

[s005a]
n002=S_TrackBack
n003=前の場所へ
n005=S_TrackResultBranch
n009=statemenu_trackback();
n021=NoWait();
n022=@@@
/BlankWork/
(1547,660)
ブランク空間作業
@@@

n023=860,1159
n024=200174

[s005b]
n002=S_TrackForward
n003=次の場所へ
n005=S_TrackResultBranch
n009=statemenu_trackforward();
n021=NoWait();
n022=@@@
/BlankWork/
(1547,660)
ブランク空間作業
@@@

n023=843,1300
n024=200175

[s005c]
n001=(bitmap)
n002=S_OPEN_ALTDST_SELECT
n003=ALT時の行先決定ダイアログ
n009=altstate_dst_dialog_open();
n011=altstate_dst_dialog_done()
n012=m_okCancel = altstate_dst_dialog_ok();
n01f=@@@
br_Ok(S_RedrawOpt);
br_Cancel(S_Idle2);
@@@

n020=@@@
?
?
@@@

n022=@@@
/FreeArrowWork/
(1006,1432)
矢印と付随作業
@@@

n023=1010,1422
n024=200114

[s005d]
n002=S_OPEN_ALT_SRC_SELECT
n003=ALT時流入先入力
n009=altstate_src_dialog_open();
n011=altstate_src_dialog_done()
n012=m_okCancel = altstate_src_dialog_ok();
n01f=@@@
br_Ok(S_CHECK_DST);
br_Cancel(S_Idle2);
@@@

n020=@@@
?
?
@@@

n022=@@@
/FreeArrowWork/
(1006,1432)
矢印と付随作業
@@@

n023=971,1280
n024=200123

[s005e]
n002=S_CHECK_DST
n01f=@@@
br_is_dst_altstate(S_TRANS_BRANCINFO);
br_notAbove(S_Idle2);
@@@

n020=@@@
?
?
@@@

n022=@@@
/FreeArrowWork/
(1006,1432)
矢印と付随作業
@@@

n023=1173,1310
n024=200132

[s005f]
n002=S_TRANS_BRANCINFO
n003=分岐情報の移行
n005=S_OPEN_ALTDST_SELECT
n009=altsrcbi_to_srcbi();
n022=@@@
/FreeArrowWork/
(1006,1432)
矢印と付随作業
@@@

n023=1350,1326
n024=200141

[s0060]
n002=E_Idle3
n006=bool m_needtrack=false;
n022=@@@
/SingleStateWork/
(1542,112)
ステート単体作業
@@@

n023=398,327
n024=200176

[s0061]
n002=S_SetNeedTrack
n005=S_FocusState
n009=m_needtrack = true;
n021=NoWait();
n022=@@@
/SingleStateWork/
(1542,112)
ステート単体作業
@@@

n023=398,288
n024=200177

[s0062]
n002=S_TrackResultBranch
n003=結果で分岐
n01f=@@@
br_trackresult_go_focusstate(S_FocusState);
br_trackresult_go_focusgroupnode(S_FocusGroupNode);
br_trackresult_go_focusstates(S_DrawFocuses);
br_notAbove(S_RedrawOpt);
@@@

n020=@@@
ステートフォーカスへ
グループノードフォーカスへ
ステート集合フォーカスへ
?
@@@

n021=NoWait();
n022=@@@
/BlankWork/
(1547,660)
ブランク空間作業
@@@

n023=1062,1197
n024=200178

[s0063]
n002=S_Idle3
n003=new state
n005=S_Idle2
n022=@@@
/
(0,0)
The root
@@@

n023=175,586
n024=200153

[s0064]
n002=S_NEED_TRACK
n005=S_CenterFocusState
n009=m_needtrack = true;
n021=NoWait();
n022=@@@
/CenterAndFocusState/
(1550,192)
指定ステートをセンタリング＆フォーカス
@@@

n023=604,79
n024=200224

[s0065]
n002=S_PASS1
n005=S_RedrawOpt
n022=@@@
/InOutMenu/
(1550,790)
In Out メニュー作業
@@@

n023=1977,682
n024=200171

[s0066]
n002=S_TICK
n005=S_NeedTrack
n022=@@@
/GroupNodeWork/
(1545,528)
グループノード作業
@@@

n023=993,450
n024=200180

[s0067]
n002=S_FocusTrackRecord
n003=フォーカストラックレコード
n005=S_CheckMouseGF
n009=track_focus_states();
n022=@@@
/GroupFocus/
(1533,1397)
グループフォーカス作業
@@@

n023=250,212
n024=200181

[s0068]
n002=S_CheckCtrKey2
n003=コントロールキー？
n01f=@@@
br_isCntrlKeyDown(S_GroupFocus_2States1);
br_notAbove(S_TICK);
@@@

n020=@@@
?
?
@@@

n021=//NoWait();
n022=@@@
/GroupNodeWork/
(1545,528)
グループノード作業
@@@

n023=528,1112
n024=200192

[s0069]
n002=S_GroupFocus_2States1
n005=S_CheckMouseGF
n011=(G.mouse_down_or_up==false)
n012=@@@
focus_set_2group();
//focus_erase();
draw_focuses();
@@@

n022=@@@
/GroupNodeWork/
(1545,528)
グループノード作業
@@@

n023=770,1164
n024=200193

[s006a]
n002=S_CheckCtrKey3
n003=コントロールキー？
n01f=@@@
br_isCntrlKeyDown(S_GroupFocus_2States2);
br_notAbove(S_FocusCancelWithTick);
@@@

n020=@@@
?
?
@@@

n021=NoWait();
n022=@@@
/GroupNodeWork/
(1545,528)
グループノード作業
@@@

n023=516,1284
n024=200194

[s006b]
n002=S_GroupFocus_2States2
n005=S_CheckMouseGF
n011=(G.mouse_down_or_up==false)
n012=@@@
focus_set_group_and_state();
focus_erase();
draw_focuses();
@@@

n022=@@@
/GroupNodeWork/
(1545,528)
グループノード作業
@@@

n023=769,1345
n024=200195

[s006c]
n002=S_ImportClipboard1
n003=@@@
インポート
流出先除外
@@@

n004=ImportControl.psgg
n010=@@@
m_okCancel = statemenu_importclipboard(true);
@@@

n01f=@@@
br_Ok(S_SaveHistory_ommit);
br_Cancel(S_RedrawOpt);
@@@

n020=@@@
?
?
@@@

n022=@@@
/BlankWork/
(1547,660)
ブランク空間作業
@@@

n023=1369,811
n024=200196

[s006d]
n001=(bitmap)
n002=S_ImportClipboard2
n003=@@@
インポート
キーボードから
流出先フラグ使用
@@@

n004=ImportControl.psgg
n010=@@@
var wo_outflow = m_keyexec == stateview.KEYEXEC.paste_wo_outflow;
m_okCancel = statemenu_importclipboard(wo_outflow);
m_keyexec = stateview.KEYEXEC.none;

@@@

n01f=@@@
br_Ok(S_SaveHistory_ommit);
br_Cancel(S_RedrawOpt);
@@@

n020=@@@
?
?
@@@

n022=@@@
/BlankWork/
(1547,660)
ブランク空間作業
@@@

n023=853,1473
n024=200197

[s006e]
n002=S_SaveHistory_ommit
n005=S_RedrawOpt1
n009=@@@
//stateview.History2.SaveForce_modify_value("Pasted.");
@@@

n022=@@@
/BlankWork/
(1547,660)
ブランク空間作業
@@@

n023=2060,775
n024=200198

[s006f]
n002=S_CheckKeyExec
n01f=@@@
br_openContextMenu(S_ShowStateMenu);
br_keyFocusAll(S_Draw_AllFoucs);
br_keyDelete(S_Delete);
br_notAbove(S_FocusCancel);
@@@

n020=@@@
?
?
?
?
@@@

n021=NoWait();
n022=@@@
/SingleStateWork/
(1542,112)
ステート単体作業
@@@

n023=1276,366
n024=200219

[s0070]
n002=S_CheckKeyExec2
n01f=@@@
br_openContextMenu(S_ShowStateMenuGF);
br_keyFocusAll(S_Draw_AllFoucs);
br_keyDelete(S_DeleteGF);
br_notAbove(S_FocusCancel);
@@@

n020=@@@
?
?
?
?
@@@

n022=@@@
/GroupFocus/
(1533,1397)
グループフォーカス作業
@@@

n023=730,406
n024=200221

[s0071]
n002=S_needtrack
n005=S_GroupFocus
n009=m_needtrack=true;
n022=@@@
/
(0,0)
The root
@@@

n023=682,1981
n024=200191

[s0072]
n002=S_NeedTrack
n005=S_FocusGroupNode
n009=m_needtrack = true;
n021=NoWait();
n022=@@@
/GroupNodeWork/
(1545,528)
グループノード作業
@@@

n023=575,558
n024=200179

[s0073]
n002=S_LOCALE_POINTER
n003=ポインタをフォーカスの上に
n005=S_DONE_CENTER_FOCUS_STATE
n009=@@@
if (m_center_focus_wo_cursor==false)
{
    stateview.ViewUtil.SetPointerOnState(m_center_focus_state );
}
m_center_focus_wo_cursor = false;
@@@

n021=NoWait();
n022=@@@
/CenterAndFocusState/
(1550,192)
指定ステートをセンタリング＆フォーカス
@@@

n023=1059,348
n024=200222

[s0074]
n001=(bitmap)
n002=S_LOCALE_POINTER1
n003=ポインタをフォーカスの上に
n005=S_DONE_CENTER_FOCUS_STATE1
n009=@@@
var group = stateview.GroupNodeUtil.get_last_path(m_center_focus_group);
if (!string.IsNullOrEmpty(group)) group = group.Replace("/","");

if (G.vf_sc.m_center_focus_wo_cursor == false)
{
    stateview.ViewUtil.SetPointerOnState(stateview.AltState.MakeAltStateName(group));
}
G.vf_sc.m_center_focus_wo_cursor = false;

@@@

n021=NoWait();
n022=@@@
/CenterAndFocusGroup/
(1556,318)
指定グループをセンタリング＆フォーカス
@@@

n023=1055,471
n024=200223

[s0075]
n002=S_FOCUSTRACK_IFNEED
n005=S_IsMouseDown
n009=@@@
if (m_needtrack)
{
    m_needtrack = false;
    track_focus();
}
@@@

n021=NoWait();
n022=@@@
/CenterAndFocusState/
(1550,192)
指定ステートをセンタリング＆フォーカス
@@@

n023=1464,359
n024=200225

[s0076]
n002=S_FOCUSTRACK_IFNEED1
n005=S_CheckMouseGN
n009=@@@
if (m_needtrack)
{
    m_needtrack = false;
    track_focus();
}
@@@

n021=NoWait();
n022=@@@
/CenterAndFocusGroup/
(1556,318)
指定グループをセンタリング＆フォーカス
@@@

n023=1548,549
n024=200226

[s0077]
n002=S_NEED_TRACK1
n005=S_CenterFocusGroup
n009=m_needtrack = true;
n021=NoWait();
n022=@@@
/CenterAndFocusGroup/
(1556,318)
指定グループをセンタリング＆フォーカス
@@@

n023=486,166
n024=200227

[s0078]
n002=S_CHECK_MRB_OPTION
n003=マウス右有効時、右ボタンだったら開く
n005=S_ShowStateMenu
n01f=@@@
br_open_if_mbr(S_ShowStateMenu);
br_notAbove(S_IsMouseDown);
@@@

n020=@@@
メニューへ
?
@@@

n022=@@@
/SingleStateWork/
(1542,112)
ステート単体作業
@@@

n023=1439,609
n024=200228

[s0079]
n002=S_KeyExec
n01f=@@@
br_keyPate(S_ImportClipboard2);
br_keyHistoryBack(S_HistoryBack);
br_keyHistoryForward(S_HistoryForward);
br_keyFocusTrackBack(S_TrackBack);
br_keyFocusTrackForward(S_TrackForward);
br_openContextMenu(S_ShowBlankMenu);
br_keyFocusState(S_NEED_TRACK);
br_keyFocusGroupNode(S_NEED_TRACK1);
br_keyFocusAll(S_Draw_AllFoucs);
br_openInOutMenu(S_SHOW_INOUTMENU);
br_keyFocusClear(S_FocusCancelWithTick);
br_keyEnterGroup(S_EnterGN);
br_keyLeaveGroup(S_Leave);
br_notAbove(S_ClearKeyExec);
@@@

n020=@@@
?
?
?
?
?
?
?
?
?
?
?
?
?
?
@@@

n021=NoWait();
n022=@@@
/
(0,0)
The root
@@@

n023=754,782
n024=200208

[s007a]
n002=S_ClearKeyExec
n005=S_Idle2
n009=m_keyexec = stateview.KEYEXEC.none;
n022=@@@
/
(0,0)
The root
@@@

n023=762,1136
n024=200218

[s007b]
n002=S_OpenMenuByMbrOnlyIfOption1
n01f=@@@
br_open_if_mbr(S_CheckOuter);
br_notAbove(S_Idle2);
@@@

n020=@@@
?
?
@@@

n022=@@@
/BlankWork/
(1547,660)
ブランク空間作業
@@@

n023=355,580
n024=200230

[s007c]
n002=S_OpenMenu_w_mbr
n01f=@@@
br_open_if_mbr(S_ShowStateMenuGF);
br_notAbove(S_CheckMouseGF);
@@@

n020=@@@
?
?
@@@

n022=@@@
/GroupFocus/
(1533,1397)
グループフォーカス作業
@@@

n023=858,132
n024=200231

[s007d]
n002=S_CopyStateName
n003=ステート名をクリップへコピー
n005=S_IsMouseDown
n010=statemenu_copystatename();
n022=@@@
/SingleStateWork/
(1542,112)
ステート単体作業
@@@

n023=2139,1901
n024=200254

[s007e]
n002=S_CHECK_CTRL
n003=コントロールキー押下時はステート名をコピー
n009=inout_copy_name();
n01f=@@@
br_goFocus(S_Focus1);
br_notAbove(S_PASS1);
@@@

n020=@@@
?
?
@@@

n022=@@@
/InOutMenu/
(1550,790)
In Out メニュー作業
@@@

n023=780,942
n024=200255

[s007f]
n002=S_FocusHead
n003=先頭にフォーカス
n005=S_Idle2
n009=@@@
stateview.KeyProc.set_nearest_state_and_focus();
@@@

n022=@@@
/BlankWork/
(1547,660)
ブランク空間作業
@@@

n023=1369,1096
n024=200267

[s0080]
n002=S_FocusTail
n003=末尾にフォーカス
n005=S_Idle2
n009=@@@
stateview.KeyProc.set_farest_state_and_focus();
@@@

n022=@@@
/BlankWork/
(1547,660)
ブランク空間作業
@@@

n023=1369,1152
n024=200268

[s0081]
n002=S_HistoryShow
n003=履歴パネル開く
n005=S_Idle2
n009=@@@
G.m_history_record_panel.open_or_close();
@@@

n022=@@@
/BlankWork/
(1547,660)
ブランク空間作業
@@@

n023=1369,494
n024=200269

[s0082]
n002=S_TrackShow
n003=@@@
フォーカストラック
パネル表示
@@@

n005=S_Idle2
n009=G.m_focus_track_panel.open_or_close();
n022=@@@
/BlankWork/
(1547,660)
ブランク空間作業
@@@

n023=1369,1026
n024=200270

[s0083]
n002=S_ImportClipboardAsBase
n003=@@@
インポート
ベースステートとして
@@@

n005=S_RedrawOpt
n009=paste_as_base(); //実質新ステート
n022=@@@
/BlankWork/
(1547,660)
ブランク空間作業
@@@

n023=1369,928
n024=200271

[s0084]
n002=S_Delete1
n003=削除
n009=G.frontend_enable(false);
n010=statemenu_delete_init();
n011=wait_statemenu_delete_done()
n012=G.frontend_enable(true);
n01f=@@@
br_Ok(S_RedrawOpt);
br_Cancel(S_IsMouseDown);
@@@

n020=@@@
OK
?
@@@

n022=@@@
/SingleStateWork/
(1542,112)
ステート単体作業
@@@

n023=2675,927
n024=200272

[s0085]
n002=S_Delete2
n003=削除強硬するか？
n009=G.frontend_enable(false);
n010=statemenu_delete_base_init();
n011=wait_statemenu_delete_base_done()
n012=G.frontend_enable(true);
n01f=@@@
br_Ok(S_Delete1);
br_Cancel(S_IsMouseDown);
@@@

n020=@@@
OK
?
@@@

n022=@@@
/SingleStateWork/
(1542,112)
ステート単体作業
@@@

n023=2410,875
n024=200273

[s0086]
n002=S_CLEAR_DST
n003=流出先クリア
n005=S_PASS1
n009=inout_menu_clear_dst();
n022=@@@
/InOutMenu/
(1550,790)
In Out メニュー作業
@@@

n023=775,647
n024=200274

[s0087]
n002=S_CheckMbrOption
n003=Mbrオプション時は左ボタンのみスライド
n01f=@@@
br_mbroption_if_mbl(S_Sliding);
br_mbroption_if_mbr(S_CheckMbrOption1);
br_notAbove(S_Idle3);
@@@

n020=@@@
?
?
?
@@@

n021=NoWait();
n022=@@@
/
(0,0)
The root
@@@

n023=1261,1076
n024=200242

[s0088]
n002=S_CheckMbrOption1
n003=Mbrオプション時は右ボタンのみ選択へ
n01f=@@@
br_mbroption_if_mbr(S_needtrack);
br_notAbove(S_CheckMbrOption);
@@@

n020=@@@
?
?
@@@

n021=NoWait();
n022=@@@
/
(0,0)
The root
@@@

n023=698,1725
n024=200253

[s0089]
n002=S_INSERT_NEW
n003=新規ステートの挿入
n005=S_IsMouseDown
n009=inout_menu_insert();
n022=@@@
/InOutMenu/
(1550,790)
In Out メニュー作業
@@@

n023=771,730
n024=200275

[s008a]
n002=S_RemoveComment
n003=コメント削除
n005=S_RedrawOpt
n009=statemenu_remove_comment();
n022=@@@
/SingleStateWork/
(1542,112)
ステート単体作業
@@@

n023=2139,717
n024=200276

[s008b]
n002=S_OpenMenuByMbrOnlyIfOption
n003=右ボタンオプション有効時右クリックのみオープンへ
n01f=@@@
br_open_if_mbr(S_ShowGroupNodeMenu);
br_notAbove(S_CheckMouseGN);
@@@

n020=@@@
?
?
@@@

n022=@@@
/GroupNodeWork/
(1545,528)
グループノード作業
@@@

n023=1633,393
n024=200229

[s008c]
n002=S_CheckOuter
n003=メインピクチャ内か？
n01f=@@@
br_isOuter(S_ShowOuterMenu);
br_notAbove(S_ShowBlankMenu);
@@@

n020=@@@
外
中
@@@

n022=@@@
/BlankWork/
(1547,660)
ブランク空間作業
@@@

n023=576,546
n024=200277

[s008d]
n002=S_Draw_AllFoucs
n003=全選択DRAW
n005=S_FocusTrackRecord
n014=draw_focuses();
n021=NoWait();
n022=@@@
/
(0,0)
The root
@@@

n023=1035,1128
n024=200266

[s008e]
n002=S_AlignHorizontally
n003=水平にそろえる
n005=S_CheckMouseGF
n009=align_horizontal();
n022=@@@
/GroupFocus/
(1533,1397)
グループフォーカス作業
@@@

n023=1896,815
n024=200279

[s008f]
n002=S_AlignVertically
n003=垂直にそろえる
n005=S_CheckMouseGF
n009=align_vertical();
n022=@@@
/GroupFocus/
(1533,1397)
グループフォーカス作業
@@@

n023=1900,896
n024=200280

[s0090]
n002=S_CommentOut
n003=コメントアウト
n005=S_RedrawOpt
n009=comment_out_gf();
n022=@@@
/GroupFocus/
(1533,1397)
グループフォーカス作業
@@@

n023=1901,962
n024=200326

[s0091]
n002=S_ShowOuterMenu
n003=外メニュー表示
n009=statemenuOuter_init();
n011=statemenuOuter_wait()
n01f=@@@
br_FocusHead(S_FocusHead);
br_notAbove(S_Idle2);
@@@

n020=@@@
?
?
@@@

n022=@@@
/BlankWork/
(1547,660)
ブランク空間作業
@@@

n023=830,158
n024=200278

[s0092]
n002=S_CCDRAGENTER
n003=コピーコレクションドラッグ開始
n005=S_DragMove1
n016=ovlbmp_create(G.m_cc_dropbmp);
n017=//ovldraw_do();
n018=@@@
ovlpb_setbmp();
ovlpb_show_cc();
@@@

n019=@@@
bmp作成
描画
表示
@@@

n021=NoWait();
n022=@@@
/
(0,0)
The root
@@@

n023=650,2470
n024=200291

[s0093]
n001=(bitmap)
n002=S_DragMove1
n003=ドラッグ移動
n00f=move_update_cc();
n011=wait_cc_dd()
n01f=@@@
br_Ok(S_CCRESET);
br_notAbove(S_CCRESET1);
@@@

n020=@@@
ドロップ時
キャンセル時
@@@

n022=@@@
/
(0,0)
The root
@@@

n023=899,2453
n024=200292

[s0094]
n001=(bitmap)
n002=S_COPY_CLIPBOARD
n009=cc_copy_clipboard();
n01f=@@@
br_Ok(S_ImportClipboard2);
br_notAbove(S_Idle2);
@@@

n020=@@@
OK
CANCEL
@@@

n022=@@@
/
(0,0)
The root
@@@

n023=1467,2390
n024=200303

[s0095]
n002=S_CCRESET
n005=S_COPY_CLIPBOARD
n009=@@@
ovlpb_hide();
G.m_cc_dragdrop=G.CCDD.none;
if (G.m_cc_dropbmp!=null)
{
    G.m_cc_dropbmp.Dispose();
    G.m_cc_dropbmp = null;
}

@@@

n022=@@@
/
(0,0)
The root
@@@

n023=1254,2393
n024=200314

[s0096]
n002=S_CCRESET1
n005=S_Idle2
n009=@@@
ovlpb_hide();
G.m_cc_dragdrop=G.CCDD.none;
if (G.m_cc_dropbmp!=null)
{
    G.m_cc_dropbmp.Dispose();
    G.m_cc_dropbmp = null;
}

@@@

n022=@@@
/
(0,0)
The root
@@@

n023=1237,2639
n024=200325



------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=config

###VARIOUS-CONTENTS-BEGIN###
; The setting was created automatically. 2022/05/07 12:09:02
; * pssgEditor version : 0.69.15095.8f2427b09778fae5a89b1b7643b85859014d0ebb
psggfile=@@@
ViewFormStateControl.psgg
@@@
xlsfile=@@@
ViewFormStateControl.xlsx
@@@
guid=@@@
c61d4c20-be19-44b3-abc7-16fdc984dbf3
@@@
bitmap_width=5000
bitmap_height=3000
c_statec_cmt=1
c_thumbnail=0
c_contents=0
force_display_outpin=0
last_action=@@@
init,Saved
@@@
target_pathdir=@@@
/SingleStateWork/
@@@
state_location_list=@@@

@@@
nodegroup_comment_list=@@@
[{"Key":"\/","Value":"The root"},{"Key":"\/BlankWork\/","Value":"ブランク空間作業"},{"Key":"\/SingleStateWork\/","Value":"ステート単体作業"},{"Key":"\/BranchEditorProc\/","Value":"ブランチエディタ処理"},{"Key":"\/FreeArrowWork\/","Value":"矢印と付随作業"},{"Key":"\/GroupFocus\/","Value":"グループフォーカス作業"},{"Key":"\/GroupNodeWork\/","Value":"グループノード作業"},{"Key":"\/UpgradeDialog\/","Value":"アップグレードダイアログと処理"},{"Key":"\/CenterAndFocusState\/","Value":"指定ステートをセンタリング＆フォーカス"},{"Key":"\/CenterAndFocusGroup\/","Value":"指定グループをセンタリング＆フォーカス"},{"Key":"\/InOutMenu\/","Value":"In Out メニュー作業"}]
@@@
nodegroup_pos_list=@@@
[{"Key":"\/","Value":{"x":0,"y":0}},{"Key":"\/BlankWork\/","Value":{"x":1547,"y":660}},{"Key":"\/SingleStateWork\/","Value":{"x":1542,"y":112}},{"Key":"\/BranchEditorProc\/","Value":{"x":1538,"y":446}},{"Key":"\/FreeArrowWork\/","Value":{"x":1006,"y":1432}},{"Key":"\/GroupFocus\/","Value":{"x":1533,"y":1397}},{"Key":"\/GroupNodeWork\/","Value":{"x":1545,"y":528}},{"Key":"\/UpgradeDialog\/","Value":{"x":734,"y":117}},{"Key":"\/CenterAndFocusState\/","Value":{"x":1550,"y":192}},{"Key":"\/CenterAndFocusGroup\/","Value":{"x":1556,"y":318}},{"Key":"\/InOutMenu\/","Value":{"x":1550,"y":790}}]
@@@
fillter_state_location_list=@@@
[{"Key":"\/","Value":[{"Key":"S_Init","Value":{"x":212,"y":108}},{"Key":"S_FocusCancelWithTick","Value":{"x":425,"y":1660}},{"Key":"S_GroupFocus","Value":{"x":678,"y":2087}},{"Key":"S_CheckMouseGF","Value":{"x":1431,"y":1386}},{"Key":"S_DragAndDropGF","Value":{"x":1431,"y":1386}},{"Key":"S_ShowStateMenuGF","Value":{"x":1431,"y":1386}},{"Key":"S_Grouping","Value":{"x":1431,"y":1386}},{"Key":"S_Refactor","Value":{"x":1232,"y":168}},{"Key":"S_MoveTo","Value":{"x":1431,"y":1386}},{"Key":"S_RedrawOpt","Value":{"x":2018,"y":841}},{"Key":"S_FocusGroupNode","Value":{"x":1232,"y":320}},{"Key":"S_CheckMouseGN","Value":{"x":1232,"y":320}},{"Key":"S_DragAndDropGN","Value":{"x":1232,"y":320}},{"Key":"S_ShowGroupNodeMenu","Value":{"x":1232,"y":320}},{"Key":"S_EnterGN","Value":{"x":1232,"y":320}},{"Key":"S_UngroupingGN","Value":{"x":1232,"y":320}},{"Key":"S_Ungrouping","Value":{"x":1431,"y":1386}},{"Key":"S_ShowBlankMenu","Value":{"x":1230,"y":497}},{"Key":"S_Rename","Value":{"x":1232,"y":168}},{"Key":"S_Copy","Value":{"x":1232,"y":168}},{"Key":"S_FocusState","Value":{"x":1232,"y":168}},{"Key":"S_IsMouseDown","Value":{"x":1232,"y":168}},{"Key":"S_FocusCancel","Value":{"x":431,"y":1283}},{"Key":"S_CheckMouse","Value":{"x":1232,"y":168}},{"Key":"S_Drag","Value":{"x":1232,"y":168}},{"Key":"S_DragMove","Value":{"x":1232,"y":168}},{"Key":"S_DragCancel","Value":{"x":1232,"y":168}},{"Key":"S_Delete","Value":{"x":1232,"y":168}},{"Key":"S_Drop","Value":{"x":1232,"y":168}},{"Key":"S_EditWait","Value":{"x":1232,"y":168}},{"Key":"S_BranchEditOpen","Value":{"x":668,"y":128}},{"Key":"S_BranchEditClose","Value":{"x":852,"y":126}},{"Key":"S_FreeArrow","Value":{"x":764,"y":1296}},{"Key":"S_Idle2","Value":{"x":428,"y":115}},{"Key":"S_FocusState2","Value":{"x":1232,"y":168}},{"Key":"S_ShowStateMenu","Value":{"x":1232,"y":168}},{"Key":"S_Edit","Value":{"x":1232,"y":168}},{"Key":"S_Leave","Value":{"x":1230,"y":497}},{"Key":"S_EditGN","Value":{"x":1232,"y":320}},{"Key":"S_Sliding","Value":{"x":1537,"y":1252}},{"Key":"S_Moveto","Value":{"x":1232,"y":168}},{"Key":"S_MovetoGN","Value":{"x":1232,"y":320}},{"Key":"S_NewState","Value":{"x":1230,"y":497}},{"Key":"S_CopyGN","Value":{"x":1232,"y":320}},{"Key":"S_DeleteGN","Value":{"x":1232,"y":320}},{"Key":"S_DeleteGF","Value":{"x":1431,"y":1386}},{"Key":"S_GroupFocus1","Value":{"x":982,"y":1686}},{"Key":"S_FocusOneState","Value":{"x":1215,"y":1666}},{"Key":"S_FocusOneGroup","Value":{"x":1216,"y":1773}},{"Key":"S_CenterFocusState","Value":{"x":679,"y":264}},{"Key":"S_CENTER_STATE","Value":{"x":914,"y":290}},{"Key":"S_DONE_CENTER_FOCUS_STATE","Value":{"x":1111.28577,"y":281.285736}},{"Key":"S_ShowAskUpdate","Value":{"x":724,"y":59}},{"Key":"S_OpenDataUpgrade_start","Value":{"x":703,"y":144}},{"Key":"S_OpenDataUpgrade_end","Value":{"x":921,"y":149}},{"Key":"S_OPEN_ALTDST_SELECT","Value":{"x":1010,"y":1422}},{"Key":"S_OPEN_ALT_SRC_SELECT","Value":{"x":971,"y":1280}},{"Key":"S_CHECK_DST","Value":{"x":1173,"y":1310}},{"Key":"S_TRANS_BRANCINFO","Value":{"x":1350,"y":1326}},{"Key":"S_Idle3","Value":{"x":175,"y":586}},{"Key":"S_needtrack","Value":{"x":682,"y":1981}},{"Key":"S_KeyExec","Value":{"x":754,"y":782}},{"Key":"S_ClearKeyExec","Value":{"x":762,"y":1136}},{"Key":"S_CheckMbrOption","Value":{"x":1261,"y":1076}},{"Key":"S_CheckMbrOption1","Value":{"x":698,"y":1725}},{"Key":"S_Draw_AllFoucs","Value":{"x":1035,"y":1128}},{"Key":"S_DragMove1","Value":{"x":899,"y":2453}},{"Key":"S_CCRESET","Value":{"x":1254,"y":2393}},{"Key":"S_CCRESET1","Value":{"x":1237,"y":2639}},{"Key":"S_CCDRAGENTER","Value":{"x":650,"y":2470}},{"Key":"S_COPY_CLIPBOARD","Value":{"x":1467,"y":2390}},{"Key":"____altnative_state____BlankWork","Value":{"x":1547,"y":660}},{"Key":"____altnative_state____SingleStateWork","Value":{"x":1542,"y":112}},{"Key":"____altnative_state____BranchEditorProc","Value":{"x":1538,"y":446}},{"Key":"____altnative_state____FreeArrowWork","Value":{"x":1006,"y":1432}},{"Key":"____altnative_state____GroupFocus","Value":{"x":1533,"y":1397}},{"Key":"____altnative_state____GroupNodeWork","Value":{"x":1545,"y":528}},{"Key":"____altnative_state____UpgradeDialog","Value":{"x":734,"y":117}},{"Key":"____altnative_state____CenterAndFocusState","Value":{"x":1550,"y":192}},{"Key":"____altnative_state____CenterAndFocusGroup","Value":{"x":1556,"y":318}},{"Key":"____altnative_state____InOutMenu","Value":{"x":1550,"y":790}}]},{"Key":"\/SingleStateWork\/","Value":[{"Key":"S_FocusState","Value":{"x":608,"y":764}},{"Key":"S_FocusCancelWithTick","Value":{"x":238.507751,"y":1155.57019}},{"Key":"S_Refactor","Value":{"x":2139,"y":1404}},{"Key":"S_Rename","Value":{"x":2139,"y":1118}},{"Key":"S_Delete","Value":{"x":2139,"y":943}},{"Key":"S_Copy","Value":{"x":2139,"y":796}},{"Key":"S_ShowStateMenu","Value":{"x":1271,"y":931}},{"Key":"S_FocusState2","Value":{"x":461,"y":34}},{"Key":"S_Idle2","Value":{"x":175.512329,"y":179.981186}},{"Key":"S_EditWait","Value":{"x":2088,"y":304}},{"Key":"S_Edit","Value":{"x":1842,"y":421}},{"Key":"S_Drop","Value":{"x":2324,"y":147}},{"Key":"S_DragCancel","Value":{"x":454,"y":190}},{"Key":"S_DragMove","Value":{"x":2092,"y":100}},{"Key":"S_Drag","Value":{"x":1843,"y":117}},{"Key":"S_CheckMouse","Value":{"x":1274,"y":107}},{"Key":"S_FocusCancel","Value":{"x":191.348022,"y":869.6782}},{"Key":"S_IsMouseDown","Value":{"x":1040,"y":117}},{"Key":"S_RedrawOpt","Value":{"x":3578.08057,"y":1222.18811}},{"Key":"S_Moveto","Value":{"x":2139,"y":1265}},{"Key":"S_EditBranch","Value":{"x":1845,"y":586}},{"Key":"S_EditBranchWait","Value":{"x":2139,"y":555}},{"Key":"S_AddBranch","Value":{"x":2139,"y":656}},{"Key":"S_OpenLink","Value":{"x":2139,"y":1672}},{"Key":"S_ExportClipboardSM","Value":{"x":2139,"y":1790}},{"Key":"S_CheckCtrKey","Value":{"x":256,"y":617}},{"Key":"S_GroupFocus_2States","Value":{"x":445,"y":612}},{"Key":"S_CheckMouseGF","Value":{"x":650.507751,"y":610.5702}},{"Key":"S_CheckCtrKey1","Value":{"x":1514,"y":306}},{"Key":"S_FocusCancel1","Value":{"x":1734,"y":323}},{"Key":"S_FocusOneState","Value":{"x":815.507751,"y":195.57019}},{"Key":"S_OPEN_SRC","Value":{"x":2139,"y":2042}},{"Key":"S_VIEW_EXSTATE","Value":{"x":2139,"y":2164}},{"Key":"S_DONE_CENTER_FOCUS_STATE","Value":{"x":667,"y":62}},{"Key":"S_Change","Value":{"x":2139,"y":1539}},{"Key":"S_Focus","Value":{"x":2139,"y":2350}},{"Key":"E_Idle3","Value":{"x":398,"y":327}},{"Key":"S_SetNeedTrack","Value":{"x":398,"y":288}},{"Key":"S_TrackResultBranch","Value":{"x":645,"y":285}},{"Key":"S_CheckKeyExec","Value":{"x":1276,"y":366}},{"Key":"S_FOCUSTRACK_IFNEED","Value":{"x":683,"y":96}},{"Key":"S_CHECK_MRB_OPTION","Value":{"x":1439,"y":609}},{"Key":"S_CopyStateName","Value":{"x":2139,"y":1901}},{"Key":"S_Draw_AllFoucs","Value":{"x":2386,"y":1901}},{"Key":"S_Delete1","Value":{"x":2675,"y":927}},{"Key":"S_Delete2","Value":{"x":2410,"y":875}},{"Key":"S_INSERT_NEW","Value":{"x":553.5385,"y":1064.23071}},{"Key":"S_RemoveComment","Value":{"x":2139,"y":717}}]},{"Key":"\/GroupFocus\/","Value":[{"Key":"S_FocusCancel","Value":{"x":1560,"y":1031}},{"Key":"S_GroupFocus","Value":{"x":114.285675,"y":65.7142944}},{"Key":"S_CheckMouseGF","Value":{"x":433,"y":129}},{"Key":"S_DragAndDropGF","Value":{"x":1567,"y":90}},{"Key":"S_ShowStateMenuGF","Value":{"x":1567,"y":533}},{"Key":"S_Grouping","Value":{"x":1868,"y":129}},{"Key":"S_MoveTo","Value":{"x":1890,"y":602}},{"Key":"S_Ungrouping","Value":{"x":1894,"y":710}},{"Key":"S_RedrawOpt","Value":{"x":2287.02,"y":538.619141}},{"Key":"S_DeleteGF","Value":{"x":1893,"y":439}},{"Key":"S_ExportClipboard","Value":{"x":1865,"y":1084}},{"Key":"S_GroupFocus_2States","Value":{"x":184.142761,"y":881.5714}},{"Key":"S_AddStateInGF","Value":{"x":1569,"y":771}},{"Key":"S_RemoveStateInGF","Value":{"x":1556,"y":255}},{"Key":"S_Idle2","Value":{"x":2549.02,"y":538.619141}},{"Key":"S_GroupFocus1","Value":{"x":40.3529434,"y":150.470581}},{"Key":"S_FocusOneState","Value":{"x":2285.57129,"y":109.428574}},{"Key":"S_FocusOneGroup","Value":{"x":2330.92432,"y":282.89917}},{"Key":"S_FocusTrackRecord","Value":{"x":250,"y":212}},{"Key":"S_GroupFocus_2States1","Value":{"x":230,"y":90}},{"Key":"S_GroupFocus_2States2","Value":{"x":1534,"y":213}},{"Key":"S_CheckKeyExec2","Value":{"x":730,"y":406}},{"Key":"S_ShowStateMenu","Value":{"x":1822,"y":1031}},{"Key":"S_OpenMenu_w_mbr","Value":{"x":858,"y":132}},{"Key":"S_Draw_AllFoucs","Value":{"x":1120,"y":132}},{"Key":"S_AlignHorizontally","Value":{"x":1896,"y":815}},{"Key":"S_AlignVertically","Value":{"x":1900,"y":896}},{"Key":"S_CommentOut","Value":{"x":1901,"y":962}}]},{"Key":"\/ShowBlankMenu\/","Value":[{"Key":"S_Idle2","Value":{"x":375.9669,"y":231.9509}},{"Key":"S_RedrawOpt","Value":{"x":1615.9082,"y":457.833221}},{"Key":"S_ShowBlankMenu","Value":{"x":844.084534,"y":533.1274}},{"Key":"S_Leave","Value":{"x":1228.73169,"y":575.480347}}]},{"Key":"\/GroupNodeWork\/","Value":[{"Key":"S_FocusCancel","Value":{"x":36.3480225,"y":748.951}},{"Key":"S_Idle2","Value":{"x":305.9669,"y":295.9509}},{"Key":"S_FocusCancelWithTick","Value":{"x":170.68959,"y":990.933838}},{"Key":"S_RedrawOpt","Value":{"x":2836.023,"y":1101.934}},{"Key":"S_FocusGroupNode","Value":{"x":767,"y":555}},{"Key":"S_CheckMouseGN","Value":{"x":1004,"y":544}},{"Key":"S_DragAndDropGN","Value":{"x":1349,"y":403}},{"Key":"S_ShowGroupNodeMenu","Value":{"x":1869,"y":603}},{"Key":"S_EnterGN","Value":{"x":2161,"y":518}},{"Key":"S_UngroupingGN","Value":{"x":2166,"y":673}},{"Key":"S_EditGN","Value":{"x":2176,"y":830}},{"Key":"S_MovetoGN","Value":{"x":2183,"y":1057}},{"Key":"S_CopyGN","Value":{"x":2183,"y":1441}},{"Key":"S_DeleteGN","Value":{"x":2181,"y":1237}},{"Key":"S_ExportClipboardGN","Value":{"x":2182,"y":1552}},{"Key":"S_FocusOneGroup","Value":{"x":2444.3335,"y":1552}},{"Key":"S_ReFocus1","Value":{"x":1163,"y":393}},{"Key":"S_DONE_CENTER_FOCUS_STATE1","Value":{"x":625,"y":245}},{"Key":"S_NeedTrack","Value":{"x":575,"y":558}},{"Key":"S_TrackResultBranch","Value":{"x":555,"y":624}},{"Key":"S_TICK","Value":{"x":993,"y":450}},{"Key":"S_ShowStateMenu","Value":{"x":428.348022,"y":783.951}},{"Key":"S_FocusCancel1","Value":{"x":2154,"y":1549}},{"Key":"S_CheckCtrKey2","Value":{"x":528,"y":1112}},{"Key":"S_CheckCtrKey3","Value":{"x":516,"y":1284}},{"Key":"S_GroupFocus_2States1","Value":{"x":770,"y":1164}},{"Key":"S_CheckMouseGF","Value":{"x":1066.023,"y":1242.3783}},{"Key":"S_GroupFocus_2States2","Value":{"x":769,"y":1345}},{"Key":"S_CheckKeyExec1","Value":{"x":1341,"y":623}},{"Key":"S_FOCUSTRACK_IFNEED1","Value":{"x":677,"y":226}},{"Key":"S_KeyExec","Value":{"x":137.999908,"y":1361}},{"Key":"S_OpenMenuByMbrOnlyIfOption","Value":{"x":1633,"y":393}},{"Key":"S_Draw_AllFoucs","Value":{"x":1611,"y":698}}]},{"Key":"\/BlankWork\/","Value":[{"Key":"S_Idle2","Value":{"x":47,"y":653.3356}},{"Key":"S_RedrawOpt","Value":{"x":1896.9668,"y":1542.95093}},{"Key":"S_ShowBlankMenu","Value":{"x":918,"y":537}},{"Key":"S_Leave","Value":{"x":1369,"y":316}},{"Key":"S_NewState","Value":{"x":1369,"y":407}},{"Key":"S_HistoryBack","Value":{"x":1369,"y":555}},{"Key":"S_HistoryForward","Value":{"x":1369,"y":623}},{"Key":"S_ImportClipboard","Value":{"x":1369,"y":693}},{"Key":"S_GroupFocus","Value":{"x":50,"y":100}},{"Key":"S_RedrawOpt1","Value":{"x":2291,"y":773}},{"Key":"S_GroupFocus1","Value":{"x":2890.75757,"y":774.636353}},{"Key":"S_DrawFocuses","Value":{"x":2519,"y":777}},{"Key":"S_TrackBack","Value":{"x":860,"y":1159}},{"Key":"S_TrackForward","Value":{"x":843,"y":1300}},{"Key":"S_TrackResultBranch","Value":{"x":1062,"y":1197}},{"Key":"S_FocusState","Value":{"x":1369,"y":1200}},{"Key":"S_FocusGroupNode","Value":{"x":1369,"y":1270.44653}},{"Key":"S_ImportClipboard1","Value":{"x":1369,"y":811}},{"Key":"S_ImportClipboard2","Value":{"x":853,"y":1473}},{"Key":"S_KeyExec","Value":{"x":277.110046,"y":1026}},{"Key":"S_OpenMenuByMbrOnlyIfOption1","Value":{"x":355,"y":580}},{"Key":"S_SaveHistory_ommit","Value":{"x":2060,"y":775}},{"Key":"S_FocusHead","Value":{"x":1369,"y":1096}},{"Key":"S_FocusTail","Value":{"x":1369,"y":1152}},{"Key":"S_HistoryShow","Value":{"x":1369,"y":494}},{"Key":"S_TrackShow","Value":{"x":1369,"y":1026}},{"Key":"S_ImportClipboardAsBase","Value":{"x":1369,"y":928}},{"Key":"S_CheckOuter","Value":{"x":576,"y":546}},{"Key":"S_ShowOuterMenu","Value":{"x":830,"y":158}},{"Key":"S_COPY_CLIPBOARD","Value":{"x":1092,"y":158}}]},{"Key":"\/CenterAndFocus\/","Value":[{"Key":"S_Idle2","Value":{"x":50,"y":100}},{"Key":"S_CenterFocusState","Value":{"x":679,"y":264}},{"Key":"S_CENTER_STATE","Value":{"x":914,"y":290}},{"Key":"S_DONE_CENTER_FOCUS_STATE","Value":{"x":1111,"y":281}}]},{"Key":"\/BranchEditorProc\/","Value":[{"Key":"S_BranchEditOpen","Value":{"x":966,"y":161}},{"Key":"S_BranchEditClose","Value":{"x":1178,"y":158}},{"Key":"S_Idle2","Value":{"x":376,"y":125}},{"Key":"S_BranchEditOpen1","Value":{"x":660,"y":258}},{"Key":"S_BranchEditOpen2","Value":{"x":1452,"y":352}}]},{"Key":"\/CenterAndFocus1\/","Value":[{"Key":"S_Idle2","Value":{"x":50,"y":100}},{"Key":"S_DONE_CENTER_FOCUS_STATE1","Value":{"x":1111,"y":281}}]},{"Key":"\/CenterAndFocusGroup\/","Value":[{"Key":"S_Idle2","Value":{"x":93,"y":169}},{"Key":"S_DONE_CENTER_FOCUS_STATE1","Value":{"x":1260,"y":477}},{"Key":"S_CenterFocusGroup","Value":{"x":651,"y":465}},{"Key":"S_CENTER_GROUP","Value":{"x":854,"y":472}},{"Key":"S_CheckMouseGN","Value":{"x":1709,"y":383}},{"Key":"S_KeyExec","Value":{"x":277,"y":31}},{"Key":"S_LOCALE_POINTER1","Value":{"x":1055,"y":471}},{"Key":"S_FOCUSTRACK_IFNEED1","Value":{"x":1548,"y":549}},{"Key":"S_NEED_TRACK1","Value":{"x":486,"y":166}}]},{"Key":"\/CenterAndFocusState\/","Value":[{"Key":"S_Idle2","Value":{"x":131.111115,"y":127.777771}},{"Key":"S_CenterFocusState","Value":{"x":693,"y":347}},{"Key":"S_CENTER_STATE","Value":{"x":868,"y":348}},{"Key":"S_DONE_CENTER_FOCUS_STATE","Value":{"x":1248,"y":349}},{"Key":"S_GroupFocus1","Value":{"x":393.1111,"y":127.777771}},{"Key":"S_IsMouseDown","Value":{"x":1218,"y":711}},{"Key":"S_LOCALE_POINTER","Value":{"x":1059,"y":348}},{"Key":"S_KeyExec","Value":{"x":366,"y":23}},{"Key":"S_NEED_TRACK","Value":{"x":604,"y":79}},{"Key":"S_FOCUSTRACK_IFNEED","Value":{"x":1464,"y":359}}]},{"Key":"\/UpgradeDialog\/","Value":[{"Key":"S_Idle2","Value":{"x":119,"y":205}},{"Key":"S_ShowAskUpdate","Value":{"x":473,"y":36}},{"Key":"S_OpenDataUpgrade_start","Value":{"x":356,"y":393}},{"Key":"S_OpenDataUpgrade_end","Value":{"x":1193,"y":394}},{"Key":"S_Open_upgrade_dlg","Value":{"x":559,"y":372}},{"Key":"S_Restart_MSG","Value":{"x":802,"y":253}},{"Key":"S_Restart","Value":{"x":997,"y":268}}]},{"Key":"\/InOutMenu\/","Value":[{"Key":"S_RedrawOpt","Value":{"x":2240,"y":677}},{"Key":"S_Idle2","Value":{"x":76.76194,"y":298.0952}},{"Key":"S_PASS1","Value":{"x":1977,"y":682}},{"Key":"S_SHOW_INOUTMENU","Value":{"x":463,"y":756}},{"Key":"S_Focus1","Value":{"x":1012,"y":933}},{"Key":"S_BranchEditOpen1","Value":{"x":768.0953,"y":541}},{"Key":"S_KeyExec","Value":{"x":402.238,"y":39.7619324}},{"Key":"S_CHECK_CTRL","Value":{"x":780,"y":942}},{"Key":"S_CLEAR_DST","Value":{"x":775,"y":647}},{"Key":"S_INSERT_NEW","Value":{"x":771,"y":730}},{"Key":"S_FocusState","Value":{"x":1021,"y":724}},{"Key":"S_IsMouseDown","Value":{"x":1035,"y":712.5}}]}]
@@@
linecolor_data=@@@
[{"color":{"knownColor":0,"name":null,"state":2,"value":4285493103},"pattern":"BTN_BY.\\("}]
@@@
use_external_command=0
external_command=@@@
_convert.bat
@@@
source_editor_set=@@@

@@@
label_show=0
label_text=@@@

@@@
option_delete_thisstring=1
option_delete_br_string=1
option_delete_bracket_string=1
option_delete_s_state_string=1
option_copy_output_to_clipboard=0
option_convert_with_confirm=0
option_ignore_case_of_state=0
option_editbranch_automode=0
option_use_custom_prefix=0
option_omit_basestate_string=0
option_hide_basestate_contents=0
option_hide_branchcmt_onbranchbox=0
font_name=@@@
MS UI Gothic
@@@
font_size=11
comment_font_size=15
contents_font_size=0
state_width=140
state_height=20
state_short_width=50
state_short_height=20
comment_block_height=4
content_max_height=200
comment_block_fixed=0
line_space=-4
userbutton_title=@@@

@@@
userbutton_command=@@@

@@@
userbutton_callafterconvert=0
itemeditform_size_list=@@@
[{"Key":"init","Value":{"height":571,"width":966}},{"Key":"wait","Value":{"height":398,"width":715}},{"Key":"statemenu","Value":{"height":397,"width":760}},{"Key":"focus","Value":{"height":611,"width":760}}]
@@@
decoimage_typ_name=@@@
sym
@@@
use_donotedit_mark=0
donotedit_mark_columns=@@@
76,116,136
@@@
donotedit_mark=@@@
*DoNotEdit*
@@@

###VARIOUS-CONTENTS-END###


------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=template-source

###VARIOUS-CONTENTS-BEGIN###
:output=ViewFormStateControl_created.cs
:tempfunc=templatefunc.txt
:enc=utf-8
::
using G=stateview.Globals;
public partial class ViewFormStateControl {
    $contents2$
}
###VARIOUS-CONTENTS-END###


------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=template-statefunc

###VARIOUS-CONTENTS-BEGIN###
/*
    [[state]]
    [[state-cmt]]
*/
void [[state]](int phase, bool bFirst)
{
}
###VARIOUS-CONTENTS-END###


------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=setting.ini

###VARIOUS-CONTENTS-BEGIN###
[setting]

psgg=ViewFormStateControl.psgg
xls=ViewFormStateControl.xlsx
sub_src=ViewFormStateControl.cs
gen_src=ViewFormStateControl_created.cs

[setupinfo]

genrdir=..\created
lang=c#
framework=vs2015
###VARIOUS-CONTENTS-END###


------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=help

###VARIOUS-CONTENTS-BEGIN###

###VARIOUS-CONTENTS-END###


------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=itemsinfo

###VARIOUS-CONTENTS-BEGIN###
[inpmethod]

init=
branch-cmt=
ovlbmp=
state-ref=
wait=
pointer=
ovlpb=
embed=
freearrow=
subsc_init=
statemenu=
statebox-cmt=
tab=
branch=
!dir=
focus=
nextstate=
members=
thumbnail=
timelen=
nowaitbranch=
state-cmt=
move=
ovl-cmt=
statebox=
!uuid=
branchdlg=
!pos=
editbox=
state=
S_=
focus-cmt=
subsc_update=
update=
postwait=
vars=
C_=
E_=
ovldraw=
[stateloc]

E_=S1
S_=S0
C_=S2
[itemcond]

thumbnail=read_only,share,S.+
state-ref=read_only,exclusion,(S0)
branch=read_only,exclusion,S0
state=read_only,share,S.+
nextstate=read_only,exclusion,S0
return=read_only,exclusion,S0
brcond=read_only,exclusion,S0
gosubstate=read_only,exclusion,S0
embed=read_only,exclusion,(S0)
basestate=read_only,share,S.+
###VARIOUS-CONTENTS-END###



------#======*<Guid(4DC98CBA-6257-4E26-A454-A53F85BC234C)>*======#------

hash=#ITN7ppteayD^0p4sxQP51g==

###BITMAP-DATA-BEGIN###
iVBORw0KGgoAAAANSUhEUgAAAIcAAAB1CAYAAABkvfIYAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAOwwAADsMBx2+oZAAAESpJREFUeF7tnVdwlccVx/2c6rd48uAZ5zUztsEBhAEVkLBxiWOwhQEHJ3gkwHE8ATuYocR5SJhMwsSNGJuYLkTvHdFFB4Oppjchiuiil+Hk/PbeVT7ufB+6QlcXJJ+d+c/9yu7ZvXv+e/bs7rnSI5YsWbJkyZIlS5YsWbJkyZIlS5YsWdLU4bksyc9trsiQ9jlN5E9dO0jPji+669jzmqND66byfrd86fZqnrsOy5MMXm+TIX0KOslvX8qW19o0C81THZDxxnMtpG/3Lu6T+7B81YH6aQftuV8ZgP6gX+if2vQN+kFP6Cumqwzp0DZTWrfOkbhqa59ODXxGDv/zN3Lq885S8XmnFCJV8kxOMigb3F7KBzZzBImrtvbp7KBsKRo9Rnr1/kC6d+9ZhR49aodUyumRKjkhz2uEFH6nVMkpLOwhvXq9LyNGjnEEwarEVVv7VDn4efmo/wD5wQ9/JHltciU7K9tQj9A2L09++uij8u6778npIZ1TS46L/3pO+vXpI02bZsj60lJZsnChoR5h09q1ktumjVqRHm56STk5+n/4oTRu/CtZNHeuTJ882VCPsGTBAsnKzHTTTNrIMW3SJJk6caLDNEWwQVEIlklEMjIoD8LeJSIsb2i9Scqrr0g7OaZOmCCzp0+XebNny7xZs2TWtGmuoxMbFgRKmKn5yE+5OTNmyNyZM6tkzNHrsHJBzJg61dUV9i4R5Jup+YPPqNPVH2hDGIkaEtJKjsnjx7tOLTtyRM6eOSMXzp+X8+fOOUXfq5MnFRfL6pUr5dzZsw5XrlyRixcvVt0fPnjwniOZ8hvWrJHDhw7JxHHjQvN48P7Avn3yzcaN7nqKknnhvHmuTl8fbb9+7ZpsXL/e5WmoBEkbORbMmSNzddShIBSNMhcqYa5qp585fdopMKyBHjOmTHEWB0VUnDrlFMM1z4IWAWWiMK80yk0oKpL1So7yY8dk7MiRrm6eT9Y6fV6IS/mJmvfo0aOydcsW9xx5SxctkvNKZOoB0zTfnt275c6dO7Ip3g5kIoNPyt2rDtfOeF7ycD9J31f1gT6jXuDzPwikjRyz1EwfV+XQ6eNGj3YdSmctVq94965dSXUEZejkE8ePy9pVq9w1zzwJuF+sX2jzpk2yWUc+nUwdKBTrgpXasG6dyzN+7FhZsXSpsxDkX7ViRUyJSo4jhw/Lt5s3u3tPjjNqLVAmoD4USbtv37ol83WaoY5lixe7KWeDevl8r6o6NmyI1aGDApnIWFpS4iySI4j2Dd+ndPlyJ5tnS7TORfPnu+uwvkgH0kYOpg467dCBAzJbp5biMWPciAaMorDGhQGlQI51q1ffZW3odDr7iFomiHCsrEy2KREZ5SiM6eDq1atyVBW/UhWG9aKNJ0+ccNaMciiHdkWRwxOR+viEeFg9yLFy2TJnmTYpEW4pYZYqUSCDq+PkyVgdKndVvI5jap22b93qrpFHPqwoZCgaMcK1Z69aJ/rHf8d0I30+hyrOmXclCJ20b88eOahEoYNQQljjwhBGDhSINaBDUXzRqFHuXaX6JSU6grFU5C9ThYzRjucdyv9u505X99dDh0qpKhdFM+0kSw4+8T8gByP90qVL7jstX7LEKX3LN9/E6tD6qAMrQh20oVzJy3usC3VBWghM27BAB/bvd9YlGYtaV0irQ0qFEARF7di2zY1sRse2b79NuhPCyIFMZDAaxykxsBZMM3Q2phkF4BswslE478ar8oqVNCiBcigZhY1l1CZJDuDJgSIvX77sLAjt8XVATBzcYB20Z5nmP6h1QwRkY7VOK3GKlJx7vvtO9msZSB787ulGWsnhOxSl0vF8+RU6ylBi0Fm7F8LIgSyUySpognY8ddyLHNSFv4Bjy+hdXVrqLNnx8vKkLQfmn2vqgBxYC6aoCfFpgjqwGr6ONVoHA4E6aHexfnfy41if0mmHduIn4ZNtV6JDqAc5pYC0kWOOripQCJ1O59DpfHnM+emKilqTA8eS0cnqAFkoj6XyIv2Cnhz4IZh7nE6cU6Y0RjfWgtUMcqPIwahGLnBWTokBGTeqg0s7sBgQwftPPDurxMFC+jpoM3XwjtUJ5KDdPGPVxbSDf+It6sNCDg7hKoZ0lg8LO9cNOWarN4+5ZF6mk+br0hYwcvAFakIOlIAyPTkYwZABZUNAnF98EPItUIvlyKGOIgpmE2uGljmqisX/wTlGsexjnFQl4Q+U4czq6A2So7Ky0o1ugIO7f+9euaYOboneQzhWO0wbnhyQlDpwwhPrQC7kwDm/efOm85N4xtR04/p1R052fb2VelBItBxvvpBVd9MKSzZAp9CRgA5kCkAJbkSFIEgcrjG5zNHB53Qm9xDEy2Y5iVyeoxz2KnjurQ4OLPd88gyF4yNAMJa85IF0kBhL4+UClO6VRx34DofYjMOq0B59BwmDdayN1+HaHS/L9y9RJfAMYmGJ9j0EVgMkkoNApLhqa5/CfA46O7ERdAojEisSBkZlcBRFjSieR+W71zvgfQj/LvF92H3id6muTLAO/766PA8SaXVIfaW+UzwwwRAAhzEMOHZung+U99dh8HKre+7v/bPEzyCCecPe+zxhz4JlEvNElUl89iDwQMgRBkYM824YIE9YGUPd4qEhh+Hhg5HDEAkjhyESkKNlixZSWNjdyGG4GyXz5smvX3pJevXqLSc/7WjkMPwfhCEMHTJERo0c5X5/lFZysGRjoynxeRDkCa5W2CzyG01B3Gu1E4RbEk+JB9io3LBlY2Id5AmTlYiGtqpiWsnJzpaePd9J77SCMtkZDZ6RJAKlED3mN8Eow/kDW9Zc+3wonE00ziQ8OMBiy3zr5s1uK9w/p7zfMyGmw8eCIs/viC4P1ME7tr+RVyVf5XEmwoFaUDbfJdiu+g7IkdmqVXp/mkCHo6BdO3e6wzJ2QcO2izl/YFv68qVLbjRzRkI0GQoJ5ucd+Th+58CKMxw+idIi8IftcO7ZuuZMhhHOSHcHczqvIpeTVaKxRg4b5ra0UfyY4cNdOwlgdvEncfm0m3MVTlPZoPOxKUR7NTRypHW1AjFQ5l5VICeWs6ZPdwoklC6ocDdi9R0dv04VyjtONl1eHbXEPTDSkUV+iMQZhSOClqHctWvXXH5PmNVqgTjSR+GM9OvXr7sILQ7SCMIhgotzG+IyOIrnrATLBTloA4d2yPcHiJyq7tZriEQ+zkWS/alFfUBayeGJQefuVGIwglE6PwPgMI5pgHvyMQI5UfUxGZxmspVOqN+FCxdc0AzPUK4LrFGloziUjHXYoqP4iip55/bt7p5IKxdvofIhB1MKJICg1I/VQS6HYxyUYT045uedi+dQuZCS6DIsDId4tBliXKqsdCe857RcTUIeH3akjRxEmqNworYxxc4pVND5kIHRiYI4ZidwBgWiEJTBiEWZnMSiYGRDBE5aS9Ua8EVQOtMNUxBxGyfKy+XmjRtOHvecqqJwphPqIz9xJJy4chJLMA6yR+i0AuHctKKWCusEOYi5gByQbNTXXzuZ+BhT9DshB8tySss3ZHLU2akswT5Yi21btzqTj+IZfcRJnFPF0cGMYnwAphOsAWaf0Q9RUCAjmZgIAnGYKojbxGLwRZguKM/R+DziORYulItqCSAV8R07tF7iRsjvyQhhcFD52QT1QEQsFdaJd5AxSA7IcEMJR9shHkSk7dSzRq1JQydHl3Yp/BMMd1kOVQAKQekeWAhMefC3J0w7flpZUlLiFME1oXM4fDiFxFJAGEYvkWTOCdQy+AhBcjBtEALoyVGhBMTHwT+BoPgYOJWQAAUTbIPFIdgHBxdLg2XBl/GWAwcaq0O4H34SK5mGbjnqPBLM+xwoko5HISib0croZrmKb+EUrQ3jE0eREYzFwZxTrkKV6SO8ye8CbDQv91gVRj1TCaTCd+AT5eEXMOpRKFML5MRKEDGGHCwBPgwWBPgQPmTzi3PIQYwnZSALKx2sF+TjO3wfppWOec/WHTmokBGPQ0pnE7bnlKKdyj1LWr/ngVJYXhJGt2vHDjeqcUhZQvJTSEYuvohfrTCtkA+FEbZHeerik5HOSgJLw7UnKeTBF2J6woIMHzrUObA7FMO//NJZNQgJeWgf0w9OKESFlP63KJSBnMgwnyPJFCQH+/QokuBefj6AU8d0wihnWcoy1QX/6qhGcYAfKaFAditRNPmqlrL8BEGV7L8Icv2eg/creM6nDyCmLk8O6jmjFgUfhw0vrA5Tl/v9roJwQ+Qx3dEOLBLkIw9TFO89WBZDGOR7sjYEJJKjzlYr+AEs9xhtKJgRyOi/fft27J6RGB+NOIAojxGLw8oUgEKxDmGbYGCivsNq4JN4JxWC4W/wDLlMX5AMBbLjSd1YA6YWLBQWDUIAZAF8FDft8F7vgX/nwcqJpTVTjpEjyRQkx3ydAoiy9lvNKJhVB3sbVc/iYKSiRBSDQn1jUXbY9rl/x/TA9OPfQSisE3WxVMW6+LysPKibpTSOMstiSAXpHPSaPExdyMBHqnqXAH56gJzEWNf6jrSRA58DhWMRqgPK89bC+yAejMywgzeAfBB85qeQxEMxN8Xpc1Y55Ak7NKNu3oW1IxG0uSEevKWNHGENMDy8MHIYImHkMETCyGGIRCI52jX9pZHDEIMnB8E+pwa/LMOG/TuV5Ghr5KjHgBxEghUUFErl2kkinw5OHTkuDMoyctRjVJGjsFBu3hGRH/8kdeS4dWSL9O/bVxo3amzkqIcIkuPG1asijz+eOnJcnvBB3HI8Y+Soh7iLHDduifzssRROK3/PtGmlHiNIjutnjos0r8O/zxHWAMPDC8jBaqWgoLuc/ur3UrFtnZHDEIMnh4sE+6yj9C7oZOQwxODJ4TfB2mc3MXIYYkgkh22fG6pg5DBEwshhiISRwxAJI4chEkYOQySMHIZIGDkMkTByGCJh5DBEwshhiISRwxAJI4chEkYOQyQSydEhp6mRwxBDIjm6579g5DDE4Mnh/yZYr7deM3IYYrBpxRAJc0gNkTByGCJh5DBEwshhiISRwxAJI4chEkYOQySMHIZIGDkMkTByGCJh5DBEwshhiISRwxAJI4chEonkaJ9tR/aGODw5fLDPe2++auQwxHAXOdRyvNPpZSOHIYbEacUiwQxVMIfUEIk6J0e/Pn2kSZNmsnr5ckcQQ/3B+tJSadO6tfuXGiknR+Xg553leOyxn8vAfv3kz717G+oR/jpggPziiSccOU7raiWl5Dj7j1z57Iv/SrOsttIoI0saNTfUK6jOmmbmyaCPv5Bjn3RUcqTwb59f+1sTOTDiAymf8JGUj/+LlBX1l7JxA9x1efHA+4OWPapyjtVWTrHKGatyuL5vObFyR8f2u+u+xtD6aQftuW8ZADnaL/RPrfpGy6In9HV8/EdycHRfuTAoU/LbtkwdOQZ3aS6fdnza4ePXn5TRPXJk+Nst3bV/XlN8nP+kFL3TRr56K8Ndh+VJBp8oxr2bJ/95s4l8kv9UaJ7qgIzPOzWW4j+2dZ/ch+WrDtRPO2jP/coA9Af9Qv/Upm/QD3pCX1x/9sbTMrhzhjyfm5M6cjzTsrV4PJWRKe27dJMXOnRy18F3NcHTau46/q5QWr/4qrsOy5MMGrfIkc5v95SWeS9Ko2ezQ/NUB2Q01SnzzYI/uE/uw/JVB+qnHbTnfmUA+oN+oX9q0zfoBz2hr6CusnNSSI4cFebRqlUr6dq1q+Tn57vr4LuaIFOXVt26dZNXXnnFXYflSQbZ2dlSUFAg7dq1k6ysrNA81QEZubm56rB1d5/ch+WrDtRPO2jP/coA9Af9Qv/Upm/QD3pCX4m6iqu29iko1MgRje8lOSxZsmTJkiVLlixZsmTJkiVLlixZqr/pkUf+B3F+lN/015ULAAAAAElFTkSuQmCC
###BITMAP-DATA-END###

hash=#KHjAZYwVw6uO1NAcbNZvHw==

###BITMAP-DATA-BEGIN###
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
###BITMAP-DATA-END###

hash=#qIqA2L+SLFJWx^9hrb9AKg==

###BITMAP-DATA-BEGIN###

###BITMAP-DATA-END###

hash=#uD0k52raoqP6ySPR9O9xjA==

###BITMAP-DATA-BEGIN###

###BITMAP-DATA-END###

hash=#upZu9wHi7AOfKbXuY6ZU9w==

###BITMAP-DATA-BEGIN###
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
###BITMAP-DATA-END###


