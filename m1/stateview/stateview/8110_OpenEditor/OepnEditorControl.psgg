;PSGG Editor Backup File
version=1.1
file=OepnEditorControl.xlsx
guid=61baf324-cf76-4f9e-836d-6a4338370e7f
;set read_from  excel or psgg
read_from=psgg
;set savemode with_excel or psgg_only
save_mode=psgg_only
;set check_excel_writable yes or no
check_excel_writable=no

------#======*<Guid(D13821FE-FA27-4B04-834C-CEC1E5670F48)>*======#------

sheet=state-chart
nameid_list=,n001,n002,n01c,n003,n004,n005,n006,,n007,,n008,,n009,n00a,n00b,n00c,,n00d,n00e,,n00f,n010,,n011,n012,,n013,n014,,,n022,n01e,n01f,n020,,n015,n016,n017,n018,,n019,n01a,n01b,,,,,,
stateid_list=,,,,s0001,s0002,s000f,s0010,s0011,s0012,s0013,s0018,s0023,s0024,s0025,s001c,s001d,s001e,s001f,s000e,s0021,s0020,s0022,,s0026
max_name_id=34
max_state_id=38
[id_name_dic]
n001=thumbnail
n002=state
n003=state-cmt
n004=state-ref
n005=basestate
n006=nextstate
n007=embed
n008=members
n009=vars
n00a=init
n00b=init-cmt
n00c=init-ref
n00d=update
n00e=update-cmt
n00f=wait
n010=wait-cmt
n011=post_wait
n012=post_wait-cmt
n013=gosubstate
n014=return
n015=branch
n016=branch-cmt
n017=brcond
n018=nowait
n019=!dir
n01a=!pos
n01b=!uuid
n01c=state-typ
n01e=loop_init
n01f=loop_cond
n020=loop_next
n022=loop


[id_state_dic]
s0001=S_START
s0002=S_END
s000e=S_CHECK_PLATFORM
s000f=S_FIND_EDITORPROC
s0010=S_OPTION_VS2005
s0011=S_EXEOPENVS
s0012=S_ASK_OPEN_FROM_UNITY
s0013=S_EXEC_EDITORCMD
s0018=S_HasSln
s001c=S_ErrMsg
s001d=S_CHECK_PLATFORM1
s001e=S_SETSLN
s001f=S_OPTION_VS2006
s0020=S_HasVSSln
s0021=S_ASKDIALOG
s0022=S_RESETSLN
s0023=S_PAS001
s0024=S_COMMAND_HAS_SLN
s0025=S_CHECK_VSEXE
s0026=S_CHECK_VSEXE1


[s0001]
n002=S_START
n01c=start
n006=S_FIND_EDITORPROC
n019=@@@
/
(100,100)
This is the root
@@@

n01a=24,33
n01b=100001

[s0002]
n002=S_END
n01c=end
n019=@@@
/
(100,100)
This is the root
@@@

n01a=2989,530
n01b=100002

[s000e]
n002=S_CHECK_PLATFORM
n003=プラットフォーム確認
n015=@@@
brifc(S_HasSln);
brelse(S_OPTION_VS2006);
@@@

n016=@@@
?
?
@@@

n017=@@@
isUnity()
?
@@@

n019=@@@
/
(100,100)

@@@

n01a=62,1035
n01b=100003

[s000f]
n001=(bitmap)
n002=S_FIND_EDITORPROC
n003=エディタのプロセスを探す。
n00d=var b = existsEditorProcess();
n015=@@@
brifc(S_OPTION_VS2005);
brelse(S_CHECK_PLATFORM);
@@@

n016=@@@
プロセスあり
?
@@@

n017=@@@
b
?
@@@

n019=@@@
/
(100,100)

@@@

n01a=36,310
n01b=100004

[s0010]
n001=(bitmap)
n002=S_OPTION_VS2005
n003=VSオプションが定義してあるか？
n00d=var b = hasVSOpenOption();
n015=@@@
brifc(S_CHECK_VSEXE);
brelse(S_EXEC_EDITORCMD);
@@@

n016=@@@
VSオプションあり
なし
@@@

n017=@@@
b
?
@@@

n019=@@@
/
(100,100)

@@@

n01a=273,133
n01b=100005

[s0011]
n001=(bitmap)
n002=S_EXEOPENVS
n003=VSオープン用のEXEを実行
n006=S_END
n00d=execVSOpen();
n019=@@@
/
(100,100)

@@@

n01a=1875,132
n01b=100006

[s0012]
n002=S_ASK_OPEN_FROM_UNITY
n003=@@@
Unity側からエディタを開いてから利用ください。
それとも、強制的にひらく？
Open or Cancel
@@@

n00d=var bOpen = showDialog_open_or_cancel();
n015=@@@
brifc(S_EXEC_EDITORCMD);
brelse(S_END);
@@@

n016=@@@
?
?
@@@

n017=@@@
bOpen
?
@@@

n019=@@@
/
(100,100)

@@@

n01a=2339,843
n01b=100007

[s0013]
n002=S_EXEC_EDITORCMD
n003=エディタ開くコマンド実行
n006=S_END
n00d=execOpenEditor();
n019=@@@
/
(100,100)

@@@

n01a=2352,421
n01b=100008

[s0018]
n002=S_HasSln
n003=Unityの現プロジェクトのソリューションファイルがあるかか？
n015=@@@
brifc(S_SETSLN);
brelse(S_ASK_OPEN_FROM_UNITY);
@@@

n016=@@@
?
?
@@@

n017=@@@
hasUnitySln()
?
@@@

n019=@@@
/
(100,100)

@@@

n01a=296,626
n01b=100009

[s001c]
n002=S_ErrMsg
n003=失敗
n006=S_END
n00a=showerr();
n019=@@@
/
(100,100)

@@@

n01a=1850,705
n01b=100013

[s001d]
n002=S_CHECK_PLATFORM1
n01c=pass
n003=new state
n006=S_EXEC_EDITORCMD
n019=@@@
/
(100,100)

@@@

n01a=1898,1185
n01b=100014

[s001e]
n002=S_SETSLN
n003=ソリューション名設定
n006=S_EXEC_EDITORCMD
n00a=m_sln = UnityUtil.GetSlnFile();
n019=@@@
/
(100,100)

@@@

n01a=1286,621
n01b=100015

[s001f]
n002=S_OPTION_VS2006
n003=VSオプションが定義してあるか？
n00d=var b = hasVSOpenOption();
n015=@@@
brifc(S_CHECK_VSEXE1);
brelse(S_CHECK_PLATFORM1);
@@@

n016=@@@
VSオプションあり
なし
@@@

n017=@@@
b
?
@@@

n019=@@@
/
(100,100)

@@@

n01a=279,1273
n01b=100016

[s0020]
n002=S_HasVSSln
n003=ソリューションがどこかにないか？
n00a=m_sln = FindSln();
n015=@@@
brifc(S_ASKDIALOG);
brelse(S_CHECK_PLATFORM1);
@@@

n016=@@@
ソリューションあり
?
@@@

n017=@@@
!string.IsNullOrEmpty(m_sln)
?
@@@

n019=@@@
/
(100,100)

@@@

n01a=1085,981
n01b=100017

[s0021]
n002=S_ASKDIALOG
n003=本ソリューションで開くか？
n009=var b = AskSlnDialog();
n015=@@@
brifc(S_CHECK_PLATFORM1);
brelse(S_RESETSLN);
@@@

n016=@@@
OK
?
@@@

n017=@@@
b
?
@@@

n019=@@@
/
(100,100)

@@@

n01a=1453,828
n01b=100018

[s0022]
n002=S_RESETSLN
n003=ソリューション削除
n006=S_CHECK_PLATFORM1
n00a=m_sln = null;
n019=@@@
/
(100,100)

@@@

n01a=1525,1020
n01b=100019

[s0023]
n002=S_PAS001
n01c=pass
n006=S_COMMAND_HAS_SLN
n019=@@@
/
(100,100)

@@@

n01a=117,899
n01b=100020

[s0024]
n001=(bitmap)
n002=S_COMMAND_HAS_SLN
n003=コマンドにソリューション代入があるか？
n009=var b =hasSlnInCommand();
n015=@@@
brifc(S_HasVSSln);
brelse(S_CHECK_PLATFORM1);
@@@

n016=@@@
?
?
@@@

n017=@@@
b
?
@@@

n019=@@@
/
(100,100)

@@@

n01a=761,1074
n01b=100021

[s0025]
n002=S_CHECK_VSEXE
n003=VSのEXEか？
n009=var b = checkVSExe();
n015=@@@
brifc(S_EXEOPENVS);
brelse(S_EXEC_EDITORCMD);
@@@

n016=@@@
YES
?
@@@

n017=@@@
b
?
@@@

n019=@@@
/
(100,100)

@@@

n01a=502,130
n01b=100022

[s0026]
n002=S_CHECK_VSEXE1
n005=S_CHECK_VSEXE
n015=@@@
brifc(S_COMMAND_HAS_SLN);
brelse(S_CHECK_PLATFORM1);
@@@

n019=@@@
/
(100,100)

@@@

n01a=524,1235
n01b=100023



------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=config

###VARIOUS-CONTENTS-BEGIN###
; The setting was created automatically. 2021/06/26 10:33:01
; * pssgEditor version : 0.69.58960.no hash because of debug
psggfile=@@@
OepnEditorControl.psgg
@@@
xlsfile=@@@
OepnEditorControl.xlsx
@@@
guid=@@@
61baf324-cf76-4f9e-836d-6a4338370e7f
@@@
bitmap_width=5000
bitmap_height=2000
c_statec_cmt=1
c_thumbnail=1
c_contents=1
force_display_outpin=0
last_action=@@@
mov,S_OPTION_VS2006
@@@
target_pathdir=@@@
/
@@@
state_location_list=@@@

@@@
nodegroup_comment_list=@@@
[{"Key":"\/","Value":"This is the root"}]
@@@
nodegroup_pos_list=@@@
[{"Key":"\/","Value":{"x":100,"y":100}}]
@@@
fillter_state_location_list=@@@
[{"Key":"\/","Value":[{"Key":"S_START","Value":{"x":24,"y":33}},{"Key":"S_END","Value":{"x":2989,"y":530}},{"Key":"S_CHECK_PLATFORM","Value":{"x":62,"y":1035}},{"Key":"S_FIND_EDITORPROC","Value":{"x":36,"y":310}},{"Key":"S_OPTION_VS2005","Value":{"x":273,"y":133}},{"Key":"S_EXEOPENVS","Value":{"x":1875,"y":132}},{"Key":"S_ASK_OPEN_FROM_UNITY","Value":{"x":2339,"y":843}},{"Key":"S_EXEC_EDITORCMD","Value":{"x":2352,"y":421}},{"Key":"S_CHECK_PLATFORM1","Value":{"x":1898,"y":1185}},{"Key":"S_HasSln","Value":{"x":296,"y":626}},{"Key":"S_ErrMsg","Value":{"x":1850,"y":705}},{"Key":"S_SETSLN","Value":{"x":1286,"y":621}},{"Key":"S_OPTION_VS2006","Value":{"x":279.2,"y":1273.4}},{"Key":"S_HasVSSln","Value":{"x":1085,"y":981}},{"Key":"S_ASKDIALOG","Value":{"x":1453,"y":828}},{"Key":"S_RESETSLN","Value":{"x":1525,"y":1020}},{"Key":"S_PAS001","Value":{"x":117,"y":899}},{"Key":"S_COMMAND_HAS_SLN","Value":{"x":761,"y":1074}},{"Key":"S_CHECK_VSEXE","Value":{"x":502,"y":130}},{"Key":"S_CHECK_VSEXE1","Value":{"x":524,"y":1235}}]},{"Key":"\/hoge2\/","Value":[{"Key":"S_START","Value":{"x":50,"y":100}},{"Key":"S_END","Value":{"x":926,"y":87}}]}]
@@@
linecolor_data=@@@
[{"color":{"knownColor":0,"name":null,"state":2,"value":4285493103},"pattern":"BACKTO_"}]
@@@
use_external_command=0
external_command=@@@

@@@
source_editor_set=@@@

@@@
label_show=0
label_text=@@@
test
@@@
option_delete_thisstring=1
option_delete_br_string=1
option_delete_bracket_string=1
option_delete_s_state_string=1
option_copy_output_to_clipboard=0
option_convert_with_confirm=0
option_ignore_case_of_state=0
option_editbranch_automode=1
option_use_custom_prefix=0
option_omit_basestate_string=0
option_hide_basestate_contents=1
option_hide_branchcmt_onbranchbox=0
font_name=@@@
MS UI Gothic
@@@
font_size=11
comment_font_size=13
contents_font_size=10
state_width=140
state_height=20
state_short_width=50
state_short_height=20
comment_block_height=2
content_max_height=200
comment_block_fixed=0
line_space=-1
userbutton_title=@@@

@@@
userbutton_command=@@@

@@@
userbutton_callafterconvert=0
itemeditform_size_list=@@@
[{"Key":"state-typ","Value":{"height":401,"width":330}}]
@@@
decoimage_typ_name=@@@
jGyosyo
@@@
use_donotedit_mark=0
donotedit_mark_columns=@@@
76,116,136
@@@
donotedit_mark=@@@
*DoNotEdit*
@@@

###VARIOUS-CONTENTS-END###


------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=template-source

###VARIOUS-CONTENTS-BEGIN###

###VARIOUS-CONTENTS-END###


------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=template-statefunc

###VARIOUS-CONTENTS-BEGIN###
<<<?state/^C_/
eof>>>

/*
    [[state]]
    [[state-cmt]]
*/

<<<?state/^E_/
[[embed]]
eof>>>

<<<?state-typ/^start$/
void [[state]](bool bFirst)
{
    Goto([[nextstate]]);
    NoWait();
}
eof>>>

<<<?state-typ/^end$/
void [[state]](bool bFirst)
{
}
eof>>>

<<<?state-typ/^gosub$/
void [[state]](bool bFirst)
{
    GoSubState([[gosubstate]],[[nextstate]]);
    NoWait();
}
eof>>>

<<<?state-typ/^substart$/
void [[state]](bool bFirst)
{
    Goto([[nextstate]]);
    NoWait();
}
eof>>>

<<<?state-typ/^subreturn$/
void [[state]](bool bFirst)
{
    ReturnState();
    NoWait();
}
eof>>>

<<<?state-typ/^loop$/
[[members]]
void [[state]](bool bFirst)
{
    [[loop_init]]
    Goto([[state]]_LoopCheckAndGosub____);
    NoWait();
}
void [[state]]_LoopCheckAndGosub____(bool bFirst)
{
    if ([[loop_cond]]) GoSubState([[gosubstate]],[[state]]_LoopNext____);
    else               Goto([[nextstate]]);
    NoWait();
}
void [[state]]_LoopNext____(bool bFirst)
{
    [[loop_next]]
    Goto([[state]]_LoopCheckAndGosub____);
    NoWait();
}
eof>>>

[[members]]
void [[state]](bool bFirst)
{
    [[vars]]

    <<<?init
    //
    if (bFirst)
    {
        [[init]]
    }
    >>>

    [[update]]

    <<<?wait
    if ([[wait]]) return;
    >>>

    [[post_wait]]

    <<<?branch
    // branch
    [[branch]]
    >>>

    <<<?nextstate
    //
    if (!HasNextState())
    {
        Goto([[nextstate]]);
    }
    >>>

    <<<?nowait
    //
    if (HasNextState())
    {
        NoWait();
    }
    >>>
}
###VARIOUS-CONTENTS-END###


------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=setting.ini

###VARIOUS-CONTENTS-BEGIN###
[setting]

starterkit=@@@
https://github.com/NNNIC/psgg-starter-kit.git GIT-COMMIT-HASH
@@@








psgg=OepnEditorControl.psgg
xls=OepnEditorControl.xlsx
sub_src=
gen_src=OepnEditorControl.cs

manager_src=
manager_dir=

template_src=
template_func=template-statefunc.txt

help=help.ini
helpweb=starterkit2\c-sharp\helpweb.html

src_enc=utf-8







[setupinfo]

starterkit=@@@
https://github.com/NNNIC/psgg-starter-kit.git GIT-COMMIT-HASH
@@@








lang=c#
framework=vs2015

statemachine=OepnEditorControl
prefix=__PREFIX__
xlsdir=@@@
C:\Users\gea01\Documents\psgg\psgg-editor\m1\stateview\stateview\8110_OpenEditor
@@@





gendir=@@@
C:\Users\gea01\Documents\psgg\psgg-editor\m1\stateview\stateview\8110_OpenEditor
@@@





genrdir=.
incrdir=.

code_output_start=[PSGG OUTPUT START]
code_output_end=[PSGG OUTPUT END]






[jpn]

title=C# スタートキット  2019/10/31

detail=@@@
C# 用のステートマシンを作成します。

# ファイル

      OepnEditorControl.pssg --- StateGoデータファイル。
      OepnEditorControl.cs   --- 変換コードを本ファイルに埋め込む。

@@@





[en]

title=C# STARTER KIT 2019/10/31

detail=@@@
To create c# Stata machine.

# File:

      OepnEditorControl.pssg  --- StateGo Data File.
      OepnEditorControl.cs   -- The editor will insert converted source code to this file.

@@@
###VARIOUS-CONTENTS-END###


------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=help

###VARIOUS-CONTENTS-BEGIN###
[nextstate]

jpn=次に実行するステートを指定する。
en=Specify the next state to be executed.
[branch]

jpn=@@@
分岐処理を指定する。
１行に一つの分岐命令を書く。
GUIにより上書きされるため引数は適当に指定する。
例）
br_YES(?);
br_NO(?);
br_UNKNOWN(?);
@@@

en=@@@
Specify branch functions.
Each line has a branch function.
Specify a tentavie parameter for each branch function because GUI overwrites the parameter.
i.e)
br_YES(?);
br_NO(?);
br_UNKNOWN(?);
@@@

[update]

jpn=更新処理を指定する。
en=Specify a update process.
[wait]

jpn=@@@
待ち条件を指定する。
true時にループを解除する。
@@@

en=@@@
Specify a waiting condition.
Release the loop if the condition is true.
@@@

[gosubstate]

jpn=@@@
サブルーチンを呼び出す。
サブルーチンの開始ステート名を指定する。
@@@

en=@@@
Call a subroutine.
Specify the starting state name of the subroutine.
@@@

[return]

jpn=サブルーチン処理を終了するときに指定する。"return"等を記述。
en=@@@
Use for returning from the subroutine. Write "return" etc.
@@@

[loop_next]

en=loop  iterator advence.
jpn=ループのイテレーターを更新
[loop_cond]

en=loop condition
jpn=ループ条件
[state]

jpn=@@@
ステート名を指定する。
英文字、数字、アンダーバーで構成される。
先頭は英文字およびアンダーバー。
@@@

en=@@@
Specify a state name.
The state name consits of alphabet, number and underbar except that the head characther should be alphabet or a underbar.
@@@

[members]

jpn=メンバ変数及び関数等を指定する。
en=@@@
Specify members, variables, classes,  etc.
@@@

[post_wait]

jpn='wait'後の処理を指定する。
en=Specify the post process after 'wait'.
[vars]

jpn=変数宣言を指定する。
en=Specify variable definitions.
[nowait]

jpn=@@@
次のステートへ同期待ちをせず実行する時に 'nowait'等を指定する。
同期待ち時には何も指定しない。
@@@

en=@@@
Specify 'nowait' and so on if the next state will be execute without a sync wait.
Do not specify any word wheh the next state will be execute with a sync wait.
@@@

[embed]

jpn=@@@
コード埋め込み用。
ステート名がE_時に利用可能。
ステート機能は利用できない。
@@@

en=@@@
For embedding code.
Enable this section if state name starts with "E_".
Disabled state features.
@@@

[basestate]

jpn=継承元を指定する。
en=Specify inheritance source.
[!uuid]

jpn=システムがステートのuuid指定に使用。
en=@@@
System uses this for the uuid of the state.
@@@

[init]

jpn=初期化用処理を指定する。
en=Specify a initial process.
[!dir]

jpn=システムがステートのディレクトリ指定に使用。
en=@@@
System uses this for the directory path of the state.
@@@

[loop_init]

en=loop initialization
jpn=ループ用初期化
[thumbnail]

jpn=説明用のイメージを指定する。
en=@@@
Specify a image for explanation of this state.
@@@

[loop_break]

en=Condition if break
###VARIOUS-CONTENTS-END###


------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=itemsinfo

###VARIOUS-CONTENTS-BEGIN###
[inpmethod]

init=
branch-cmt=
state-ref=
wait=
loop-next=
loop-cond=
loop_var=
embed=
loop_cond=
branch=
!dir=
basestate=
return=
post_wait-cmt=
state-cmt=
nowait=@@@
*select
nowait
@@@

members=
thumbnail=
update-cmt=
gosubstate=
loop_break=
loop_ver=
state-typ=@@@
*select
start
end
gosub
substart
subreturn
loop
pass
@@@

!pos=
!uuid=
nextstate=
state=
S_=
wait-cmt=
loop-init=
update=
init-cmt=
loop-ver=
loop_next=
vars=
loop=
C_=
brcond=
E_=
init-ref=
loop_init=
post_wait=
[stateloc]

E_=S1
S_=S0
C_=S2
[itemcond]

thumbnail=read_only,share,S.+
gosubstate=read_only,exclusion,S0
branch=read_only,exclusion,S0
state=read_only,share,S.+
nextstate=read_only,exclusion,S0
return=read_only,exclusion,S0
brcond=read_only,exclusion,S0
embed=read_only,exclusion,S1
basestate=read_only,share,S.+
state-typ=read_only,exclusion,(S0)
###VARIOUS-CONTENTS-END###



------#======*<Guid(4DC98CBA-6257-4E26-A454-A53F85BC234C)>*======#------


